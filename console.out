ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498 `" && echo ansible-tmp-1604663906.2439613-5768-200477523198498="` echo /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmns8bqmt TO /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/ /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421 `" && echo ansible-tmp-1604663907.1732137-5820-174007558261421="` echo /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpld5r2re0 TO /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/ /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.qhgc4ski",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762 `" && echo ansible-tmp-1604663907.5004537-5846-24311627337762="` echo /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfxmkvndv TO /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/ /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063 `" && echo ansible-tmp-1604663907.9946978-5882-12851382929063="` echo /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8f72axk7 TO /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/ /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050915",
    "end": "2020-11-06 11:58:28.340625",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:28.289710",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047 `" && echo ansible-tmp-1604663908.3865848-5913-208072562255047="` echo /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1y8xz2jx TO /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/ /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.o0x3pay8",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838 `" && echo ansible-tmp-1604663908.5629444-5939-173289286642838="` echo /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_ta14ui1 TO /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/ /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750 `" && echo ansible-tmp-1604663908.9023404-5975-275326116445750="` echo /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpa_8rb7d8 TO /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/ /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051942",
    "end": "2020-11-06 11:58:29.084942",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:29.033000",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898 `" && echo ansible-tmp-1604663909.2161424-6008-10714992650898="` echo /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfpqnx2em TO /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/ /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.8pvfsfn0",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307 `" && echo ansible-tmp-1604663909.3952746-6034-61787510727307="` echo /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4pmnm834 TO /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/ /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462 `" && echo ansible-tmp-1604663909.7320917-6070-211105019277462="` echo /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6mwv4_rm TO /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/ /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050135",
    "end": "2020-11-06 11:58:29.911202",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:29.861067",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041 `" && echo ansible-tmp-1604663909.9569445-6101-13685909620041="` echo /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvyeesf0_ TO /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/ /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.dttpj75h",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715 `" && echo ansible-tmp-1604663910.1381652-6127-14404923159715="` echo /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwpjy2p4q TO /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/ /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261 `" && echo ansible-tmp-1604663910.4803987-6163-224223260352261="` echo /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpq2q6b_2e TO /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/ /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.059677",
    "end": "2020-11-06 11:58:30.670154",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:30.610477",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854 `" && echo ansible-tmp-1604663910.771205-6197-147578061136854="` echo /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp78dhx_4z TO /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/ /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.7fpuzm73",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449 `" && echo ansible-tmp-1604663910.9498298-6223-142042759452449="` echo /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp112ch1ob TO /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/ /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530 `" && echo ansible-tmp-1604663911.4010527-6257-114094879633530="` echo /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo3udixbr TO /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/ /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.032131",
    "end": "2020-11-06 11:58:31.562536",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:31.530405",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146 `" && echo ansible-tmp-1604663911.818995-6298-22900696448146="` echo /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp61i4mw2y TO /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/ /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688 `" && echo ansible-tmp-1604663912.794064-6338-224880988011688="` echo /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp178oe5ee TO /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/ /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039 `" && echo ansible-tmp-1604663913.4338112-6366-160314149386039="` echo /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplarx_dvq TO /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/ /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875 `" && echo ansible-tmp-1604663914.234959-6406-10088584520875="` echo /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpqhbtwjdf TO /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/ /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735 `" && echo ansible-tmp-1604663915.3106432-6461-108293252327735="` echo /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo4iobr50 TO /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/ /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.kv0wdg2t",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335 `" && echo ansible-tmp-1604663915.489033-6487-13077265458335="` echo /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpq017f25u TO /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/ /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168 `" && echo ansible-tmp-1604663915.8467433-6523-192025551356168="` echo /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8g2780hy TO /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/ /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053364",
    "end": "2020-11-06 11:58:36.030307",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:35.976943",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739 `" && echo ansible-tmp-1604663916.0825052-6554-38879310801739="` echo /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_yc4wkgy TO /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/ /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.pxqy1jgj",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552 `" && echo ansible-tmp-1604663916.262519-6580-245909013210552="` echo /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpcw8_7t2q TO /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/ /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888 `" && echo ansible-tmp-1604663916.6373775-6616-265830438307888="` echo /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprdl57lzf TO /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/ /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051685",
    "end": "2020-11-06 11:58:36.819805",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:36.768120",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861 `" && echo ansible-tmp-1604663916.8787143-6647-20933702594861="` echo /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiu298ng8 TO /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/ /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101 `" && echo ansible-tmp-1604663917.7624002-6687-199204363963101="` echo /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp71d321t7 TO /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/ /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152 `" && echo ansible-tmp-1604663918.3893642-6715-94211164720152="` echo /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnlyx4z3_ TO /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/ /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842 `" && echo ansible-tmp-1604663919.0017037-6743-245367267452842="` echo /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3awt2m0v TO /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/ /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.428070",
    "end": "2020-11-06 11:58:39.562231",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:39.134161",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914 `" && echo ansible-tmp-1604663919.6207037-6772-265461855199914="` echo /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk1ddks93 TO /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/ /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.249129",
    "end": "2020-11-06 11:58:39.998222",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:39.749093",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760 `" && echo ansible-tmp-1604663920.0663636-6809-73884136265760="` echo /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfl5u9jxv TO /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/ /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:02.576639",
    "end": "2020-11-06 11:58:42.775659",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:40.199020",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Fri Nov  6 11:58:41 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     0s\nflux-dev-ssh-config   1     0s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          0s\nflux-dev-helm-operator  0/1    1           0          0s\nflux-dev-memcached      0/1    1           0          0s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-bd6r5                0/1    ContainerCreating  0         0s\nflux-dev-helm-operator-745dc7fb99-rszft  0/1    ContainerCreating  0         0s\nflux-dev-memcached-5f689bfdb9-jzqnl      0/1    ContainerCreating  0         0s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.154.18  <none>       3030/TCP   0s\nflux-dev-memcached  ClusterIP  10.0.106.75  <none>       11211/TCP  0s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        0s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  0s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  0s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Fri Nov  6 11:58:41 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     0s",
        "flux-dev-ssh-config   1     0s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          0s",
        "flux-dev-helm-operator  0/1    1           0          0s",
        "flux-dev-memcached      0/1    1           0          0s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-bd6r5                0/1    ContainerCreating  0         0s",
        "flux-dev-helm-operator-745dc7fb99-rszft  0/1    ContainerCreating  0         0s",
        "flux-dev-memcached-5f689bfdb9-jzqnl      0/1    ContainerCreating  0         0s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.154.18  <none>       3030/TCP   0s",
        "flux-dev-memcached  ClusterIP  10.0.106.75  <none>       11211/TCP  0s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        0s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809 `" && echo ansible-tmp-1604663922.9828496-6857-124226987216809="` echo /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpb4n2xg4_ TO /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/ /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144 `" && echo ansible-tmp-1604663953.649457-6857-278372237410144="` echo /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiv6ekx5d TO /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/ /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T11:58:42Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-bd6r5",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "77eb3903-57b6-4723-8fd7-207e205c7206"
                    }
                ],
                "resourceVersion": "2442294",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-bd6r5",
                "uid": "fcb5b7bc-62ea-4a61-a872-ab49a6c85b46"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-mwz5p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-mwz5p",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-mwz5p"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1702e90ca0fd00d5b53975dd6edb50c14596a354c57cc050583bbdad4776c73e",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T11:58:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.21",
                "podIPs": [
                    {
                        "ip": "10.1.0.21"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T11:58:42Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887 `" && echo ansible-tmp-1604663954.485959-6926-63569342935887="` echo /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4xouk6no TO /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/ /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.372845",
    "end": "2020-11-06 11:59:15.207070",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:14.834225",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294 `" && echo ansible-tmp-1604663956.0130217-6986-68880129731294="` echo /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8spadi0w TO /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/ /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.cmwya74f",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651 `" && echo ansible-tmp-1604663956.2289178-7012-262496183905651="` echo /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpegsa9f0x TO /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/ /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853 `" && echo ansible-tmp-1604663956.90273-7048-129069509382853="` echo /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp75y7rktk TO /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/ /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.163579",
    "end": "2020-11-06 11:59:17.270553",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:17.106974",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431 `" && echo ansible-tmp-1604663957.3612936-7080-192279522448431="` echo /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpa3fcq6c7 TO /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/ /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ps6shm4q",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610 `" && echo ansible-tmp-1604663957.6278677-7106-268673185474610="` echo /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpue_t3u3y TO /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/ /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473 `" && echo ansible-tmp-1604663958.0764883-7142-32612689428473="` echo /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3kokr1bn TO /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/ /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.047913",
    "end": "2020-11-06 11:59:18.257336",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:18.209423",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689 `" && echo ansible-tmp-1604663958.3176064-7174-226177185778689="` echo /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfddgbqst TO /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/ /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314 `" && echo ansible-tmp-1604663959.2088077-7215-54140016917314="` echo /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7tygp1lj TO /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/ /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835 `" && echo ansible-tmp-1604663959.8899238-7243-166120998234835="` echo /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4c__om_k TO /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/ /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T11:58:42Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-bd6r5",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "77eb3903-57b6-4723-8fd7-207e205c7206"
                    }
                ],
                "resourceVersion": "2442294",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-bd6r5",
                "uid": "fcb5b7bc-62ea-4a61-a872-ab49a6c85b46"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-mwz5p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-mwz5p",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-mwz5p"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1702e90ca0fd00d5b53975dd6edb50c14596a354c57cc050583bbdad4776c73e",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T11:58:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.21",
                "podIPs": [
                    {
                        "ip": "10.1.0.21"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T11:58:42Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603 `" && echo ansible-tmp-1604663960.6410468-7279-203824175904603="` echo /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpu4t4j8r3 TO /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/ /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.132281",
    "end": "2020-11-06 11:59:20.906087",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:20.773806",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664 `" && echo ansible-tmp-1604663961.611707-7345-104182178240664="` echo /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpco7nm6yu TO /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/ /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.76yzy_b4",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919 `" && echo ansible-tmp-1604663961.7931762-7371-104474522167919="` echo /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1ldda32x TO /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/ /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438 `" && echo ansible-tmp-1604663962.1680202-7407-123862796614438="` echo /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk_196mhu TO /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/ /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054710",
    "end": "2020-11-06 11:59:22.379062",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:22.324352",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723 `" && echo ansible-tmp-1604663962.4418616-7438-272590583261723="` echo /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9ixwood4 TO /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/ /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712 `" && echo ansible-tmp-1604663963.2771156-7478-133673670099712="` echo /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpcyt53hjc TO /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/ /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822 `" && echo ansible-tmp-1604663963.913678-7506-136842377925822="` echo /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplt16cpx7 TO /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/ /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865 `" && echo ansible-tmp-1604663964.8022537-7546-95494538419865="` echo /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfaxnjlc_ TO /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/ /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220 `" && echo ansible-tmp-1604663965.752177-7598-246473833002220="` echo /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpp80zplvj TO /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/ /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.w58tvq7g",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574 `" && echo ansible-tmp-1604663965.9358735-7624-106959623582574="` echo /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp04emxmdt TO /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/ /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381 `" && echo ansible-tmp-1604663966.3135262-7660-245023161834381="` echo /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpl34l6lnn TO /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/ /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.060413",
    "end": "2020-11-06 11:59:26.507300",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:26.446887",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376 `" && echo ansible-tmp-1604663966.5689392-7692-176872090594376="` echo /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8tzctrlb TO /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/ /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692 `" && echo ansible-tmp-1604663967.4021406-7732-146491260849692="` echo /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprowhc56x TO /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/ /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560 `" && echo ansible-tmp-1604663968.0260546-7760-253240803469560="` echo /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphc6krzig TO /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/ /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603 `" && echo ansible-tmp-1604663968.8591611-7800-64761653404603="` echo /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbp6cn2er TO /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/ /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905 `" && echo ansible-tmp-1604663969.5874527-7829-71927230365905="` echo /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiyn3h3dd TO /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/ /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522 `" && echo ansible-tmp-1604663970.1073816-7859-115491689591522="` echo /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbkgyantg TO /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/ /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489 `" && echo ansible-tmp-1604663970.9071448-7897-38377728275489="` echo /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9m8__rn7 TO /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/ /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708 `" && echo ansible-tmp-1604663971.1167738-7923-157850790281708="` echo /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphj1v_f7x TO /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpasxucfin/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmps93a55fv TO /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380 `" && echo ansible-tmp-1604663971.7932892-7965-91294682878380="` echo /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7y99uktn TO /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/ /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903 `" && echo ansible-tmp-1604663971.9986117-7991-68822734997903="` echo /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmptg9linjx TO /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxyfo8al_/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpaici9gfx TO /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581 `" && echo ansible-tmp-1604663972.3960795-8033-162812672904581="` echo /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp21vhhbdr TO /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/ /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271 `" && echo ansible-tmp-1604663972.6038275-8059-198117112313271="` echo /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpzdjqvx9k TO /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxeqii8jg/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplt9gi_6n TO /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242 `" && echo ansible-tmp-1604663972.998846-8101-116175496566242="` echo /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpg5m_dhuh TO /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/ /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066 `" && echo ansible-tmp-1604663973.2045212-8127-269829131272066="` echo /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2c_4707w TO /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuvgr5o7j/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2x8lkzvt TO /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401 `" && echo ansible-tmp-1604663973.6176782-8170-197387719325401="` echo /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppjym6m65 TO /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/ /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809 `" && echo ansible-tmp-1604663973.8243132-8196-123473296886809="` echo /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpex32pziq TO /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/ /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.689178",
    "end": "2020-11-06 11:59:42.643031",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:33.953853",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   868c99c5..d312208d  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   868c99c5..d312208d  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla d312208d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 11231 insertions(+), 25950 deletions(-)\n rewrite console.out (73%)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d312208d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 25950 deletions(-)",
        " rewrite console.out (73%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d312208d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 25950 deletions(-)",
        " rewrite console.out (73%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   868c99c5..d312208d  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726 `" && echo ansible-tmp-1604663982.8820388-8248-211129254684726="` echo /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmposz35ofw TO /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/ /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563 `" && echo ansible-tmp-1604663983.7529776-8288-222945762381563="` echo /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpni8hvf00 TO /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/ /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664 `" && echo ansible-tmp-1604664019.363273-8288-166243911377664="` echo /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4e71lfws TO /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/ /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767 `" && echo ansible-tmp-1604664055.016141-8288-143150759080767="` echo /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkj8ogfy7 TO /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/ /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265 `" && echo ansible-tmp-1604664090.6455688-8288-170289898728265="` echo /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpddm8uvij TO /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/ /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:01:01Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2442634",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "3e104c6f-f213-4fd4-b5ae-5b50102876c5"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-g4bvw"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549 `" && echo ansible-tmp-1604664091.4898458-8402-106253643270549="` echo /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9bav0am2 TO /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/ /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:01:01Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2442632",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "6caac180-0a4b-420c-9c52-d434a0772e72"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-kpr65"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923 `" && echo ansible-tmp-1604664092.1771774-8432-31258393455923="` echo /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo294z3m7 TO /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/ /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603 `" && echo ansible-tmp-1604664093.0952203-8470-276748423125603="` echo /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnnxhqxsw TO /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/ /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746 `" && echo ansible-tmp-1604664093.2985115-8496-261817456056746="` echo /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpli0f3d_c TO /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7f6po_9d/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0jxx7rsb TO /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038 `" && echo ansible-tmp-1604664093.6991246-8538-39296845418038="` echo /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp31sblqgn TO /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/ /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107 `" && echo ansible-tmp-1604664093.9072514-8564-44016413066107="` echo /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp59renyct TO /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvnip_erl/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1sjwzkkd TO /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414 `" && echo ansible-tmp-1604664094.3359017-8606-146492435913414="` echo /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgn_n1bjq TO /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/ /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862 `" && echo ansible-tmp-1604664094.5422657-8632-102424116243862="` echo /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvzx9us74 TO /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpht985m8u/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpio_qnhyq TO /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988 `" && echo ansible-tmp-1604664094.942517-8674-218992632025988="` echo /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_ise5xix TO /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/ /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371 `" && echo ansible-tmp-1604664095.1492207-8700-94059704671371="` echo /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpb6m1rfyc TO /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpw3g8lq2x/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpu58fyieb TO /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932 `" && echo ansible-tmp-1604664095.565407-8743-63689880709932="` echo /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdp4mtfmt TO /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/ /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908 `" && echo ansible-tmp-1604664095.7687237-8769-211158712402908="` echo /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7lturhfk TO /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/ /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.073315",
    "end": "2020-11-06 12:01:38.971979",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:01:35.898664",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   d312208d..a5effbc0  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d312208d..a5effbc0  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla a5effbc0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1162 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla a5effbc0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla a5effbc0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d312208d..a5effbc0  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061 `" && echo ansible-tmp-1604664099.2183235-8821-34605243622061="` echo /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp46bqrh_0 TO /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/ /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724 `" && echo ansible-tmp-1604664100.104841-8861-80363451628724="` echo /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuxhue1of TO /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/ /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617 `" && echo ansible-tmp-1604664135.7078266-8861-68289995531617="` echo /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmpxi5bdl TO /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/ /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708 `" && echo ansible-tmp-1604664171.3340843-8861-272184592053708="` echo /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpi7ryyp1v TO /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/ /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065 `" && echo ansible-tmp-1604664206.9470565-8861-268897054420065="` echo /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpioa9_lyr TO /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/ /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:03:04Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2442954",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "193c49b4-fcf0-43b3-88fa-857b438f7d8c"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-x85m7"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464 `" && echo ansible-tmp-1604664207.7726333-8975-163790794245464="` echo /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8q8h45c5 TO /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/ /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:03:04Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2442952",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "20d9b7ea-60b8-41df-b4de-1fe55918d6ab"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-5cx8t"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701 `" && echo ansible-tmp-1604664208.6379707-9009-176756620969701="` echo /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo48uykfn TO /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/ /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:01:01Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2442625",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "97008025-3972-4370-9785-1a6c3b15716e"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313 `" && echo ansible-tmp-1604664209.3816197-9043-7127339767313="` echo /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjy8s5rfl TO /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/ /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708 `" && echo ansible-tmp-1604664209.5679488-9069-68004286580708="` echo /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmpwntwdp TO /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/ /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437 `" && echo ansible-tmp-1604664209.971951-9107-10757349263437="` echo /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8ye4w7dg TO /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/ /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.078559",
    "end": "2020-11-06 12:03:30.182069",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:30.103510",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.078559",
            "end": "2020-11-06 12:03:30.182069",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 12:03:30.103510",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048 `" && echo ansible-tmp-1604664210.4067118-9153-37087549796048="` echo /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8s1wfm8d TO /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/ /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.044007",
    "end": "2020-11-06 12:03:30.581169",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:30.537162",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621 `" && echo ansible-tmp-1604664210.6427948-9188-107463063472621="` echo /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpj8mf399x TO /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/ /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.256077",
    "end": "2020-11-06 12:03:31.028811",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:30.772734",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173 `" && echo ansible-tmp-1604664211.1005218-9229-142922047751173="` echo /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpy4gp9ji7 TO /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/ /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.289115",
    "end": "2020-11-06 12:03:31.522917",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:31.233802",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038 `" && echo ansible-tmp-1604664211.73757-9290-151389440127038="` echo /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3kseq60r TO /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/ /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.040433",
    "end": "2020-11-06 12:03:31.908673",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:31.868240",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544 `" && echo ansible-tmp-1604664212.000354-9327-9691056342544="` echo /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgje74cir TO /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpijb1ncod/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphbfq6szu TO /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693 `" && echo ansible-tmp-1604664212.404238-9369-204247222804693="` echo /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp5_d4n6pv TO /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/ /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.043257",
    "end": "2020-11-06 12:03:32.578019",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:32.534762",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020 `" && echo ansible-tmp-1604664212.6464407-9405-104201191405020="` echo /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0c6dgsxc TO /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/ /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.042157",
    "end": "2020-11-06 12:03:32.818838",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:32.776681",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057 `" && echo ansible-tmp-1604664213.1223023-9451-43231373423057="` echo /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpv2vwnb_d TO /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/ /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530 `" && echo ansible-tmp-1604664213.730217-9479-30264944597530="` echo /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjmsmvcz6 TO /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/ /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.105006",
    "end": "2020-11-06 12:03:33.965845",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:33.860839",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398 `" && echo ansible-tmp-1604664214.1331697-9515-267438356504398="` echo /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6zfjqkhj TO /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/ /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:03:04Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2442945",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "b9e95706-82fb-4b2b-9fd3-226a58c1540c"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797 `" && echo ansible-tmp-1604664214.8683321-9549-225985220862797="` echo /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpszlfgqfi TO /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/ /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604664209.6988552,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604664212.2948945,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3006,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604664212.2948945,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1950252234",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107 `" && echo ansible-tmp-1604664215.3251932-9591-262248741768107="` echo /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpf8z9fj21 TO /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/ /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.045072",
    "end": "2020-11-06 12:03:35.502632",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:35.457560",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.045072",
            "end": "2020-11-06 12:03:35.502632",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 12:03:35.457560",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109 `" && echo ansible-tmp-1604664215.739641-9637-214534225169109="` echo /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp38125vf0 TO /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/ /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.042797",
    "end": "2020-11-06 12:03:35.912521",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:35.869724",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774 `" && echo ansible-tmp-1604664215.9776244-9673-110099640586774="` echo /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpp4vovbfp TO /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/ /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.206866",
    "end": "2020-11-06 12:03:36.315940",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:36.109074",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986 `" && echo ansible-tmp-1604664216.3901083-9714-156820227255986="` echo /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpg546puzm TO /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/ /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.277072",
    "end": "2020-11-06 12:03:36.797524",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:36.520452",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467 `" && echo ansible-tmp-1604664217.0061798-9774-228425216577467="` echo /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8hqf2yzj TO /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/ /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.042403",
    "end": "2020-11-06 12:03:37.181147",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:37.138744",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536 `" && echo ansible-tmp-1604664217.3088539-9813-243603499677536="` echo /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiui7cnfj TO /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0va0cb17/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpl7ja_6wj TO /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811 `" && echo ansible-tmp-1604664217.6698368-9853-270283305583811="` echo /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjk0cp_g0 TO /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/ /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.040190",
    "end": "2020-11-06 12:03:37.840314",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:37.800124",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985 `" && echo ansible-tmp-1604664217.9108279-9889-262240353754985="` echo /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp74codefg TO /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/ /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.042386",
    "end": "2020-11-06 12:03:38.086368",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:38.043982",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688 `" && echo ansible-tmp-1604664218.3315954-9935-32727503996688="` echo /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2xgxyw4z TO /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/ /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882 `" && echo ansible-tmp-1604664218.956742-9963-227410922157882="` echo /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpefwilzzw TO /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/ /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.112802",
    "end": "2020-11-06 12:03:39.205814",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:39.093012",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155 `" && echo ansible-tmp-1604664219.4897492-9999-276909038757155="` echo /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2q8rp_ic TO /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/ /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224 `" && echo ansible-tmp-1604664220.4703808-10047-236100260595224="` echo /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuc56z7de TO /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/ /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402 `" && echo ansible-tmp-1604664221.5479639-10095-68611496223402="` echo /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdh7u6tf8 TO /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/ /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.087128",
    "end": "2020-11-06 12:03:41.765233",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:41.678105",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335 `" && echo ansible-tmp-1604664221.8836026-10131-37299295483335="` echo /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpyv6rwtb6 TO /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/ /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781 `" && echo ansible-tmp-1604664222.0757253-10157-14304436319781="` echo /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp36rzwmvz TO /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/ /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654 `" && echo ansible-tmp-1604664222.3915265-10191-240224241746654="` echo /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4u7amrn7 TO /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/ /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434 `" && echo ansible-tmp-1604664222.5834844-10217-153241338612434="` echo /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwyret17e TO /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/ /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
    "delta": "0:00:00.008317",
    "end": "2020-11-06 12:03:42.721921",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:42.713604",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488 `" && echo ansible-tmp-1604664222.8164172-10246-200660603772488="` echo /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppscb3mb9 TO /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/ /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.042625",
    "end": "2020-11-06 12:03:42.991733",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:42.949108",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001 `" && echo ansible-tmp-1604664223.05767-10284-45147633618001="` echo /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmph6m7ydrz TO /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/ /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.046801",
    "end": "2020-11-06 12:03:43.237067",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:43.190266",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533 `" && echo ansible-tmp-1604664223.307631-10319-249271232205533="` echo /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppssgs4rs TO /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/ /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.043966",
    "end": "2020-11-06 12:03:43.483201",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:43.439235",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645 `" && echo ansible-tmp-1604664223.5524743-10355-54008774812645="` echo /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3sorvksf TO /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/ /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644 `" && echo ansible-tmp-1604664224.206129-10383-218479388058644="` echo /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0t_tw84e TO /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/ /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.143323",
    "end": "2020-11-06 12:03:44.481199",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:44.337876",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854 `" && echo ansible-tmp-1604664224.6268203-10417-204634536070854="` echo /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6f_zc8d6 TO /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/ /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396 `" && echo ansible-tmp-1604664224.8337846-10443-188117163963396="` echo /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk8fjcq4j TO /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/ /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707 `" && echo ansible-tmp-1604664225.0392883-10469-153311347693707="` echo /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprocln830 TO /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdruyk43d/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkmn_xpxp TO /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441 `" && echo ansible-tmp-1604664225.51482-10511-204970644988441="` echo /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp73tq8xb_ TO /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/ /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604664225.3710916,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604664225.3750916,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3071,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664225.2270894,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "4078398586",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889 `" && echo ansible-tmp-1604664225.7896132-10541-243227146925889="` echo /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpcf9a8n2y TO /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/ /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233 `" && echo ansible-tmp-1604664225.9855223-10567-213913809604233="` echo /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7yqtfdq3 TO /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/ /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225 `" && echo ansible-tmp-1604664226.347509-10601-160012034816225="` echo /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvm1c9g4v TO /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuif3qnrf TO /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppq6w6lkm TO /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpuif3qnrf",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378 `" && echo ansible-tmp-1604664226.696565-10641-194093331541378="` echo /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpq1h5a6ld TO /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/ /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.066299",
    "end": "2020-11-06 12:03:46.895516",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:46.829217",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342 `" && echo ansible-tmp-1604664227.0490701-10678-234926449240342="` echo /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnleorcny TO /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/ /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196 `" && echo ansible-tmp-1604664227.261254-10704-160926914716196="` echo /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_fof2f0a TO /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/ /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.574892",
    "end": "2020-11-06 12:03:50.972484",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:47.397592",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   a5effbc0..06ab673e  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   a5effbc0..06ab673e  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 06ab673e] [ci skip] Pushing CA server files\n 2 files changed, 3447 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 06ab673e] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 06ab673e] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   a5effbc0..06ab673e  HEAD -> gorilla"
    ]
}

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520 `" && echo ansible-tmp-1604664231.1039393-10752-30272809004520="` echo /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp5r71nrsr TO /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520/ /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664231.1039393-10752-30272809004520/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
    "delta": "0:00:00.054919",
    "end": "2020-11-06 12:03:51.291791",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:51.236872",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645 `" && echo ansible-tmp-1604664231.4050708-10788-68068287408645="` echo /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpia5fkafm TO /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645/ /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664231.4050708-10788-68068287408645/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825 `" && echo ansible-tmp-1604664231.5957758-10814-165705401233825="` echo /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7oqt608s TO /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825/ /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664231.5957758-10814-165705401233825/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236 `" && echo ansible-tmp-1604664231.9027367-10848-97135601736236="` echo /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpz6ef74w3 TO /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236/ /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664231.9027367-10848-97135601736236/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932 `" && echo ansible-tmp-1604664232.1411994-10874-280926235936932="` echo /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgia408pk TO /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932/ /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664232.1411994-10874-280926235936932/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier\"\n",
    "delta": "0:00:00.007791",
    "end": "2020-11-06 12:03:52.279563",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:52.271772",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124 `" && echo ansible-tmp-1604664232.3464074-10903-167851217259124="` echo /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplzy_ke41 TO /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124/ /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664232.3464074-10903-167851217259124/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
    "delta": "0:00:00.085291",
    "end": "2020-11-06 12:03:52.563536",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:52.478245",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228 `" && echo ansible-tmp-1604664232.6288621-10940-172197613678228="` echo /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjftubqdh TO /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228/ /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664232.6288621-10940-172197613678228/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
    "delta": "0:00:00.085980",
    "end": "2020-11-06 12:03:52.845759",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:52.759779",
    "stderr": "No value found at secret/credentials/carrier-net/ca/carrier",
    "stderr_lines": [
        "No value found at secret/credentials/carrier-net/ca/carrier"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615 `" && echo ansible-tmp-1604664232.9130313-10974-172590846420615="` echo /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgnw44rtv TO /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615/ /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664232.9130313-10974-172590846420615/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
    "delta": "0:00:00.041060",
    "end": "2020-11-06 12:03:53.130509",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:53.089449",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/ca/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/ca/carrier"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443 `" && echo ansible-tmp-1604664233.1955743-11009-214636716492443="` echo /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprork97_o TO /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443/ /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664233.1955743-11009-214636716492443/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074 `" && echo ansible-tmp-1604664233.8216465-11037-34201194821074="` echo /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpojibyyku TO /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074/ /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664233.8216465-11037-34201194821074/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
    "delta": "0:00:00.154818",
    "end": "2020-11-06 12:03:54.107488",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:53.952670",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-carrier-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010 `" && echo ansible-tmp-1604664234.2712781-11073-237155243405010="` echo /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpi20ynhp0 TO /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010/ /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664234.2712781-11073-237155243405010/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442 `" && echo ansible-tmp-1604664234.472333-11099-105471028677442="` echo /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpelz0m39x TO /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442/ /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664234.472333-11099-105471028677442/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984 `" && echo ansible-tmp-1604664234.6713915-11125-33320964585984="` echo /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpculwaft2 TO /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/ /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_nd3rlq1/ca-peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/ /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1lxj24h5 TO /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/ /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7d8e039d61ac8a6ff961573116ce20ca",
    "mode": "0644",
    "owner": "root",
    "size": 1262,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664234.6713915-11125-33320964585984/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406 `" && echo ansible-tmp-1604664235.089665-11167-102591166959406="` echo /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk5cqgeik TO /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406/ /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664235.089665-11167-102591166959406/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604664234.9752362,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
        "ctime": 1604664234.9752362,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3091,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664234.8432343,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1262,
        "uid": 0,
        "version": "3974802863",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080 `" && echo ansible-tmp-1604664235.3455467-11197-3042521124080="` echo /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3b84jeue TO /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080/ /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664235.3455467-11197-3042521124080/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604664226.1191027,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604664226.6191103,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3077,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604664226.6191103,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3235086134",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "carrier-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "peer"
                },
                "server": {
                    "admin": "carrier-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/carrier-net/ca/carrier?user",
                    "secretcert": "secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem",
                    "secretkey": "secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838 `" && echo ansible-tmp-1604664235.7302616-11235-86588203847838="` echo /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmptga88c58 TO /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/ /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8re4abx0 TO /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/ /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7x56eh1g TO /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/ /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
    "dest": "./build/test/carrier-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp8re4abx0",
            "attributes": null,
            "backup": false,
            "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
            "content": null,
            "dest": "./build/test/carrier-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea14e4e12c26cbb2cb9ee3a173335ca1",
    "mode": "0644",
    "owner": "root",
    "size": 834,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664235.7302616-11235-86588203847838/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951 `" && echo ansible-tmp-1604664236.0735433-11276-260453102632951="` echo /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiun2b9od TO /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951/ /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664236.0735433-11276-260453102632951/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.057929",
    "end": "2020-11-06 12:03:56.265835",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:56.207906",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662 `" && echo ansible-tmp-1604664236.3831477-11310-34723888152662="` echo /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpeg3_lk_g TO /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662/ /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664236.3831477-11310-34723888152662/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405 `" && echo ansible-tmp-1604664236.5853531-11336-33907254870405="` echo /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpoj0pxwfv TO /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405/ /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664236.5853531-11336-33907254870405/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.321195",
    "end": "2020-11-06 12:04:00.040805",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:56.719610",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   06ab673e..08042f08  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   06ab673e..08042f08  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 08042f08] [ci skip] Pushing CA server files\n 2 files changed, 1142 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 08042f08] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 08042f08] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   06ab673e..08042f08  HEAD -> gorilla"
    ]
}

TASK [include_role : create/ca-tools] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:70

TASK [waiting for the CA server to be created in walmart-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715 `" && echo ansible-tmp-1604664240.4852912-11392-67758407821715="` echo /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1h0b23g0 TO /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715/ /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664240.4852912-11392-67758407821715/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851 `" && echo ansible-tmp-1604664271.091084-11392-63783210285851="` echo /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkmzq5cwr TO /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851/ /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664271.091084-11392-63783210285851/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562 `" && echo ansible-tmp-1604664301.7005086-11392-219057689751562="` echo /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp39wp0zje TO /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562/ /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664301.7005086-11392-219057689751562/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133 `" && echo ansible-tmp-1604664332.3293755-11392-210713479345133="` echo /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdnpffk65 TO /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133/ /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664332.3293755-11392-210713479345133/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431 `" && echo ansible-tmp-1604664362.9868913-11392-157509531803431="` echo /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3zfvhd0i TO /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431/ /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664362.9868913-11392-157509531803431/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T12:05:16Z",
                "generateName": "ca-876984656-",
                "labels": {
                    "app.kubernetes.io/instance": "walmart-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "876984656"
                },
                "name": "ca-876984656-cj25h",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-876984656",
                        "uid": "faccd369-7c2a-42ef-b443-0e0fbf592f69"
                    }
                ],
                "resourceVersion": "2443501",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-876984656-cj25h",
                "uid": "66782b09-9cc4-47d7-a8be-aadd914c5c49"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b walmart-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.walmart-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-kpr65",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/walmart-net/ca/walmart?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-kpr65",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-kpr65",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-kpr65"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:53Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:54Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:54Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:31Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://9decbd427ca42c2b9f52404629edecf11d3cc652df1dc496d4636cef4d6e9cae",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T12:05:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://c4cb82102236bb371647a1cceb86106542f46d8cdf9eb86b1976a412572189d5",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://c4cb82102236bb371647a1cceb86106542f46d8cdf9eb86b1976a412572189d5",
                                "exitCode": 0,
                                "finishedAt": "2020-11-06T12:05:52Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-06T12:05:52Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.15",
                "podIPs": [
                    {
                        "ip": "10.1.0.15"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T12:05:31Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135 `" && echo ansible-tmp-1604664363.6797311-11526-145005568551135="` echo /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpb48non63 TO /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135/ /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664363.6797311-11526-145005568551135/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510 `" && echo ansible-tmp-1604664363.8780746-11552-170728250351510="` echo /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplybexad_ TO /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510/ /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664363.8780746-11552-170728250351510/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528 `" && echo ansible-tmp-1604664364.0767817-11578-72940800356528="` echo /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpyh6iulsx TO /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/ /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbkuwcmqr/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/ /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9b9hm2ml TO /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/ /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22eb57fc62c4c46e12211ccc6f0ae59e",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664364.0767817-11578-72940800356528/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625 `" && echo ansible-tmp-1604664364.4775305-11620-12961304810625="` echo /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnhashc_9 TO /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625/ /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664364.4775305-11620-12961304810625/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604664364.365187,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
        "ctime": 1604664364.365187,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3098,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664364.233185,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "666198652",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462 `" && echo ansible-tmp-1604664364.7774832-11650-105647312061462="` echo /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8v5icxwb TO /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462/ /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664364.7774832-11650-105647312061462/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604664226.1191027,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604664235.9992516,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3077,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604664235.9992516,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3235086134",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca-tools",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "walmart-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873 `" && echo ansible-tmp-1604664365.1499012-11688-127550504439873="` echo /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnhe30sha TO /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/ /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdu_g9m9z TO /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/ /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4r_wo0a8 TO /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/ /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
    "dest": "./build/test/walmart-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpdu_g9m9z",
            "attributes": null,
            "backup": false,
            "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
            "content": null,
            "dest": "./build/test/walmart-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "590790aef7bb9a4128b32a0352fb27f4",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664365.1499012-11688-127550504439873/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408 `" && echo ansible-tmp-1604664365.4927073-11728-2592180682408="` echo /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpntyv50g7 TO /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408/ /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664365.4927073-11728-2592180682408/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.059350",
    "end": "2020-11-06 12:06:05.682053",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:06:05.622703",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711 `" && echo ansible-tmp-1604664365.7955983-11762-2169334891711="` echo /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpx6dvlr6_ TO /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711/ /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664365.7955983-11762-2169334891711/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123 `" && echo ansible-tmp-1604664366.000721-11788-140754026373123="` echo /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpokawk7h8 TO /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123/ /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664366.000721-11788-140754026373123/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.322648",
    "end": "2020-11-06 12:06:09.455783",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:06:06.133135",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   08042f08..60a10f7c  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   08042f08..60a10f7c  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 60a10f7c] [ci skip] Pushing CA-tools files\n 2 files changed, 1193 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 60a10f7c] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 60a10f7c] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   08042f08..60a10f7c  HEAD -> gorilla"
    ]
}

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403 `" && echo ansible-tmp-1604664369.7270288-11842-12909885118403="` echo /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwjjiefhp TO /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403/ /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664369.7270288-11842-12909885118403/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T12:05:15Z",
                "generateName": "ca-645c757f7d-",
                "labels": {
                    "app.kubernetes.io/instance": "carrier-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "645c757f7d"
                },
                "name": "ca-645c757f7d-4kc5f",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-645c757f7d",
                        "uid": "7359bc50-3d4e-41f0-8bb8-24ebd9d4ac93"
                    }
                ],
                "resourceVersion": "2443452",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-645c757f7d-4kc5f",
                "uid": "a5dc89c8-fae9-4ca2-b66b-f582e379fe9a"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.carrier-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-5cx8t",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-5cx8t",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-5cx8t",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-5cx8t"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:40Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:05:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://fe9055ff2f64c0beb0c18d52b16dc9378da4c195a048c36897e1cdcde17ff12b",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T12:05:40Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://4056af2f0bcdb46a7f54c30b31e56b526fbd76d4dbf120ad58f2541d6c7d4dab",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://4056af2f0bcdb46a7f54c30b31e56b526fbd76d4dbf120ad58f2541d6c7d4dab",
                                "exitCode": 0,
                                "finishedAt": "2020-11-06T12:05:39Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-06T12:05:38Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.58",
                "podIPs": [
                    {
                        "ip": "10.1.0.58"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T12:05:17Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088 `" && echo ansible-tmp-1604664370.441246-11872-64307192027088="` echo /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3gy5udzl TO /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088/ /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664370.441246-11872-64307192027088/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663 `" && echo ansible-tmp-1604664370.6434467-11898-98532337323663="` echo /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1exma2hp TO /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663/ /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664370.6434467-11898-98532337323663/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894 `" && echo ansible-tmp-1604664370.8447084-11924-7805033187894="` echo /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpeg6jsrzg TO /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/ /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxvvgyb5t/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/ /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnc87btv7 TO /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/ /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "31ce48ae00d8d8ffe510b3550432011b",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664370.8447084-11924-7805033187894/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846 `" && echo ansible-tmp-1604664371.2548225-11966-35177718575846="` echo /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmptxsbne1y TO /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846/ /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664371.2548225-11966-35177718575846/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604664371.133289,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
        "ctime": 1604664371.137289,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3106,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664371.001287,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "2564501317",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513 `" && echo ansible-tmp-1604664371.5071502-11996-223276890756513="` echo /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphl99lz2p TO /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513/ /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664371.5071502-11996-223276890756513/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604664226.1191027,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604664365.421203,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3077,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604664365.421203,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3235086134",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca-tools",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "carrier-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031 `" && echo ansible-tmp-1604664371.9159117-12034-142544269499031="` echo /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgvasq024 TO /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/ /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpywtfkeml TO /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/ /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7odjyalb TO /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/ /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
    "dest": "./build/test/carrier-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpywtfkeml",
            "attributes": null,
            "backup": false,
            "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
            "content": null,
            "dest": "./build/test/carrier-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "1e84a94c7e9daff778218b24a27091ea",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664371.9159117-12034-142544269499031/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542 `" && echo ansible-tmp-1604664372.2691286-12074-135014590595542="` echo /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpc8_v9j44 TO /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542/ /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664372.2691286-12074-135014590595542/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.053474",
    "end": "2020-11-06 12:06:12.453177",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:06:12.399703",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060 `" && echo ansible-tmp-1604664372.5675972-12108-12899221912060="` echo /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8v4ftq20 TO /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060/ /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664372.5675972-12108-12899221912060/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337 `" && echo ansible-tmp-1604664372.7743273-12134-102071344756337="` echo /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpw2lyac32 TO /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337/ /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664372.7743273-12134-102071344756337/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:04.272599",
    "end": "2020-11-06 12:06:17.177865",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:06:12.905266",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   60a10f7c..f97e1926  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   60a10f7c..f97e1926  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla f97e1926] [ci skip] Pushing CA-tools files\n 2 files changed, 1011 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f97e1926] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f97e1926] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   60a10f7c..f97e1926  HEAD -> gorilla"
    ]
}

TASK [include_role : create/crypto_script] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:85

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806 `" && echo ansible-tmp-1604664377.4946759-12184-54555981671806="` echo /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_t_p21lu TO /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806/ /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664377.4946759-12184-54555981671806/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213 `" && echo ansible-tmp-1604664377.7005062-12210-118868112405213="` echo /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp60hex6n6 TO /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/ /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6hvusmij/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/ /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgu484el3 TO /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/ /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "8971bb1d61fca97c22f2d6a674576f37276da513",
    "dest": "./build/generate-crypto-walmart-orderer1.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "8971bb1d61fca97c22f2d6a674576f37276da513",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer1.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a5c3b328cd353c579ccf59f38d5dd26f",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer1",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2587,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664377.7005062-12210-118868112405213/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858 `" && echo ansible-tmp-1604664378.0365512-12210-26013644682858="` echo /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2bsdy4nj TO /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/ /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpw2pht70u/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/ /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0laxmgc7 TO /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/ /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "0f34ff006a48ed85608f0c56326160a3420fa870",
    "dest": "./build/generate-crypto-walmart-orderer2.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "0f34ff006a48ed85608f0c56326160a3420fa870",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer2.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea5fdcd7f7da93ae9eae230a17fe4f56",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer2",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2587,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664378.0365512-12210-26013644682858/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748 `" && echo ansible-tmp-1604664378.3690608-12210-190718650731748="` echo /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuzgf1_se TO /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/ /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpggk9h91l/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/ /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpggdtn579 TO /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/ /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "07bc4b5c88c2fb8b59116bd32a35e3173f4a3d45",
    "dest": "./build/generate-crypto-walmart-orderer3.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "07bc4b5c88c2fb8b59116bd32a35e3173f4a3d45",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer3.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "5055cfd462368cefb9e9d25e4cb814b7",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer3",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2587,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664378.3690608-12210-190718650731748/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877 `" && echo ansible-tmp-1604664378.7213383-12326-125810574444877="` echo /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0qbtr62k TO /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/ /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpqwm98kmp/orderer_organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/ /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp909nyyx2 TO /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/ /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "0cbf099676ed3db46b4284f018386093ea3eb488",
    "dest": "./build/generate-crypto-walmart.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "0cbf099676ed3db46b4284f018386093ea3eb488",
            "content": null,
            "dest": "./build/generate-crypto-walmart.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "06d6898b6e6c0f64e68d456f385c4db4",
    "mode": "0644",
    "owner": "root",
    "size": 2904,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664378.7213383-12326-125810574444877/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013 `" && echo ansible-tmp-1604664379.1025379-12368-227292430376013="` echo /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpalcmsmyq TO /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013/ /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664379.1025379-12368-227292430376013/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272 `" && echo ansible-tmp-1604664379.3718207-12398-148648857459272="` echo /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkls86n5n TO /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/ /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpm1n42f_4/organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/ /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpg7ycsll6 TO /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/ /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9b0219314b564b677d8729c2646cc3f70683d9d7",
    "dest": "./build/generate-crypto-carrier.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9b0219314b564b677d8729c2646cc3f70683d9d7",
            "content": null,
            "dest": "./build/generate-crypto-carrier.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "6dbe6657d953c4e519484ce3a085eec5",
    "mode": "0644",
    "owner": "root",
    "size": 5178,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664379.3718207-12398-148648857459272/source",
    "state": "file",
    "uid": 0
}

TASK [pause] *******************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:94
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
ok: [localhost] => {
    "changed": false,
    "delta": 360,
    "echo": true,
    "rc": 0,
    "start": "2020-11-06 12:06:19.723137",
    "stderr": "",
    "stdout": "Paused for 6.0 minutes",
    "stop": "2020-11-06 12:12:19.723509",
    "user_input": ""
}

TASK [include_role : create/crypto/orderer] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:99
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835 `" && echo ansible-tmp-1604664739.936887-12442-2852022118835="` echo /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplgwudvmg TO /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835/ /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664739.936887-12442-2852022118835/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.089946",
    "end": "2020-11-06 12:12:20.158217",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:20.068271",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Call orderercheck.yaml for orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:16
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml for localhost

TASK [Waiting for CA-tool in walmart-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:2
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172 `" && echo ansible-tmp-1604664740.4030352-12485-204012810330172="` echo /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3r7jhq1p TO /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172/ /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664740.4030352-12485-204012810330172/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T12:07:16Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-gkdtt",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "f2f02d84-e9af-4d9c-a437-23b505202589"
                    }
                ],
                "resourceVersion": "2443953",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-tools-69d7885f86-gkdtt",
                "uid": "cb65f6f4-af7c-48a0-9daa-305e23c611f3"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-6x7pz",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-6x7pz",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-6x7pz"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:07:31Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:08:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:08:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:07:31Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://53c2cef3124e880f2fb40396f818141c57baeb089438f733adbd4cfa471e8fd8",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T12:08:07Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.95",
                "podIPs": [
                    {
                        "ip": "10.1.0.95"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T12:07:31Z"
            }
        }
    ]
}

TASK [include_role : {{ playbook_dir }}/../../shared/configuration/roles/check/setup] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681 `" && echo ansible-tmp-1604664741.119157-12515-197997888573681="` echo /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprorzw_uk TO /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681/ /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664741.119157-12515-197997888573681/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "atime": 1604664222.207044,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604664222.7150514,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3063,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604664222.7150514,
        "nlink": 2,
        "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "810644830",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if ca certs already created] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996 `" && echo ansible-tmp-1604664741.4367127-12551-227152131704996="` echo /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkbqkckys TO /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996/ /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664741.4367127-12551-227152131704996/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.053779",
    "end": "2020-11-06 12:12:21.623933",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:21.570154",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Check if ca key already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182 `" && echo ansible-tmp-1604664741.6905777-12587-216459561663182="` echo /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9yd78frv TO /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182/ /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664741.6905777-12587-216459561663182/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.049761",
    "end": "2020-11-06 12:12:21.871242",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:21.821481",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call common.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:19
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml for localhost

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056 `" && echo ansible-tmp-1604664741.9903398-12626-75091317942056="` echo /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk79lazc6 TO /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056/ /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664741.9903398-12626-75091317942056/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:02.044353",
    "end": "2020-11-06 12:12:24.166805",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:22.122452",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Changing the permissions for generate-crypto script] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898 `" && echo ansible-tmp-1604664744.2360456-12671-197936059800898="` echo /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplysp6gpp TO /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898/ /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664744.2360456-12671-197936059800898/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart.sh"
        }
    },
    "files": "generate-crypto-walmart.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart.sh",
    "size": 2904,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978 `" && echo ansible-tmp-1604664744.4433613-12697-276348728744978="` echo /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuo8b9_vq TO /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978/ /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664744.4433613-12697-276348728744978/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:02.515550",
    "end": "2020-11-06 12:12:27.092378",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:24.576828",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184 `" && echo ansible-tmp-1604664747.15849-12742-79657288586184="` echo /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpn7w051jm TO /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184/ /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664747.15849-12742-79657288586184/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
    "delta": "0:00:01.106524",
    "end": "2020-11-06 12:12:28.395750",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:27.289226",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:27 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:27 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:27 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7b0}\n2020/11/06 12:12:27 [DEBUG] Entered runEnroll\n2020/11/06 12:12:27 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:27 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7b0}\n2020/11/06 12:12:27 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e810 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:27 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197990 DummyKeystore:<nil>}\n2020/11/06 12:12:27 [INFO] TLS Enabled\n2020/11/06 12:12:27 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:27 [DEBUG] Client Cert File: \n2020/11/06 12:12:27 [DEBUG] Client Key File: \n2020/11/06 12:12:27 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:27 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:27 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:27 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:27 [INFO] encoded CSR\n2020/11/06 12:12:27 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEr9An8I2CXBr1ri0f/L/DiYVs5Bam\\n0fzkTc/z+DO2s6jCWS+FXp8kWpeIAgLSxPipk3t27W8eG2g43Iqeaz1+IqA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1n\\na2R0dDAKBggqhkjOPQQDAgNHADBEAiA+nof5XhUc2+K50S+Z2UsFOK2mbqPSVUJR\\nPrUktc90bgIgVGpWsg4JyZVYGn5SAHJH0Spw+d8CfHiO139XOp6/6NM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEr9An8I2CXBr1ri0f/L/DiYVs5Bam\\n0fzkTc/z+DO2s6jCWS+FXp8kWpeIAgLSxPipk3t27W8eG2g43Iqeaz1+IqA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1n\\na2R0dDAKBggqhkjOPQQDAgNHADBEAiA+nof5XhUc2+K50S+Z2UsFOK2mbqPSVUJR\\nPrUktc90bgIgVGpWsg4JyZVYGn5SAHJH0Spw+d8CfHiO139XOp6/6NM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ fabric-ca-client getcacert -d -u https://ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp\n2020/11/06 12:12:28 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:28 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 12:12:28 [DEBUG] Client configuration settings: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 12:12:28 [DEBUG] Entered runGetCACert\n2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396090 DummyKeystore:<nil>}\n2020/11/06 12:12:28 [INFO] TLS Enabled\n2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:28 [DEBUG] Client Cert File: \n2020/11/06 12:12:28 [DEBUG] Client Key File: \n2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:28 [DEBUG] Sending request\nPOST https://ca.walmart:7054/cainfo\n{}\nError: POST failure of request: POST https://ca.walmart:7054/cainfo\n{}: Post https://ca.walmart:7054/cainfo: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*': No such file or directory\n+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:28 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:28 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:28 [DEBUG] Checking for enrollment\n2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45d0}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398f10 DummyKeystore:<nil>}\n2020/11/06 12:12:28 [INFO] TLS Enabled\n2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:28 [DEBUG] Client Cert File: \n2020/11/06 12:12:28 [DEBUG] Client Key File: \n2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:28 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:28 [DEBUG] Home directory: /root/ca-tools/walmart/admin\n2020/11/06 12:12:28 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml\n2020/11/06 12:12:28 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a840}\n2020/11/06 12:12:28 [DEBUG] Entered runEnroll\n2020/11/06 12:12:28 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a840}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028a8a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202a4600 DummyKeystore:<nil>}\n2020/11/06 12:12:28 [INFO] TLS Enabled\n2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:28 [DEBUG] Client Cert File: \n2020/11/06 12:12:28 [DEBUG] Client Key File: \n2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:28 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:28 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:28 [INFO] encoded CSR\n2020/11/06 12:12:28 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCF3H0w7JNACQqGQc4xEJnWh\\nSbJnj2BWXztpuVaoKgQlUAn95RnFvLf0j7rlCdBgUruoQtrqPwIzC79dNKjRym6g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANb6yyt+JKUdwmM/zztybtRyflLz\\n3MgM5YkNQg6LZg+WAiBUv1sGvGWr5W9Sl2AjgOQvwKEyNBR0m/Nniex/28jt5w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCF3H0w7JNACQqGQc4xEJnWh\\nSbJnj2BWXztpuVaoKgQlUAn95RnFvLf0j7rlCdBgUruoQtrqPwIzC79dNKjRym6g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANb6yyt+JKUdwmM/zztybtRyflLz\\n3MgM5YkNQg6LZg+WAiBUv1sGvGWr5W9Sl2AjgOQvwKEyNBR0m/Nniex/28jt5w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts\n+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory\n+ mkdir /root/ca-tools/walmart/admin/msp/admincerts\n+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:28 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:28 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 12:12:28 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201887e0}\n2020/11/06 12:12:28 [DEBUG] Entered runEnroll\n2020/11/06 12:12:28 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201887e0}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42047a160 DummyKeystore:<nil>}\n2020/11/06 12:12:28 [INFO] TLS Enabled\n2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:28 [DEBUG] Client Cert File: \n2020/11/06 12:12:28 [DEBUG] Client Key File: \n2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:28 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:28 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:28 [INFO] encoded CSR\n2020/11/06 12:12:28 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBcVW0RnIvrkAjkQSARZix6t\\nc166IqSd1jDzYyYztxBKth+FY+Q/pi2evLiG9aPtMTJ31ghfCNgej8ICPSyAB2Sg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgQB5tpd1zSN6H6W+HCLxSa9j6GS6h\\n8EQpOFudbS9J860CIFoj/ObZFPyosjDuwW80YjD+GEz61qmdfW7m7ePHt3Ab\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBcVW0RnIvrkAjkQSARZix6t\\nc166IqSd1jDzYyYztxBKth+FY+Q/pi2evLiG9aPtMTJ31ghfCNgej8ICPSyAB2Sg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgQB5tpd1zSN6H6W+HCLxSa9j6GS6h\\n8EQpOFudbS9J860CIFoj/ObZFPyosjDuwW80YjD+GEz61qmdfW7m7ePHt3Ab\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls\n+ cp /root/ca-tools/walmart/admin/tls/keystore/06f458d417ccb6b23bf59087abe885ac6a065bf799b33e6d47cb5f440c4ce831_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key\n+ cp '/root/ca-tools/walmart/admin/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/admin/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/admin/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/admin/tls/tlscacerts/*': No such file or directory\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:27 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:27 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:27 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7b0}",
        "2020/11/06 12:12:27 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:27 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:27 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7b0}",
        "2020/11/06 12:12:27 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e810 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:27 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197990 DummyKeystore:<nil>}",
        "2020/11/06 12:12:27 [INFO] TLS Enabled",
        "2020/11/06 12:12:27 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:27 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:27 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:27 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:27 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:27 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:27 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:27 [INFO] encoded CSR",
        "2020/11/06 12:12:27 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEr9An8I2CXBr1ri0f/L/DiYVs5Bam\\n0fzkTc/z+DO2s6jCWS+FXp8kWpeIAgLSxPipk3t27W8eG2g43Iqeaz1+IqA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1n\\na2R0dDAKBggqhkjOPQQDAgNHADBEAiA+nof5XhUc2+K50S+Z2UsFOK2mbqPSVUJR\\nPrUktc90bgIgVGpWsg4JyZVYGn5SAHJH0Spw+d8CfHiO139XOp6/6NM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEr9An8I2CXBr1ri0f/L/DiYVs5Bam\\n0fzkTc/z+DO2s6jCWS+FXp8kWpeIAgLSxPipk3t27W8eG2g43Iqeaz1+IqA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1n\\na2R0dDAKBggqhkjOPQQDAgNHADBEAiA+nof5XhUc2+K50S+Z2UsFOK2mbqPSVUJR\\nPrUktc90bgIgVGpWsg4JyZVYGn5SAHJH0Spw+d8CfHiO139XOp6/6NM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ fabric-ca-client getcacert -d -u https://ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp",
        "2020/11/06 12:12:28 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:28 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:28 [DEBUG] Client configuration settings: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 12:12:28 [DEBUG] Entered runGetCACert",
        "2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396090 DummyKeystore:<nil>}",
        "2020/11/06 12:12:28 [INFO] TLS Enabled",
        "2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:28 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:28 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:28 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/cainfo",
        "{}",
        "Error: POST failure of request: POST https://ca.walmart:7054/cainfo",
        "{}: Post https://ca.walmart:7054/cainfo: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*': No such file or directory",
        "+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:28 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:28 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:28 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45d0}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398f10 DummyKeystore:<nil>}",
        "2020/11/06 12:12:28 [INFO] TLS Enabled",
        "2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:28 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:28 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:28 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:28 [DEBUG] Home directory: /root/ca-tools/walmart/admin",
        "2020/11/06 12:12:28 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:28 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a840}",
        "2020/11/06 12:12:28 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:28 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a840}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028a8a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202a4600 DummyKeystore:<nil>}",
        "2020/11/06 12:12:28 [INFO] TLS Enabled",
        "2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:28 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:28 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:28 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:28 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:28 [INFO] encoded CSR",
        "2020/11/06 12:12:28 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCF3H0w7JNACQqGQc4xEJnWh\\nSbJnj2BWXztpuVaoKgQlUAn95RnFvLf0j7rlCdBgUruoQtrqPwIzC79dNKjRym6g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANb6yyt+JKUdwmM/zztybtRyflLz\\n3MgM5YkNQg6LZg+WAiBUv1sGvGWr5W9Sl2AjgOQvwKEyNBR0m/Nniex/28jt5w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCF3H0w7JNACQqGQc4xEJnWh\\nSbJnj2BWXztpuVaoKgQlUAn95RnFvLf0j7rlCdBgUruoQtrqPwIzC79dNKjRym6g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANb6yyt+JKUdwmM/zztybtRyflLz\\n3MgM5YkNQg6LZg+WAiBUv1sGvGWr5W9Sl2AjgOQvwKEyNBR0m/Nniex/28jt5w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir /root/ca-tools/walmart/admin/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:28 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:28 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:28 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201887e0}",
        "2020/11/06 12:12:28 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:28 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201887e0}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42047a160 DummyKeystore:<nil>}",
        "2020/11/06 12:12:28 [INFO] TLS Enabled",
        "2020/11/06 12:12:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:28 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:28 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:28 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:28 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:28 [INFO] encoded CSR",
        "2020/11/06 12:12:28 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBcVW0RnIvrkAjkQSARZix6t\\nc166IqSd1jDzYyYztxBKth+FY+Q/pi2evLiG9aPtMTJ31ghfCNgej8ICPSyAB2Sg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgQB5tpd1zSN6H6W+HCLxSa9j6GS6h\\n8EQpOFudbS9J860CIFoj/ObZFPyosjDuwW80YjD+GEz61qmdfW7m7ePHt3Ab\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBcVW0RnIvrkAjkQSARZix6t\\nc166IqSd1jDzYyYztxBKth+FY+Q/pi2evLiG9aPtMTJ31ghfCNgej8ICPSyAB2Sg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgQB5tpd1zSN6H6W+HCLxSa9j6GS6h\\n8EQpOFudbS9J860CIFoj/ObZFPyosjDuwW80YjD+GEz61qmdfW7m7ePHt3Ab\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/admin/tls/keystore/06f458d417ccb6b23bf59087abe885ac6a065bf799b33e6d47cb5f440c4ce831_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key",
        "+ cp '/root/ca-tools/walmart/admin/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/admin/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/admin/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/admin/tls/tlscacerts/*': No such file or directory",
        "+ cd /"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:48
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593 `" && echo ansible-tmp-1604664748.4661942-12782-85527617679593="` echo /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpv_sesboa TO /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593/ /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664748.4661942-12782-85527617679593/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.726473",
    "end": "2020-11-06 12:12:29.323886",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:28.597413",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call orderer.yaml for each orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045 `" && echo ansible-tmp-1604664749.5144436-12824-17627837582045="` echo /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbcd4hfhm TO /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045/ /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664749.5144436-12824-17627837582045/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
    "delta": "0:00:00.049613",
    "end": "2020-11-06 12:12:29.695945",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:29.646332",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019 `" && echo ansible-tmp-1604664749.7900856-12860-18120908521019="` echo /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7okgu3gs TO /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019/ /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664749.7900856-12860-18120908521019/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
    "delta": "0:00:00.051145",
    "end": "2020-11-06 12:12:29.974183",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:29.923038",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142 `" && echo ansible-tmp-1604664750.1056888-12899-18958983600142="` echo /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp67prcsyg TO /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142/ /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664750.1056888-12899-18958983600142/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.351774",
    "end": "2020-11-06 12:12:31.588975",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:30.237201",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894 `" && echo ansible-tmp-1604664751.6562073-12944-93806806777894="` echo /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpeb2hu3tp TO /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894/ /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664751.6562073-12944-93806806777894/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270 `" && echo ansible-tmp-1604664751.8654063-12972-52292868200270="` echo /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6t9rscm7 TO /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270/ /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664751.8654063-12972-52292868200270/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer1.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer1.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer1.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer1.sh",
    "size": 2587,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106 `" && echo ansible-tmp-1604664752.043508-12972-143876960978106="` echo /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8_4yjp9z TO /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106/ /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664752.043508-12972-143876960978106/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952 `" && echo ansible-tmp-1604664752.2496808-13022-102397883684952="` echo /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxs5yhp5v TO /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952/ /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664752.2496808-13022-102397883684952/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.801636",
    "end": "2020-11-06 12:12:36.184074",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:32.382438",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916 `" && echo ansible-tmp-1604664756.254358-13072-47402109517916="` echo /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpu9_l8weh TO /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916/ /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664756.254358-13072-47402109517916/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.674952",
    "end": "2020-11-06 12:12:38.060037",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:36.385085",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer1.walmart-net\n+ CSR_HOSTS=orderer1.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:37 [DEBUG] Checking for enrollment\n2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0540}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a05a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a6d70 DummyKeystore:<nil>}\n2020/11/06 12:12:37 [INFO] TLS Enabled\n2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:37 [DEBUG] Client Cert File: \n2020/11/06 12:12:37 [DEBUG] Client Key File: \n2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:37 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:37 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}\n2020/11/06 12:12:37 [DEBUG] Entered runEnroll\n2020/11/06 12:12:37 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42024e4a0 DummyKeystore:<nil>}\n2020/11/06 12:12:37 [INFO] TLS Enabled\n2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:37 [DEBUG] Client Cert File: \n2020/11/06 12:12:37 [DEBUG] Client Key File: \n2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:37 [INFO] encoded CSR\n2020/11/06 12:12:37 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQCmVSu/7ykqr1bW4l\\nfl46k5Utdht6qoiDAKToWAgvmZpLO4YUPA33kwaL7KlX3tz6QpCTB+EUZIbGAnrw\\nPvXqoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDXPaRxjdJF/5mJd0Hd1w+4JyFvC5JCB9oXUdxm\\n/i1zjQIgeJSpebEDAjQE6V4/zAX8GDLHmCppU+1iwxKqUOsfE3M=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQCmVSu/7ykqr1bW4l\\nfl46k5Utdht6qoiDAKToWAgvmZpLO4YUPA33kwaL7KlX3tz6QpCTB+EUZIbGAnrw\\nPvXqoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDXPaRxjdJF/5mJd0Hd1w+4JyFvC5JCB9oXUdxm\\n/i1zjQIgeJSpebEDAjQE6V4/zAX8GDLHmCppU+1iwxKqUOsfE3M=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/9383b91bc7b3730d0e73db4acb88e05c77bb18f96ab4ff74929e2b99d3ec7209_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:37 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e690}\n2020/11/06 12:12:37 [DEBUG] Entered runEnroll\n2020/11/06 12:12:37 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e690}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046e290 DummyKeystore:<nil>}\n2020/11/06 12:12:37 [INFO] TLS Enabled\n2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:37 [DEBUG] Client Cert File: \n2020/11/06 12:12:37 [DEBUG] Client Key File: \n2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:37 [INFO] encoded CSR\n2020/11/06 12:12:37 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKepJAQ4oj0wQgC1YUUv\\nsxkAyy4I4Cw2WnKznEKBH8S/D0yGq/kFS9J2lZe2NqDnw1OWjdCdR87Zs+8w2r+z\\n7FygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgK4SjKqyUt8Z9f+GhsHt3x4Mz\\nZcJWiICKwiRKEB/yaskCIDhaP+yKabA4l4lkzH1xBlmXTUDRkq9iV947nKGluW0q\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKepJAQ4oj0wQgC1YUUv\\nsxkAyy4I4Cw2WnKznEKBH8S/D0yGq/kFS9J2lZe2NqDnw1OWjdCdR87Zs+8w2r+z\\n7FygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgK4SjKqyUt8Z9f+GhsHt3x4Mz\\nZcJWiICKwiRKEB/yaskCIDhaP+yKabA4l4lkzH1xBlmXTUDRkq9iV947nKGluW0q\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer1s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer1 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer1 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:37 [DEBUG] Checking for enrollment\n2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395790 DummyKeystore:<nil>}\n2020/11/06 12:12:37 [INFO] TLS Enabled\n2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:37 [DEBUG] Client Cert File: \n2020/11/06 12:12:37 [DEBUG] Client Key File: \n2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:37 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 12:12:37 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 12:12:37 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml\n2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}\n2020/11/06 12:12:37 [DEBUG] Entered runEnroll\n2020/11/06 12:12:37 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420473a40 DummyKeystore:<nil>}\n2020/11/06 12:12:37 [INFO] TLS Enabled\n2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:37 [DEBUG] Client Cert File: \n2020/11/06 12:12:37 [DEBUG] Client Key File: \n2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:37 [INFO] encoded CSR\n2020/11/06 12:12:37 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHpS4aBgOvhqXQsc+wRIcmlF\\nz+9IyAUuwYgEINvlkmkT4VJP2/OjQeg7GEPBUxv6ie+H+rSWc+aP0qsYccwSdpug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMXGIVfagwg5N0DUaPCZIfAjmfkt\\nXFHN2396PRa/LB34AiBlOmfrsAZIamjPZ3UJqipx21zXZIO/xiEdHVUq+mo9CQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHpS4aBgOvhqXQsc+wRIcmlF\\nz+9IyAUuwYgEINvlkmkT4VJP2/OjQeg7GEPBUxv6ie+H+rSWc+aP0qsYccwSdpug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMXGIVfagwg5N0DUaPCZIfAjmfkt\\nXFHN2396PRa/LB34AiBlOmfrsAZIamjPZ3UJqipx21zXZIO/xiEdHVUq+mo9CQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 12:12:37 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42056e660}\n2020/11/06 12:12:37 [DEBUG] Entered runEnroll\n2020/11/06 12:12:37 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42056e660}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42056e6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200aa050 DummyKeystore:<nil>}\n2020/11/06 12:12:37 [INFO] TLS Enabled\n2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:37 [DEBUG] Client Cert File: \n2020/11/06 12:12:37 [DEBUG] Client Key File: \n2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:38 [INFO] encoded CSR\n2020/11/06 12:12:38 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCSjvnawqq9UqR3nxDp30xTkiZdEkIP5UUwafjzCgJhYgCFRIcCyZ8lwZ/4JVBAC\\nW1opXmyZFPd8lRSjoJqaKC+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMG7\\nfqCMC20ZmFbkk2njvJ5spMfgaaFwqwmTvy2oHTz2AiBxM+g81HqjsslV6VW3N6sh\\nhCfxNdvvZTwFlbY1LFwMbQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCSjvnawqq9UqR3nxDp30xTkiZdEkIP5UUwafjzCgJhYgCFRIcCyZ8lwZ/4JVBAC\\nW1opXmyZFPd8lRSjoJqaKC+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMG7\\nfqCMC20ZmFbkk2njvJ5spMfgaaFwqwmTvy2oHTz2AiBxM+g81HqjsslV6VW3N6sh\\nhCfxNdvvZTwFlbY1LFwMbQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/4d0ab79a84a4f66c669e0224eedf722d6a3953982ab08b081512732d738de24e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer1.walmart-net",
        "+ CSR_HOSTS=orderer1.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:37 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0540}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a05a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a6d70 DummyKeystore:<nil>}",
        "2020/11/06 12:12:37 [INFO] TLS Enabled",
        "2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:37 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:37 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:37 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:37 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}",
        "2020/11/06 12:12:37 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:37 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42024e4a0 DummyKeystore:<nil>}",
        "2020/11/06 12:12:37 [INFO] TLS Enabled",
        "2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:37 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:37 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:37 [INFO] encoded CSR",
        "2020/11/06 12:12:37 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQCmVSu/7ykqr1bW4l\\nfl46k5Utdht6qoiDAKToWAgvmZpLO4YUPA33kwaL7KlX3tz6QpCTB+EUZIbGAnrw\\nPvXqoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDXPaRxjdJF/5mJd0Hd1w+4JyFvC5JCB9oXUdxm\\n/i1zjQIgeJSpebEDAjQE6V4/zAX8GDLHmCppU+1iwxKqUOsfE3M=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQCmVSu/7ykqr1bW4l\\nfl46k5Utdht6qoiDAKToWAgvmZpLO4YUPA33kwaL7KlX3tz6QpCTB+EUZIbGAnrw\\nPvXqoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDXPaRxjdJF/5mJd0Hd1w+4JyFvC5JCB9oXUdxm\\n/i1zjQIgeJSpebEDAjQE6V4/zAX8GDLHmCppU+1iwxKqUOsfE3M=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/9383b91bc7b3730d0e73db4acb88e05c77bb18f96ab4ff74929e2b99d3ec7209_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:37 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e690}",
        "2020/11/06 12:12:37 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:37 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e690}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046e290 DummyKeystore:<nil>}",
        "2020/11/06 12:12:37 [INFO] TLS Enabled",
        "2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:37 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:37 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:37 [INFO] encoded CSR",
        "2020/11/06 12:12:37 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKepJAQ4oj0wQgC1YUUv\\nsxkAyy4I4Cw2WnKznEKBH8S/D0yGq/kFS9J2lZe2NqDnw1OWjdCdR87Zs+8w2r+z\\n7FygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgK4SjKqyUt8Z9f+GhsHt3x4Mz\\nZcJWiICKwiRKEB/yaskCIDhaP+yKabA4l4lkzH1xBlmXTUDRkq9iV947nKGluW0q\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKepJAQ4oj0wQgC1YUUv\\nsxkAyy4I4Cw2WnKznEKBH8S/D0yGq/kFS9J2lZe2NqDnw1OWjdCdR87Zs+8w2r+z\\n7FygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgK4SjKqyUt8Z9f+GhsHt3x4Mz\\nZcJWiICKwiRKEB/yaskCIDhaP+yKabA4l4lkzH1xBlmXTUDRkq9iV947nKGluW0q\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer1s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer1 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer1 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:37 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395790 DummyKeystore:<nil>}",
        "2020/11/06 12:12:37 [INFO] TLS Enabled",
        "2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:37 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:37 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:37 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 12:12:37 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 12:12:37 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}",
        "2020/11/06 12:12:37 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:37 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420473a40 DummyKeystore:<nil>}",
        "2020/11/06 12:12:37 [INFO] TLS Enabled",
        "2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:37 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:37 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:37 [INFO] encoded CSR",
        "2020/11/06 12:12:37 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHpS4aBgOvhqXQsc+wRIcmlF\\nz+9IyAUuwYgEINvlkmkT4VJP2/OjQeg7GEPBUxv6ie+H+rSWc+aP0qsYccwSdpug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMXGIVfagwg5N0DUaPCZIfAjmfkt\\nXFHN2396PRa/LB34AiBlOmfrsAZIamjPZ3UJqipx21zXZIO/xiEdHVUq+mo9CQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHpS4aBgOvhqXQsc+wRIcmlF\\nz+9IyAUuwYgEINvlkmkT4VJP2/OjQeg7GEPBUxv6ie+H+rSWc+aP0qsYccwSdpug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMXGIVfagwg5N0DUaPCZIfAjmfkt\\nXFHN2396PRa/LB34AiBlOmfrsAZIamjPZ3UJqipx21zXZIO/xiEdHVUq+mo9CQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 12:12:37 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:37 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42056e660}",
        "2020/11/06 12:12:37 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:37 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42056e660}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42056e6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200aa050 DummyKeystore:<nil>}",
        "2020/11/06 12:12:37 [INFO] TLS Enabled",
        "2020/11/06 12:12:37 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:37 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:37 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:37 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:37 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:38 [INFO] encoded CSR",
        "2020/11/06 12:12:38 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCSjvnawqq9UqR3nxDp30xTkiZdEkIP5UUwafjzCgJhYgCFRIcCyZ8lwZ/4JVBAC\\nW1opXmyZFPd8lRSjoJqaKC+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMG7\\nfqCMC20ZmFbkk2njvJ5spMfgaaFwqwmTvy2oHTz2AiBxM+g81HqjsslV6VW3N6sh\\nhCfxNdvvZTwFlbY1LFwMbQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCSjvnawqq9UqR3nxDp30xTkiZdEkIP5UUwafjzCgJhYgCFRIcCyZ8lwZ/4JVBAC\\nW1opXmyZFPd8lRSjoJqaKC+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMG7\\nfqCMC20ZmFbkk2njvJ5spMfgaaFwqwmTvy2oHTz2AiBxM+g81HqjsslV6VW3N6sh\\nhCfxNdvvZTwFlbY1LFwMbQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/4d0ab79a84a4f66c669e0224eedf722d6a3953982ab08b081512732d738de24e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743 `" && echo ansible-tmp-1604664758.1289124-13118-161838043879743="` echo /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmploy5266l TO /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743/ /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664758.1289124-13118-161838043879743/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.723895",
    "end": "2020-11-06 12:12:38.983901",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:38.260006",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735 `" && echo ansible-tmp-1604664759.0565403-13158-143973755607735="` echo /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp76e8kqw_ TO /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735/ /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664759.0565403-13158-143973755607735/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.156564",
    "end": "2020-11-06 12:12:39.344232",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:39.187668",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575 `" && echo ansible-tmp-1604664759.4115436-13211-185757666462575="` echo /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp938zbo5a TO /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575/ /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664759.4115436-13211-185757666462575/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer1-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5RENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9EUTVXaGNOTWpNd09EQXpNRGd5Ck9EUTVXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TVM1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFkCmFncTQ3ZjdueVp6eHZRVnM5UjRoV0VQeHVpZk1HZEttRVFveW52NVUrWDNlRndLYytQSkZPekJKNnlQMVBlRXIKbENGWHR2ZmxTYzYzb1dXOHpqMGhvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVVJqNWFNMDRUd3dCSk43SG9oWjhpbmpQcDdWNHdDZ1lJS29aSXpqMEVBd0lEClJ3QXdSQUlnUVVtNmRUNG41VlErT0I3TXMxckFtNVV6ZzNwS1hzNmlicnBJbUVTWkU2OENJQWw2d3I4enUrMFEKT011VTBTREZVMjhKamZjSnFQb1hBLzc3ZFlTRHhHNWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhEQ0NBWmFnQXdJQkFnSVVNemhzd2VRL1l4R1RBbHFkUDFpdmtNWXg4NzB3Q2dZSUtvWkl6ajBFQXdJdwpWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEVlFRRERBcGpZUzUzWVd4dFlYSjBNQjRYRFRJd01URXcKTmpBNE1Ua3hObG9YRFRJek1EZ3lOekE0TVRreE5sb3dWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTQpCa3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEClZRUUREQXBqWVM1M1lXeHRZWEowTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFeG9JdDhlWisKOVhHQ0M3VzdMbEdVK2lVUTV2bmFxem1PczF0Snc2anZMYm40ZDlLTk56NHVuclg1LzViM3E0WWtMeEpZT3poTQpYYzd3N3JwbXFLV0VzcU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3CkhRWURWUjBPQkJZRUZKNGlUblB4dk1wbVNLSXFkN2ZmaG5tQzhNOEFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUMKSVFEZ3dQZlFZTVBDYjJiaXdma09UNVZkVnVFUkh2SWdidGxrdHpWVkZCTjl0Z0lnTmw0T3AyVEdIT1kwcXRoRAp2dENDMUNvMGhEbHZKTGVyYUxwYlYxdGtHVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjRXFDbXgycWJFcnQyZmd0ODZhR2ZGWVdZcGx2Z2pQK00yREpqL2pwdnlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFdvS3VPMys1OG1jOGIwRmJQVWVJVmhEOGJvbnpCblNwaEVLTXA3K1ZQbDkzaGNDblBqeQpSVHN3U2VzajlUM2hLNVFoVjdiMzVVbk90NkZsdk00OUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:28:49Z",
                "name": "orderer1-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408734",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer1-walmart-net-ambassador-certs",
                "uid": "a5a7499f-2fa9-4ba5-9662-97fa6bef6281"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528 `" && echo ansible-tmp-1604664760.0290732-13239-4071610466528="` echo /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpa4uhosa2 TO /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528/ /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664760.0290732-13239-4071610466528/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
    "delta": "0:00:00.055566",
    "end": "2020-11-06 12:12:40.216352",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:40.160786",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180 `" && echo ansible-tmp-1604664760.3807259-13279-268958422954180="` echo /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9n3m_km6 TO /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180/ /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664760.3807259-13279-268958422954180/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
    "delta": "0:00:00.042439",
    "end": "2020-11-06 12:12:40.554101",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:40.511662",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384 `" && echo ansible-tmp-1604664760.618891-13317-33845311375384="` echo /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpw2jr0iix TO /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384/ /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664760.618891-13317-33845311375384/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
    "delta": "0:00:00.051616",
    "end": "2020-11-06 12:12:40.800760",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:40.749144",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358 `" && echo ansible-tmp-1604664760.8978643-13353-81693297953358="` echo /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbmlws8gq TO /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358/ /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664760.8978643-13353-81693297953358/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
    "delta": "0:00:00.046142",
    "end": "2020-11-06 12:12:41.074804",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:41.028662",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947 `" && echo ansible-tmp-1604664761.2032208-13392-247134884665947="` echo /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpszc9tl0m TO /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947/ /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664761.2032208-13392-247134884665947/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.261737",
    "end": "2020-11-06 12:12:42.597570",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:41.335833",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569 `" && echo ansible-tmp-1604664762.6632323-13437-239278238030569="` echo /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwclpj7_u TO /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569/ /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664762.6632323-13437-239278238030569/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823 `" && echo ansible-tmp-1604664762.8720253-13463-16127463908823="` echo /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_s6ygwkh TO /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823/ /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664762.8720253-13463-16127463908823/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer2.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer2.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer2.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer2.sh",
    "size": 2587,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906 `" && echo ansible-tmp-1604664763.0448902-13463-155662556130906="` echo /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpf7pkdyyo TO /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906/ /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664763.0448902-13463-155662556130906/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275 `" && echo ansible-tmp-1604664763.24973-13513-115284327329275="` echo /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxhg1uvwp TO /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275/ /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664763.24973-13513-115284327329275/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.628352",
    "end": "2020-11-06 12:12:47.016830",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:43.388478",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320 `" && echo ansible-tmp-1604664767.0898094-13563-152859795450320="` echo /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplkcaky17 TO /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320/ /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664767.0898094-13563-152859795450320/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.728095",
    "end": "2020-11-06 12:12:48.952918",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:47.224823",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer2.walmart-net\n+ CSR_HOSTS=orderer2.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:47 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:47 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:47 [DEBUG] Checking for enrollment\n2020/11/06 12:12:47 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc630}\n2020/11/06 12:12:47 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:47 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a97c0 DummyKeystore:<nil>}\n2020/11/06 12:12:47 [INFO] TLS Enabled\n2020/11/06 12:12:47 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:47 [DEBUG] Client Cert File: \n2020/11/06 12:12:47 [DEBUG] Client Key File: \n2020/11/06 12:12:47 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:47 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:47 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:47 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380630}\n2020/11/06 12:12:47 [DEBUG] Entered runEnroll\n2020/11/06 12:12:47 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:47 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380630}\n2020/11/06 12:12:47 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:47 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a5b60 DummyKeystore:<nil>}\n2020/11/06 12:12:47 [INFO] TLS Enabled\n2020/11/06 12:12:47 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:47 [DEBUG] Client Cert File: \n2020/11/06 12:12:47 [DEBUG] Client Key File: \n2020/11/06 12:12:47 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:47 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:47 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:47 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:48 [INFO] encoded CSR\n2020/11/06 12:12:48 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATEQfjzQGgaAyWzvvmB\\neJn48bXSddLvF0zKyUpTcppKqBGjkYvtRXDJDysyFw5T/HlkD43cp8xSTSyJCufN\\nLGxZoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDcOEHeUjnayWvSZfgxj6ZORVXOK2M8cxgzkjcB\\nwKX3yAIgMe7GRCur7rDf7/iN8GY30lSb27LWVdxaIGcMVfLA1QQ=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATEQfjzQGgaAyWzvvmB\\neJn48bXSddLvF0zKyUpTcppKqBGjkYvtRXDJDysyFw5T/HlkD43cp8xSTSyJCufN\\nLGxZoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDcOEHeUjnayWvSZfgxj6ZORVXOK2M8cxgzkjcB\\nwKX3yAIgMe7GRCur7rDf7/iN8GY30lSb27LWVdxaIGcMVfLA1QQ=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/ea4df8a9b1a4b9f0970114f7a743adbccb7a76eb98a340a3fbf575c9cc7e4bb8_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:48 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:48 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}\n2020/11/06 12:12:48 [DEBUG] Entered runEnroll\n2020/11/06 12:12:48 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395ab0 DummyKeystore:<nil>}\n2020/11/06 12:12:48 [INFO] TLS Enabled\n2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:48 [DEBUG] Client Cert File: \n2020/11/06 12:12:48 [DEBUG] Client Key File: \n2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:48 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:48 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:48 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:48 [INFO] encoded CSR\n2020/11/06 12:12:48 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKHTD+WvvRFkoBOyU4ky\\nOmmUpvqXJdEwZAIuqpMODNTAys2VhbtpI0EL8z9g5dPYzqLwap5vMQrLbN/6gJbr\\n/IegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgYSLDQLN34Wq25xTTUA9hLSS8\\nBeXnJCAJGfOr8UfQSvICIAlFKApAi3Y9cOKV//+IQN1Dp0VSfJSPXh/QOlCYAfLn\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKHTD+WvvRFkoBOyU4ky\\nOmmUpvqXJdEwZAIuqpMODNTAys2VhbtpI0EL8z9g5dPYzqLwap5vMQrLbN/6gJbr\\n/IegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgYSLDQLN34Wq25xTTUA9hLSS8\\nBeXnJCAJGfOr8UfQSvICIAlFKApAi3Y9cOKV//+IQN1Dp0VSfJSPXh/QOlCYAfLn\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer2s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer2 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer2 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:48 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:48 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:48 [DEBUG] Checking for enrollment\n2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b4630}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b4690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb7d0 DummyKeystore:<nil>}\n2020/11/06 12:12:48 [INFO] TLS Enabled\n2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:48 [DEBUG] Client Cert File: \n2020/11/06 12:12:48 [DEBUG] Client Key File: \n2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:48 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 12:12:48 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 12:12:48 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4750}\n2020/11/06 12:12:48 [DEBUG] Entered runEnroll\n2020/11/06 12:12:48 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4750}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c47b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397c50 DummyKeystore:<nil>}\n2020/11/06 12:12:48 [INFO] TLS Enabled\n2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:48 [DEBUG] Client Cert File: \n2020/11/06 12:12:48 [DEBUG] Client Key File: \n2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:48 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:48 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:48 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:48 [INFO] encoded CSR\n2020/11/06 12:12:48 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNnT/gn1VkSLMrdn40xjmNB4\\ndEU+D/TUnLjWEenLNlyaxvuTbk+IM5JVTV5YmaZNN6bNU851TjJrDZcz8DwO3fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMmyEy7ms8flfElthrMq4iwayeTG\\nGjpNCXf57pa+lF9eAiBm8KnNr1ALeBgPci6qC+i+J68LlRXqXeyWufN0APdUjQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNnT/gn1VkSLMrdn40xjmNB4\\ndEU+D/TUnLjWEenLNlyaxvuTbk+IM5JVTV5YmaZNN6bNU851TjJrDZcz8DwO3fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMmyEy7ms8flfElthrMq4iwayeTG\\nGjpNCXf57pa+lF9eAiBm8KnNr1ALeBgPci6qC+i+J68LlRXqXeyWufN0APdUjQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 12:12:48 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:48 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a5a0}\n2020/11/06 12:12:48 [DEBUG] Entered runEnroll\n2020/11/06 12:12:48 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a5a0}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420171550 DummyKeystore:<nil>}\n2020/11/06 12:12:48 [INFO] TLS Enabled\n2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:48 [DEBUG] Client Cert File: \n2020/11/06 12:12:48 [DEBUG] Client Key File: \n2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:48 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:48 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:48 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:48 [INFO] encoded CSR\n2020/11/06 12:12:48 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBHZdWag7ap/aLpAlns6GSrAcwkOBdlPYygTh1epzOR2rjrlWpc0pWb6hltOGVZpn\\n+M2lxWFcayoyMaWqzQkvkwGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAJHD\\nDVFIjkVElG/OWr6gqE3rcT4EFmcRA8TkWQbsk4RtAiBJlaMN9/KDC9jxgbqKwbZI\\nWRCEXDJ8E5A8YiSTbWCFuA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBHZdWag7ap/aLpAlns6GSrAcwkOBdlPYygTh1epzOR2rjrlWpc0pWb6hltOGVZpn\\n+M2lxWFcayoyMaWqzQkvkwGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAJHD\\nDVFIjkVElG/OWr6gqE3rcT4EFmcRA8TkWQbsk4RtAiBJlaMN9/KDC9jxgbqKwbZI\\nWRCEXDJ8E5A8YiSTbWCFuA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/4d0ab79a84a4f66c669e0224eedf722d6a3953982ab08b081512732d738de24e_sk /root/ca-tools/walmart/client1/tls/keystore/720f8f6aa2f6627cb9b24ab7686dfebdbe998b4081191aea6c0d607548a4872e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer2.walmart-net",
        "+ CSR_HOSTS=orderer2.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:47 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:47 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:47 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:47 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc630}",
        "2020/11/06 12:12:47 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:47 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a97c0 DummyKeystore:<nil>}",
        "2020/11/06 12:12:47 [INFO] TLS Enabled",
        "2020/11/06 12:12:47 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:47 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:47 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:47 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:47 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:47 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:47 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380630}",
        "2020/11/06 12:12:47 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:47 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:47 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380630}",
        "2020/11/06 12:12:47 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:47 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a5b60 DummyKeystore:<nil>}",
        "2020/11/06 12:12:47 [INFO] TLS Enabled",
        "2020/11/06 12:12:47 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:47 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:47 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:47 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:47 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:47 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:47 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:48 [INFO] encoded CSR",
        "2020/11/06 12:12:48 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATEQfjzQGgaAyWzvvmB\\neJn48bXSddLvF0zKyUpTcppKqBGjkYvtRXDJDysyFw5T/HlkD43cp8xSTSyJCufN\\nLGxZoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDcOEHeUjnayWvSZfgxj6ZORVXOK2M8cxgzkjcB\\nwKX3yAIgMe7GRCur7rDf7/iN8GY30lSb27LWVdxaIGcMVfLA1QQ=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATEQfjzQGgaAyWzvvmB\\neJn48bXSddLvF0zKyUpTcppKqBGjkYvtRXDJDysyFw5T/HlkD43cp8xSTSyJCufN\\nLGxZoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDcOEHeUjnayWvSZfgxj6ZORVXOK2M8cxgzkjcB\\nwKX3yAIgMe7GRCur7rDf7/iN8GY30lSb27LWVdxaIGcMVfLA1QQ=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/ea4df8a9b1a4b9f0970114f7a743adbccb7a76eb98a340a3fbf575c9cc7e4bb8_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:48 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:48 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}",
        "2020/11/06 12:12:48 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:48 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395ab0 DummyKeystore:<nil>}",
        "2020/11/06 12:12:48 [INFO] TLS Enabled",
        "2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:48 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:48 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:48 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:48 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:48 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:48 [INFO] encoded CSR",
        "2020/11/06 12:12:48 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKHTD+WvvRFkoBOyU4ky\\nOmmUpvqXJdEwZAIuqpMODNTAys2VhbtpI0EL8z9g5dPYzqLwap5vMQrLbN/6gJbr\\n/IegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgYSLDQLN34Wq25xTTUA9hLSS8\\nBeXnJCAJGfOr8UfQSvICIAlFKApAi3Y9cOKV//+IQN1Dp0VSfJSPXh/QOlCYAfLn\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKHTD+WvvRFkoBOyU4ky\\nOmmUpvqXJdEwZAIuqpMODNTAys2VhbtpI0EL8z9g5dPYzqLwap5vMQrLbN/6gJbr\\n/IegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgYSLDQLN34Wq25xTTUA9hLSS8\\nBeXnJCAJGfOr8UfQSvICIAlFKApAi3Y9cOKV//+IQN1Dp0VSfJSPXh/QOlCYAfLn\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer2s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer2 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer2 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:48 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:48 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:48 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b4630}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b4690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb7d0 DummyKeystore:<nil>}",
        "2020/11/06 12:12:48 [INFO] TLS Enabled",
        "2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:48 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:48 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:48 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 12:12:48 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 12:12:48 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4750}",
        "2020/11/06 12:12:48 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:48 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4750}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c47b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397c50 DummyKeystore:<nil>}",
        "2020/11/06 12:12:48 [INFO] TLS Enabled",
        "2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:48 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:48 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:48 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:48 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:48 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:48 [INFO] encoded CSR",
        "2020/11/06 12:12:48 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNnT/gn1VkSLMrdn40xjmNB4\\ndEU+D/TUnLjWEenLNlyaxvuTbk+IM5JVTV5YmaZNN6bNU851TjJrDZcz8DwO3fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMmyEy7ms8flfElthrMq4iwayeTG\\nGjpNCXf57pa+lF9eAiBm8KnNr1ALeBgPci6qC+i+J68LlRXqXeyWufN0APdUjQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNnT/gn1VkSLMrdn40xjmNB4\\ndEU+D/TUnLjWEenLNlyaxvuTbk+IM5JVTV5YmaZNN6bNU851TjJrDZcz8DwO3fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAMmyEy7ms8flfElthrMq4iwayeTG\\nGjpNCXf57pa+lF9eAiBm8KnNr1ALeBgPci6qC+i+J68LlRXqXeyWufN0APdUjQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 12:12:48 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:48 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a5a0}",
        "2020/11/06 12:12:48 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:48 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:48 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a5a0}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:48 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420171550 DummyKeystore:<nil>}",
        "2020/11/06 12:12:48 [INFO] TLS Enabled",
        "2020/11/06 12:12:48 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:48 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:48 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:48 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:48 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:48 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:48 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:48 [INFO] encoded CSR",
        "2020/11/06 12:12:48 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBHZdWag7ap/aLpAlns6GSrAcwkOBdlPYygTh1epzOR2rjrlWpc0pWb6hltOGVZpn\\n+M2lxWFcayoyMaWqzQkvkwGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAJHD\\nDVFIjkVElG/OWr6gqE3rcT4EFmcRA8TkWQbsk4RtAiBJlaMN9/KDC9jxgbqKwbZI\\nWRCEXDJ8E5A8YiSTbWCFuA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBHZdWag7ap/aLpAlns6GSrAcwkOBdlPYygTh1epzOR2rjrlWpc0pWb6hltOGVZpn\\n+M2lxWFcayoyMaWqzQkvkwGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAJHD\\nDVFIjkVElG/OWr6gqE3rcT4EFmcRA8TkWQbsk4RtAiBJlaMN9/KDC9jxgbqKwbZI\\nWRCEXDJ8E5A8YiSTbWCFuA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/4d0ab79a84a4f66c669e0224eedf722d6a3953982ab08b081512732d738de24e_sk /root/ca-tools/walmart/client1/tls/keystore/720f8f6aa2f6627cb9b24ab7686dfebdbe998b4081191aea6c0d607548a4872e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876 `" && echo ansible-tmp-1604664769.0383854-13610-271285824551876="` echo /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpprslz7fz TO /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876/ /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664769.0383854-13610-271285824551876/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.682480",
    "end": "2020-11-06 12:12:49.855028",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:49.172548",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190 `" && echo ansible-tmp-1604664769.9309468-13651-38717764809190="` echo /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7ah2p159 TO /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190/ /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664769.9309468-13651-38717764809190/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.124198",
    "end": "2020-11-06 12:12:50.192388",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:50.068190",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039 `" && echo ansible-tmp-1604664770.262136-13703-64519616781039="` echo /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplqd8zlvq TO /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039/ /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664770.262136-13703-64519616781039/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer2-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5VENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9UQXdXaGNOTWpNd09EQXpNRGd5Ck9UQXdXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TWk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRQCkVnSmR2S1BGc0RoNno2MitGKzB4Nk8wa3JlNXJmTE5Kb0ppSVNBamprU0dCQ2N6MWhOR1FuWHZvbU5iMnJacC8KcCtzMDBIWXI3bllHQmhDVHNsTXFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVU40a1J1cDBMNXlVNVNab1dMbVc3NkFpK0d4OHdDZ1lJS29aSXpqMEVBd0lEClNBQXdSUUloQUlQR1FpRWFEWkJJYnhxT0pBdWVNMTNqNkpENktlY1A0dXVSWEczTm1YVU9BaUI5WU5RR1pZOWQKSWp3bWZVdENrR3drNytCalNsSmVBWTlzalBWM2ZuZmJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY5SERaSWExVE5TZkY3bmVRYVdFTzkyOVNnMVBKUXl4YTUvVmJXTzV0ZGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhJQ1hieWp4YkE0ZXMrdHZoZnRNZWp0SkszdWEzeXpTYUNZaUVnSTQ1RWhnUW5NOVlUUgprSjE3NkpqVzlxMmFmNmZyTk5CMksrNTJCZ1lRazdKVEtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:00Z",
                "name": "orderer2-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408765",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer2-walmart-net-ambassador-certs",
                "uid": "3a84af21-a525-4755-8465-cda893746ea9"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531 `" && echo ansible-tmp-1604664770.8885455-13731-269654200167531="` echo /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpx9rll5zl TO /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531/ /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664770.8885455-13731-269654200167531/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
    "delta": "0:00:00.048863",
    "end": "2020-11-06 12:12:51.068941",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:51.020078",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229 `" && echo ansible-tmp-1604664771.236607-13772-88245665134229="` echo /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppsq2rnj0 TO /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229/ /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664771.236607-13772-88245665134229/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
    "delta": "0:00:00.041979",
    "end": "2020-11-06 12:12:51.414261",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:51.372282",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252 `" && echo ansible-tmp-1604664771.4857836-13809-101408166667252="` echo /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0w8_nsu7 TO /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252/ /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664771.4857836-13809-101408166667252/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
    "delta": "0:00:00.057908",
    "end": "2020-11-06 12:12:51.676410",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:51.618502",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312 `" && echo ansible-tmp-1604664771.7741256-13845-64677720918312="` echo /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpa75zzfz5 TO /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312/ /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664771.7741256-13845-64677720918312/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
    "delta": "0:00:00.050399",
    "end": "2020-11-06 12:12:51.961098",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:12:51.910699",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140 `" && echo ansible-tmp-1604664772.0956163-13884-167787858589140="` echo /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgxckyihj TO /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140/ /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664772.0956163-13884-167787858589140/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.368368",
    "end": "2020-11-06 12:12:53.595541",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:52.227173",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361 `" && echo ansible-tmp-1604664773.6607485-13929-115439630972361="` echo /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvmm0_3p1 TO /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361/ /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664773.6607485-13929-115439630972361/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301 `" && echo ansible-tmp-1604664773.8639834-13955-206750242876301="` echo /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmph95uru2w TO /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301/ /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664773.8639834-13955-206750242876301/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer3.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer3.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer3.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer3.sh",
    "size": 2587,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172 `" && echo ansible-tmp-1604664774.0516603-13955-253685312498172="` echo /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnbhlf2rg TO /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172/ /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664774.0516603-13955-253685312498172/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676 `" && echo ansible-tmp-1604664774.257096-14005-251182681958676="` echo /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpeiy2wz7f TO /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676/ /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664774.257096-14005-251182681958676/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.559448",
    "end": "2020-11-06 12:12:57.948378",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:54.388930",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200 `" && echo ansible-tmp-1604664778.018521-14055-235583654760200="` echo /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfazfhcew TO /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200/ /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664778.018521-14055-235583654760200/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.756370",
    "end": "2020-11-06 12:12:59.906338",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:12:58.149968",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer3.walmart-net\n+ CSR_HOSTS=orderer3.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:58 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:58 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:58 [DEBUG] Checking for enrollment\n2020/11/06 12:12:58 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398570}\n2020/11/06 12:12:58 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203985d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:58 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b4aa0 DummyKeystore:<nil>}\n2020/11/06 12:12:58 [INFO] TLS Enabled\n2020/11/06 12:12:58 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:58 [DEBUG] Client Cert File: \n2020/11/06 12:12:58 [DEBUG] Client Key File: \n2020/11/06 12:12:58 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:58 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:58 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:58 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203966c0}\n2020/11/06 12:12:58 [DEBUG] Entered runEnroll\n2020/11/06 12:12:58 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:58 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203966c0}\n2020/11/06 12:12:58 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420396720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:58 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039fc70 DummyKeystore:<nil>}\n2020/11/06 12:12:58 [INFO] TLS Enabled\n2020/11/06 12:12:58 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:58 [DEBUG] Client Cert File: \n2020/11/06 12:12:58 [DEBUG] Client Key File: \n2020/11/06 12:12:58 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:58 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:58 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:58 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:58 [INFO] encoded CSR\n2020/11/06 12:12:58 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQTSg84pYP6Qfq2AgSb\\nAvSJShO+iSyp4shV1Jt3Uv3K6KwsE1w5UwS1MEn3NhE5ATdBYHSboP3ZRnhJWkbI\\nXqX+oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDhYd4MVIVG832P97KNKPlAw9rQOLhTDWDR9yiz\\nH7TLvgIgJBHm3lGcSpY5vTAqKnJr3agUHJHQl7lQMb9vnn0R6To=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQTSg84pYP6Qfq2AgSb\\nAvSJShO+iSyp4shV1Jt3Uv3K6KwsE1w5UwS1MEn3NhE5ATdBYHSboP3ZRnhJWkbI\\nXqX+oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDhYd4MVIVG832P97KNKPlAw9rQOLhTDWDR9yiz\\nH7TLvgIgJBHm3lGcSpY5vTAqKnJr3agUHJHQl7lQMb9vnn0R6To=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/1c1b0230386d9455e9712b8b9ee268271794cf6cbe7465377d76aeee08b036a3_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 12:12:59 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:59 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378720}\n2020/11/06 12:12:59 [DEBUG] Entered runEnroll\n2020/11/06 12:12:59 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378720}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420182500 DummyKeystore:<nil>}\n2020/11/06 12:12:59 [INFO] TLS Enabled\n2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:59 [DEBUG] Client Cert File: \n2020/11/06 12:12:59 [DEBUG] Client Key File: \n2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:59 [INFO] encoded CSR\n2020/11/06 12:12:59 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMiJKgC/KiSDPGMXAiZR\\nCrXAmvUkSHTBF7cZR7N891Tk6y0VpiEsqM8jry6u1yospD0rWd9R1vG7OO+78lLl\\n1mqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgfvYwHyCoS6ec7Lq3K9H0ER1F\\nDAo27ab7BCM+RaesTc8CICC9iq7eL9U5DwtCTqHfkb4Qhm3Anqw5ly5r+FmxrakX\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMiJKgC/KiSDPGMXAiZR\\nCrXAmvUkSHTBF7cZR7N891Tk6y0VpiEsqM8jry6u1yospD0rWd9R1vG7OO+78lLl\\n1mqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgfvYwHyCoS6ec7Lq3K9H0ER1F\\nDAo27ab7BCM+RaesTc8CICC9iq7eL9U5DwtCTqHfkb4Qhm3Anqw5ly5r+FmxrakX\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer3s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer3 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer3 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 12:12:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 12:12:59 [DEBUG] Checking for enrollment\n2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc630}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395740 DummyKeystore:<nil>}\n2020/11/06 12:12:59 [INFO] TLS Enabled\n2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:59 [DEBUG] Client Cert File: \n2020/11/06 12:12:59 [DEBUG] Client Key File: \n2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:59 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 12:12:59 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 12:12:59 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42031c600}\n2020/11/06 12:12:59 [DEBUG] Entered runEnroll\n2020/11/06 12:12:59 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42031c600}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42031c660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420289780 DummyKeystore:<nil>}\n2020/11/06 12:12:59 [INFO] TLS Enabled\n2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:59 [DEBUG] Client Cert File: \n2020/11/06 12:12:59 [DEBUG] Client Key File: \n2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:59 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:59 [INFO] encoded CSR\n2020/11/06 12:12:59 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAAyXZclpkFwKDsQOJw3Sz9f\\n3owJgqDobEXViXJY0Lew+y8nXwsH01jlSfyLbY6yYefJHihCGUfUnODe+jT9bqug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANaEwsQqW2XxyHVthNqOQ9DWzkAP\\nGXvpNPYnIdE6u9IQAiBUHaSD6GIC2+8Qn65k+g7vC5zxqoU456xlRRDAsLbvoQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAAyXZclpkFwKDsQOJw3Sz9f\\n3owJgqDobEXViXJY0Lew+y8nXwsH01jlSfyLbY6yYefJHihCGUfUnODe+jT9bqug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANaEwsQqW2XxyHVthNqOQ9DWzkAP\\nGXvpNPYnIdE6u9IQAiBUHaSD6GIC2+8Qn65k+g7vC5zxqoU456xlRRDAsLbvoQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 12:12:59 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:12:59 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a690}\n2020/11/06 12:12:59 [DEBUG] Entered runEnroll\n2020/11/06 12:12:59 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }\n2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a690}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420455df0 DummyKeystore:<nil>}\n2020/11/06 12:12:59 [INFO] TLS Enabled\n2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 12:12:59 [DEBUG] Client Cert File: \n2020/11/06 12:12:59 [DEBUG] Client Key File: \n2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:12:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:12:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:12:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:12:59 [INFO] encoded CSR\n2020/11/06 12:12:59 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBKcHnV5YRDttog+YP0P+W0ybXha1cRGPE1pESLl5GLbxO1yV/v+55bXy7InSinS/\\noaoqk/T7dufYR87i/Nz7jsegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAL9G\\nRrzYC4vdHdjVVAo4+GHEkGGM6x3LUrlmNJMisdNeAiBvZq5ELK94+/dTBtGlClsA\\nxES+qu0iCNPhg5PhqZjKLA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBKcHnV5YRDttog+YP0P+W0ybXha1cRGPE1pESLl5GLbxO1yV/v+55bXy7InSinS/\\noaoqk/T7dufYR87i/Nz7jsegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAL9G\\nRrzYC4vdHdjVVAo4+GHEkGGM6x3LUrlmNJMisdNeAiBvZq5ELK94+/dTBtGlClsA\\nxES+qu0iCNPhg5PhqZjKLA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/4d0ab79a84a4f66c669e0224eedf722d6a3953982ab08b081512732d738de24e_sk /root/ca-tools/walmart/client1/tls/keystore/720f8f6aa2f6627cb9b24ab7686dfebdbe998b4081191aea6c0d607548a4872e_sk /root/ca-tools/walmart/client1/tls/keystore/f97d5e67262aa59fa4007a9ca3971c3456bd0c6aa9b1d24b7ab6b3ee93bc91cc_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer3.walmart-net",
        "+ CSR_HOSTS=orderer3.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:58 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:58 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:58 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:58 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398570}",
        "2020/11/06 12:12:58 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203985d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:58 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b4aa0 DummyKeystore:<nil>}",
        "2020/11/06 12:12:58 [INFO] TLS Enabled",
        "2020/11/06 12:12:58 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:58 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:58 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:58 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:58 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:58 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:58 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203966c0}",
        "2020/11/06 12:12:58 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:58 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:58 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203966c0}",
        "2020/11/06 12:12:58 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420396720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:58 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039fc70 DummyKeystore:<nil>}",
        "2020/11/06 12:12:58 [INFO] TLS Enabled",
        "2020/11/06 12:12:58 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:58 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:58 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:58 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:58 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:58 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:58 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:58 [INFO] encoded CSR",
        "2020/11/06 12:12:58 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQTSg84pYP6Qfq2AgSb\\nAvSJShO+iSyp4shV1Jt3Uv3K6KwsE1w5UwS1MEn3NhE5ATdBYHSboP3ZRnhJWkbI\\nXqX+oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDhYd4MVIVG832P97KNKPlAw9rQOLhTDWDR9yiz\\nH7TLvgIgJBHm3lGcSpY5vTAqKnJr3agUHJHQl7lQMb9vnn0R6To=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQTSg84pYP6Qfq2AgSb\\nAvSJShO+iSyp4shV1Jt3Uv3K6KwsE1w5UwS1MEn3NhE5ATdBYHSboP3ZRnhJWkbI\\nXqX+oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDhYd4MVIVG832P97KNKPlAw9rQOLhTDWDR9yiz\\nH7TLvgIgJBHm3lGcSpY5vTAqKnJr3agUHJHQl7lQMb9vnn0R6To=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/1c1b0230386d9455e9712b8b9ee268271794cf6cbe7465377d76aeee08b036a3_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:12:59 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:59 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378720}",
        "2020/11/06 12:12:59 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:59 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378720}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420182500 DummyKeystore:<nil>}",
        "2020/11/06 12:12:59 [INFO] TLS Enabled",
        "2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:59 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:59 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:59 [INFO] encoded CSR",
        "2020/11/06 12:12:59 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMiJKgC/KiSDPGMXAiZR\\nCrXAmvUkSHTBF7cZR7N891Tk6y0VpiEsqM8jry6u1yospD0rWd9R1vG7OO+78lLl\\n1mqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgfvYwHyCoS6ec7Lq3K9H0ER1F\\nDAo27ab7BCM+RaesTc8CICC9iq7eL9U5DwtCTqHfkb4Qhm3Anqw5ly5r+FmxrakX\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMiJKgC/KiSDPGMXAiZR\\nCrXAmvUkSHTBF7cZR7N891Tk6y0VpiEsqM8jry6u1yospD0rWd9R1vG7OO+78lLl\\n1mqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDRwAwRAIgfvYwHyCoS6ec7Lq3K9H0ER1F\\nDAo27ab7BCM+RaesTc8CICC9iq7eL9U5DwtCTqHfkb4Qhm3Anqw5ly5r+FmxrakX\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer3s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer3 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer3 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 12:12:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 12:12:59 [DEBUG] Checking for enrollment",
        "2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc630}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395740 DummyKeystore:<nil>}",
        "2020/11/06 12:12:59 [INFO] TLS Enabled",
        "2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:59 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:59 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:59 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 12:12:59 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 12:12:59 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42031c600}",
        "2020/11/06 12:12:59 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:59 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42031c600}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42031c660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420289780 DummyKeystore:<nil>}",
        "2020/11/06 12:12:59 [INFO] TLS Enabled",
        "2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:59 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:59 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:59 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:59 [INFO] encoded CSR",
        "2020/11/06 12:12:59 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAAyXZclpkFwKDsQOJw3Sz9f\\n3owJgqDobEXViXJY0Lew+y8nXwsH01jlSfyLbY6yYefJHihCGUfUnODe+jT9bqug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANaEwsQqW2XxyHVthNqOQ9DWzkAP\\nGXvpNPYnIdE6u9IQAiBUHaSD6GIC2+8Qn65k+g7vC5zxqoU456xlRRDAsLbvoQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAAyXZclpkFwKDsQOJw3Sz9f\\n3owJgqDobEXViXJY0Lew+y8nXwsH01jlSfyLbY6yYefJHihCGUfUnODe+jT9bqug\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhANaEwsQqW2XxyHVthNqOQ9DWzkAP\\nGXvpNPYnIdE6u9IQAiBUHaSD6GIC2+8Qn65k+g7vC5zxqoU456xlRRDAsLbvoQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 12:12:59 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:12:59 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a690}",
        "2020/11/06 12:12:59 [DEBUG] Entered runEnroll",
        "2020/11/06 12:12:59 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:12:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-gkdtt] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a690}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:12:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420455df0 DummyKeystore:<nil>}",
        "2020/11/06 12:12:59 [INFO] TLS Enabled",
        "2020/11/06 12:12:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 12:12:59 [DEBUG] Client Cert File: ",
        "2020/11/06 12:12:59 [DEBUG] Client Key File: ",
        "2020/11/06 12:12:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:12:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-gkdtt] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:12:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:12:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:12:59 [INFO] encoded CSR",
        "2020/11/06 12:12:59 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBKcHnV5YRDttog+YP0P+W0ybXha1cRGPE1pESLl5GLbxO1yV/v+55bXy7InSinS/\\noaoqk/T7dufYR87i/Nz7jsegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAL9G\\nRrzYC4vdHdjVVAo4+GHEkGGM6x3LUrlmNJMisdNeAiBvZq5ELK94+/dTBtGlClsA\\nxES+qu0iCNPhg5PhqZjKLA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-gkdtt\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBKcHnV5YRDttog+YP0P+W0ybXha1cRGPE1pESLl5GLbxO1yV/v+55bXy7InSinS/\\noaoqk/T7dufYR87i/Nz7jsegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZ2tkdHQwCgYIKoZIzj0EAwIDSAAwRQIhAL9G\\nRrzYC4vdHdjVVAo4+GHEkGGM6x3LUrlmNJMisdNeAiBvZq5ELK94+/dTBtGlClsA\\nxES+qu0iCNPhg5PhqZjKLA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/4d0ab79a84a4f66c669e0224eedf722d6a3953982ab08b081512732d738de24e_sk /root/ca-tools/walmart/client1/tls/keystore/720f8f6aa2f6627cb9b24ab7686dfebdbe998b4081191aea6c0d607548a4872e_sk /root/ca-tools/walmart/client1/tls/keystore/f97d5e67262aa59fa4007a9ca3971c3456bd0c6aa9b1d24b7ab6b3ee93bc91cc_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853 `" && echo ansible-tmp-1604664779.9842541-14100-103844779010853="` echo /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_5qsbzr4 TO /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853/ /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664779.9842541-14100-103844779010853/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.735352",
    "end": "2020-11-06 12:13:00.852597",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:00.117245",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383 `" && echo ansible-tmp-1604664780.9279375-14140-20302821137383="` echo /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_0y6c5x4 TO /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383/ /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664780.9279375-14140-20302821137383/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.118496",
    "end": "2020-11-06 12:13:01.177819",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:01.059323",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169 `" && echo ansible-tmp-1604664781.2444904-14193-131037117829169="` echo /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkx3xsdk7 TO /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169/ /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664781.2444904-14193-131037117829169/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer3-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9URXhXaGNOTWpNd09EQXpNRGd5Ck9URXhXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TXk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFCCnlFK21McFhYUE9CZ2NFK3lKelRJZ3M2SGdGOHdwVWhIZDZveExYSjBIaC85NC9VWCtzTVY5TlpqclAvVktQL0MKVWdodytHMzRSL0hUbmFqalVnZ21vMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXFINFJwbFZ3aENqNHE3cXROSmVPN1Z5SWRtb3dDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQU51TVYveDBvZ3lKekd3bXFhMDZIZWswY0NZckxvaytCUkRtaDZ3OGFDZEFBaUVBcGJ3Qi90QjcKQ2pBcDZ6emZPRmU3c25CUFE5WUl1ZmZiTnhzRTJrQ3Rzenc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzSks3ZzJKRVhxaGZLR3YyL2hheWlJRi9ndDNSazVBL0IySzNNdGNHOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQWNoUHBpNlYxenpnWUhCUHNpYzB5SUxPaDRCZk1LVklSM2VxTVMxeWRCNGYvZVAxRi9yRApGZlRXWTZ6LzFTai93bElJY1BodCtFZngwNTJvNDFJSUpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:11Z",
                "name": "orderer3-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408791",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer3-walmart-net-ambassador-certs",
                "uid": "9c28f8f6-56fe-49c2-9cf9-f892bc7312b3"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734 `" && echo ansible-tmp-1604664781.8748775-14221-119085194899734="` echo /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpp5_s0i6_ TO /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734/ /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664781.8748775-14221-119085194899734/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
    "delta": "0:00:00.046988",
    "end": "2020-11-06 12:13:02.053539",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:13:02.006551",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784 `" && echo ansible-tmp-1604664782.2142143-14261-202483456213784="` echo /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgsklt3up TO /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784/ /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664782.2142143-14261-202483456213784/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
    "delta": "0:00:00.057534",
    "end": "2020-11-06 12:13:02.405314",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:02.347780",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ]
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:31
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460 `" && echo ansible-tmp-1604664782.4704373-14298-203013234551460="` echo /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_j6jpp59 TO /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460/ /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664782.4704373-14298-203013234551460/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.052531",
    "end": "2020-11-06 12:13:02.656408",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:13:02.603877",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Copy organization level certificates for orgs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007 `" && echo ansible-tmp-1604664782.728019-14332-170298540363007="` echo /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo3aezqsr TO /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007/ /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664782.728019-14332-170298540363007/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.094660",
    "end": "2020-11-06 12:13:02.955170",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:02.860510",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ]
}

TASK [include_role : create/crypto/peer] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:114
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for CA-tool in carrier-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051 `" && echo ansible-tmp-1604664783.4129112-14392-170803973544051="` echo /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwgxvqaaf TO /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051/ /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664783.4129112-14392-170803973544051/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T12:07:16Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-r4hkj",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "d3ff5c5f-a875-4ceb-9b6d-443af0591738"
                    }
                ],
                "resourceVersion": "2444043",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-tools-69d7885f86-r4hkj",
                "uid": "1e51b7ca-aa15-4791-aa67-f59a33ca5f1d"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-lm2tj",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-lm2tj",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-lm2tj"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:07:31Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:08:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:08:40Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T12:07:31Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5a38c13f9890bc3c2308fc75f4e4cee6889cb0c2ef4d19064ef94124c572f833",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T12:08:39Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.69",
                "podIPs": [
                    {
                        "ip": "10.1.0.69"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T12:07:31Z"
            }
        }
    ]
}

TASK [create/crypto/peer : Ensure ca directory exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:21
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150 `" && echo ansible-tmp-1604664784.041456-14420-258481736787150="` echo /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplixahjle TO /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150/ /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664784.041456-14420-258481736787150/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Check if ca certs already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668 `" && echo ansible-tmp-1604664784.2495368-14446-85241155498668="` echo /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkx2m_7vn TO /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668/ /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664784.2495368-14446-85241155498668/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.052261",
    "end": "2020-11-06 12:13:04.432653",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:04.380392",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if ca key already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780 `" && echo ansible-tmp-1604664784.4986727-14483-281189059373780="` echo /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgwqj33jv TO /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780/ /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664784.4986727-14483-281189059373780/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.052597",
    "end": "2020-11-06 12:13:04.682636",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:04.630039",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peercheck.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:47
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515 `" && echo ansible-tmp-1604664784.8240275-14521-244521068776515="` echo /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7yglkq_n TO /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515/ /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664784.8240275-14521-244521068776515/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
    "delta": "0:00:00.048842",
    "end": "2020-11-06 12:13:05.004450",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:13:04.955608",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127 `" && echo ansible-tmp-1604664785.1038218-14558-176202649412127="` echo /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwau0x2zm TO /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127/ /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664785.1038218-14558-176202649412127/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
    "delta": "0:00:00.052314",
    "end": "2020-11-06 12:13:05.286925",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:13:05.234611",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Call common.yaml for each peer] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:53
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml for localhost

TASK [create/crypto/peer : Create directory path on CA Tools] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774 `" && echo ansible-tmp-1604664785.4444165-14596-191988986694774="` echo /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpm4efc7s9 TO /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774/ /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664785.4444165-14596-191988986694774/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
    "delta": "0:00:01.314755",
    "end": "2020-11-06 12:13:06.890205",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:05.575450",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302 `" && echo ansible-tmp-1604664786.9640703-14642-279185366675302="` echo /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9ra2eei2 TO /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302/ /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664786.9640703-14642-279185366675302/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Changing the permission of msp files] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565 `" && echo ansible-tmp-1604664787.172602-14668-49669160121565="` echo /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvk7vni1i TO /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565/ /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664787.172602-14668-49669160121565/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-carrier.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-carrier.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-carrier.sh"
        }
    },
    "files": "generate-crypto-carrier.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-carrier.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-carrier.sh",
    "size": 5178,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181 `" && echo ansible-tmp-1604664787.351714-14668-46646272501181="` echo /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpx8j9d8lw TO /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181/ /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664787.351714-14668-46646272501181/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:43
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488 `" && echo ansible-tmp-1604664787.5588999-14718-100131909932488="` echo /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1_yxa4eo TO /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488/ /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664787.5588999-14718-100131909932488/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:03.820655",
    "end": "2020-11-06 12:13:11.510030",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:07.689375",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Generate crypto material for organization peers] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884 `" && echo ansible-tmp-1604664791.58085-14768-46669407835884="` echo /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp39vzc2j8 TO /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884/ /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664791.58085-14768-46669407835884/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.984155",
    "end": "2020-11-06 12:13:13.696261",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:11.712106",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=carrier\n+ AFFILIATION=carrier\n+ SUBJECT=C=GB,ST=London,L=London,O=carrier\n+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ CA_ADMIN_USER=carrier-admin\n+ CA_ADMIN_PASS=carrier-adminpw\n+ ORG_ADMIN_USER=Admin@carrier-net\n+ ORG_ADMIN_PASS=Admin@carrier-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ NO_OF_PEERS=2\n+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ae510}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ae510}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201ae570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201b1f30 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExuNZ\\nIY1dSyyCplWNtq4Fw9/CsyY9JTHTMZ0LbQeOHU6gVBqHcBLb6gHYZVgbLo7USvzM\\n5dRVXAowauzuJuXliKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1yNGhrajAKBggqhkjOPQQDAgNHADBEAiBq3wAqYK5a\\n71tm5ki+iXDTMW7GGlvaJRqvuTFZ8biQYgIgUtTYZbcMH869zRKaJVzwtHRUxNwV\\nRE0gJNe1OCGveWo=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExuNZ\\nIY1dSyyCplWNtq4Fw9/CsyY9JTHTMZ0LbQeOHU6gVBqHcBLb6gHYZVgbLo7USvzM\\n5dRVXAowauzuJuXliKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1yNGhrajAKBggqhkjOPQQDAgNHADBEAiBq3wAqYK5a\\n71tm5ki+iXDTMW7GGlvaJRqvuTFZ8biQYgIgUtTYZbcMH869zRKaJVzwtHRUxNwV\\nRE0gJNe1OCGveWo=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:12 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 12:13:12 [DEBUG] Entered runGetCACert\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bb90 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420253fd0 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/cainfo\n{}\nError: POST failure of request: POST https://ca.carrier-net:7054/cainfo\n{}: Post https://ca.carrier-net:7054/cainfo: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*': No such file or directory\n+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Checking for enrollment\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204bac20 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/carrier/admin\n2020/11/06 12:13:12 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204706f0}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204706f0}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420470750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420477ee0 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATAU0ylWlo0B+YupFCm84oNis9+DulHYvGZgEyBuW4pZRTtLvCcoB9qxgvRuJN1\\nlBO6za3kICZ4qDNn5B8moB7SoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCz\\nO+mGxaxw6DVJoeDIgiV5hP8Jw09yjPaZGT4UiVEArwIgSYIAWTfBGk0OsPXoqQlC\\nunahZKFCf2Bg0c6u6PrmKH4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATAU0ylWlo0B+YupFCm84oNis9+DulHYvGZgEyBuW4pZRTtLvCcoB9qxgvRuJN1\\nlBO6za3kICZ4qDNn5B8moB7SoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCz\\nO+mGxaxw6DVJoeDIgiV5hP8Jw09yjPaZGT4UiVEArwIgSYIAWTfBGk0OsPXoqQlC\\nunahZKFCf2Bg0c6u6PrmKH4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts\n+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory\n+ mkdir /root/ca-tools/carrier/admin/msp/admincerts\n+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:12 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420469ae0 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASHLNyys7DnCu69tVsk8oq9zb7e36v+lvURVrCwMJCLgVgRmoupqOM1BLtZCfgy\\nNT7bZ4t7PyCj4lpYZMbHdEFloDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIEp0\\nSa+hDFBmpzJegZ1XXFt5ET3iLaDiUPqOJBj+Da8zAiBYY1KJ+zAfsQr3SqC8973g\\nWWbrzua8uoLye0N/JO5yzg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASHLNyys7DnCu69tVsk8oq9zb7e36v+lvURVrCwMJCLgVgRmoupqOM1BLtZCfgy\\nNT7bZ4t7PyCj4lpYZMbHdEFloDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIEp0\\nSa+hDFBmpzJegZ1XXFt5ET3iLaDiUPqOJBj+Da8zAiBYY1KJ+zAfsQr3SqC8973g\\nWWbrzua8uoLye0N/JO5yzg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls\n+ cp /root/ca-tools/carrier/admin/tls/keystore/934055294399e3a8585d3c3354664da215d074344159ae630d177da29bf8f78b_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key\n+ cp '/root/ca-tools/carrier/admin/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/carrier/admin/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/admin/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/admin/tls/tlscacerts/*': No such file or directory\n+ COUNTER=0\n+ '[' 0 -lt 2 ']'\n+ PEER=peer0.carrier-net\n+ CSR_HOSTS=peer0.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Checking for enrollment\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba5d0}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395140 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188660}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188660}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201886c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202cdc70 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASXl+2w08oew1LTagrP6J8K7Uog6zxrbP2j+k2MYgt3eOwF4xsr8eE74w106JZT\\nYhZS+f26/mEvxbcj+z7lEK81oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAvzgGCxBzlCf12YkCis1TYCa2+CFJV2EqIx3fXIymvJcCIDmUmJfaA92k\\nf2q1MFiy0OB8qkBNq65vUQF0wzzEUVLm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASXl+2w08oew1LTagrP6J8K7Uog6zxrbP2j+k2MYgt3eOwF4xsr8eE74w106JZT\\nYhZS+f26/mEvxbcj+z7lEK81oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAvzgGCxBzlCf12YkCis1TYCa2+CFJV2EqIx3fXIymvJcCIDmUmJfaA92k\\nf2q1MFiy0OB8qkBNq65vUQF0wzzEUVLm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/d959f26bf00c74f7c3673929f79414db5ed80f34f10682ce15a319e0f3c97817_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key\n+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204e1e70 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQcHJla8/dMrZr2nwpY4mN/8K4wC8qvK0w0k7Es7OLSmb/9/wFYDEfpajt8ExaX\\nMnRRls6Gzr1BQy/PWKX1AD5goDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCn\\nXw/lb6F+tPYERkmnZmlCJJGsRNrGSA8kUYrYQKSTLAIgDRpdsL/PrSQ67PvlcUKm\\nD6EwfWGHLJLxxKRMv2FdyzA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQcHJla8/dMrZr2nwpY4mN/8K4wC8qvK0w0k7Es7OLSmb/9/wFYDEfpajt8ExaX\\nMnRRls6Gzr1BQy/PWKX1AD5goDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCn\\nXw/lb6F+tPYERkmnZmlCJJGsRNrGSA8kUYrYQKSTLAIgDRpdsL/PrSQ67PvlcUKm\\nD6EwfWGHLJLxxKRMv2FdyzA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory\n+ let COUNTER=COUNTER+1\n+ '[' 1 -lt 2 ']'\n+ PEER=peer1.carrier-net\n+ CSR_HOSTS=peer1.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 12:13:12 [DEBUG] Checking for enrollment\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394630}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399590 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a690}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a690}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a17c0 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASuTwDO39zE+ibzWMYYr+lFUMDmeokbBGdr8s6s8o3YT95P13uu5Gcp3ulZ11yM\\n4dUmXGuvlpDs54qSLF1JC/fQoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAqsyFUKwQMwlraAoVGVJ7V4CfxVSuPI8TUgDC+Lbf+LoCICPzLJYFuJ0G\\nfberNKODlMlyx0yYB+b6E1lJ8e+4UU2S\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASuTwDO39zE+ibzWMYYr+lFUMDmeokbBGdr8s6s8o3YT95P13uu5Gcp3ulZ11yM\\n4dUmXGuvlpDs54qSLF1JC/fQoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAqsyFUKwQMwlraAoVGVJ7V4CfxVSuPI8TUgDC+Lbf+LoCICPzLJYFuJ0G\\nfberNKODlMlyx0yYB+b6E1lJ8e+4UU2S\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/af1d86676acd3ecdbf390783e61fd2d2d91b2dbd6ccf7588c18f3b30bab411a5_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key\n+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203806c0}\n2020/11/06 12:13:12 [DEBUG] Entered runEnroll\n2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203806c0}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420455a00 DummyKeystore:<nil>}\n2020/11/06 12:13:12 [INFO] TLS Enabled\n2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:12 [DEBUG] Client Cert File: \n2020/11/06 12:13:12 [DEBUG] Client Key File: \n2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:12 [INFO] encoded CSR\n2020/11/06 12:13:12 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARdqXGe9wddmLct7BzQzxr0M+lWomhxaYCKqlYzAPdFPB1Px2xdsL8Q0PXgggxv\\njRQva6MXqBxtTkuwaf1n2xsJoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIGUn\\niOS9Z3+UI3Iydyyj0Hr96+BzH/z2ug8QTvgn3Y4TAiAKhjyPi35wbLTEqYkG+g75\\nTW4zJLVO0JGZjMKqzVSi1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARdqXGe9wddmLct7BzQzxr0M+lWomhxaYCKqlYzAPdFPB1Px2xdsL8Q0PXgggxv\\njRQva6MXqBxtTkuwaf1n2xsJoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIGUn\\niOS9Z3+UI3Iydyyj0Hr96+BzH/z2ug8QTvgn3Y4TAiAKhjyPi35wbLTEqYkG+g75\\nTW4zJLVO0JGZjMKqzVSi1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory\n+ let COUNTER=COUNTER+1\n+ '[' 2 -lt 2 ']'\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ NO_OF_USERS=1\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@carrier-net\n+ ORG_USERPASS=User1@carrier-net-pw\n+ '[' peer = peer ']'\n+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:13 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 12:13:13 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 12:13:13 [DEBUG] Checking for enrollment\n2020/11/06 12:13:13 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a25a0}\n2020/11/06 12:13:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a2600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a7310 DummyKeystore:<nil>}\n2020/11/06 12:13:13 [INFO] TLS Enabled\n2020/11/06 12:13:13 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:13 [DEBUG] Client Cert File: \n2020/11/06 12:13:13 [DEBUG] Client Key File: \n2020/11/06 12:13:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:13 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1\n2020/11/06 12:13:13 [DEBUG] Home directory: /root/ca-tools/carrier/client1\n2020/11/06 12:13:13 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml\n2020/11/06 12:13:13 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}\n2020/11/06 12:13:13 [DEBUG] Entered runEnroll\n2020/11/06 12:13:13 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:13 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}\n2020/11/06 12:13:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197970 DummyKeystore:<nil>}\n2020/11/06 12:13:13 [INFO] TLS Enabled\n2020/11/06 12:13:13 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:13 [DEBUG] Client Cert File: \n2020/11/06 12:13:13 [DEBUG] Client Key File: \n2020/11/06 12:13:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:13 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:13 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:13 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:13 [INFO] encoded CSR\n2020/11/06 12:13:13 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATqjivZpVmwLMaJxb8RrGh0scVRu8+9oPF1dy9fka2MtkPMIeQeZDneoyPCtoQB\\nFwpE5AJlzSNGzo92Q7V+1njzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCf\\nUTzMjpHmkPZFXcDpvScb6ZHaqssNTigKkmNmfX4wbwIgKF50jZL5YeRhQl1A4ihi\\neXrahTkyBRRTVD84PSi3ht4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATqjivZpVmwLMaJxb8RrGh0scVRu8+9oPF1dy9fka2MtkPMIeQeZDneoyPCtoQB\\nFwpE5AJlzSNGzo92Q7V+1njzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCf\\nUTzMjpHmkPZFXcDpvScb6ZHaqssNTigKkmNmfX4wbwIgKF50jZL5YeRhQl1A4ihi\\neXrahTkyBRRTVD84PSi3ht4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /root/ca-tools/carrier/client1/msp/admincerts\n+ cp '/root/ca-tools/carrier/client1/msp/signcerts/*' /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2020/11/06 12:13:13 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 12:13:13 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4600}\n2020/11/06 12:13:13 [DEBUG] Entered runEnroll\n2020/11/06 12:13:13 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }\n2020/11/06 12:13:13 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4600}\n2020/11/06 12:13:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 12:13:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395690 DummyKeystore:<nil>}\n2020/11/06 12:13:13 [INFO] TLS Enabled\n2020/11/06 12:13:13 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 12:13:13 [DEBUG] Client Cert File: \n2020/11/06 12:13:13 [DEBUG] Client Key File: \n2020/11/06 12:13:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 12:13:13 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 12:13:13 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 12:13:13 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 12:13:13 [INFO] encoded CSR\n2020/11/06 12:13:13 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEdI7nwu98pdzg9hsZRfkrpi7bRNRj7HWfYzavEhXZKgJ0CYtico4bRh7IIcB/Hb\\nc95nEhjH+qkLqOY2Tyh1ROKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtcjRoa2owCgYIKoZIzj0EAwIDSAAwRQIhAIwg\\ntgA0so6ukTkiYAaCugCqucZbcigfZsLaRgb3xUlZAiBxskeN29n+HAbPN6ma2hcz\\nADjeYSS4oASTJ702HSOZJg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEdI7nwu98pdzg9hsZRfkrpi7bRNRj7HWfYzavEhXZKgJ0CYtico4bRh7IIcB/Hb\\nc95nEhjH+qkLqOY2Tyh1ROKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtcjRoa2owCgYIKoZIzj0EAwIDSAAwRQIhAIwg\\ntgA0so6ukTkiYAaCugCqucZbcigfZsLaRgb3xUlZAiBxskeN29n+HAbPN6ma2hcz\\nADjeYSS4oASTJ702HSOZJg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls\n+ cp /root/ca-tools/carrier/client1/tls/keystore/8844efa2550f2ead2397294b6cc12a086e7a19bb77b57df087bb7fd9d56473cc_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key\n+ cp '/root/ca-tools/carrier/client1/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/carrier/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/client1/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=carrier",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=C=GB,ST=London,L=London,O=carrier",
        "+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ CA_ADMIN_USER=carrier-admin",
        "+ CA_ADMIN_PASS=carrier-adminpw",
        "+ ORG_ADMIN_USER=Admin@carrier-net",
        "+ ORG_ADMIN_PASS=Admin@carrier-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ NO_OF_PEERS=2",
        "+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ae510}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ae510}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201ae570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201b1f30 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExuNZ\\nIY1dSyyCplWNtq4Fw9/CsyY9JTHTMZ0LbQeOHU6gVBqHcBLb6gHYZVgbLo7USvzM\\n5dRVXAowauzuJuXliKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1yNGhrajAKBggqhkjOPQQDAgNHADBEAiBq3wAqYK5a\\n71tm5ki+iXDTMW7GGlvaJRqvuTFZ8biQYgIgUtTYZbcMH869zRKaJVzwtHRUxNwV\\nRE0gJNe1OCGveWo=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExuNZ\\nIY1dSyyCplWNtq4Fw9/CsyY9JTHTMZ0LbQeOHU6gVBqHcBLb6gHYZVgbLo7USvzM\\n5dRVXAowauzuJuXliKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1yNGhrajAKBggqhkjOPQQDAgNHADBEAiBq3wAqYK5a\\n71tm5ki+iXDTMW7GGlvaJRqvuTFZ8biQYgIgUtTYZbcMH869zRKaJVzwtHRUxNwV\\nRE0gJNe1OCGveWo=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:12 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Entered runGetCACert",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bb90 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420253fd0 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/cainfo",
        "{}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/cainfo",
        "{}: Post https://ca.carrier-net:7054/cainfo: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*': No such file or directory",
        "+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Checking for enrollment",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204bac20 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/carrier/admin",
        "2020/11/06 12:13:12 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204706f0}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204706f0}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420470750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420477ee0 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATAU0ylWlo0B+YupFCm84oNis9+DulHYvGZgEyBuW4pZRTtLvCcoB9qxgvRuJN1\\nlBO6za3kICZ4qDNn5B8moB7SoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCz\\nO+mGxaxw6DVJoeDIgiV5hP8Jw09yjPaZGT4UiVEArwIgSYIAWTfBGk0OsPXoqQlC\\nunahZKFCf2Bg0c6u6PrmKH4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATAU0ylWlo0B+YupFCm84oNis9+DulHYvGZgEyBuW4pZRTtLvCcoB9qxgvRuJN1\\nlBO6za3kICZ4qDNn5B8moB7SoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCz\\nO+mGxaxw6DVJoeDIgiV5hP8Jw09yjPaZGT4UiVEArwIgSYIAWTfBGk0OsPXoqQlC\\nunahZKFCf2Bg0c6u6PrmKH4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir /root/ca-tools/carrier/admin/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:12 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420469ae0 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASHLNyys7DnCu69tVsk8oq9zb7e36v+lvURVrCwMJCLgVgRmoupqOM1BLtZCfgy\\nNT7bZ4t7PyCj4lpYZMbHdEFloDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIEp0\\nSa+hDFBmpzJegZ1XXFt5ET3iLaDiUPqOJBj+Da8zAiBYY1KJ+zAfsQr3SqC8973g\\nWWbrzua8uoLye0N/JO5yzg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASHLNyys7DnCu69tVsk8oq9zb7e36v+lvURVrCwMJCLgVgRmoupqOM1BLtZCfgy\\nNT7bZ4t7PyCj4lpYZMbHdEFloDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIEp0\\nSa+hDFBmpzJegZ1XXFt5ET3iLaDiUPqOJBj+Da8zAiBYY1KJ+zAfsQr3SqC8973g\\nWWbrzua8uoLye0N/JO5yzg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/admin/tls/keystore/934055294399e3a8585d3c3354664da215d074344159ae630d177da29bf8f78b_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key",
        "+ cp '/root/ca-tools/carrier/admin/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/carrier/admin/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/admin/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/admin/tls/tlscacerts/*': No such file or directory",
        "+ COUNTER=0",
        "+ '[' 0 -lt 2 ']'",
        "+ PEER=peer0.carrier-net",
        "+ CSR_HOSTS=peer0.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Checking for enrollment",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba5d0}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395140 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188660}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188660}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201886c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202cdc70 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASXl+2w08oew1LTagrP6J8K7Uog6zxrbP2j+k2MYgt3eOwF4xsr8eE74w106JZT\\nYhZS+f26/mEvxbcj+z7lEK81oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAvzgGCxBzlCf12YkCis1TYCa2+CFJV2EqIx3fXIymvJcCIDmUmJfaA92k\\nf2q1MFiy0OB8qkBNq65vUQF0wzzEUVLm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASXl+2w08oew1LTagrP6J8K7Uog6zxrbP2j+k2MYgt3eOwF4xsr8eE74w106JZT\\nYhZS+f26/mEvxbcj+z7lEK81oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAvzgGCxBzlCf12YkCis1TYCa2+CFJV2EqIx3fXIymvJcCIDmUmJfaA92k\\nf2q1MFiy0OB8qkBNq65vUQF0wzzEUVLm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/d959f26bf00c74f7c3673929f79414db5ed80f34f10682ce15a319e0f3c97817_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204e1e70 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQcHJla8/dMrZr2nwpY4mN/8K4wC8qvK0w0k7Es7OLSmb/9/wFYDEfpajt8ExaX\\nMnRRls6Gzr1BQy/PWKX1AD5goDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCn\\nXw/lb6F+tPYERkmnZmlCJJGsRNrGSA8kUYrYQKSTLAIgDRpdsL/PrSQ67PvlcUKm\\nD6EwfWGHLJLxxKRMv2FdyzA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQcHJla8/dMrZr2nwpY4mN/8K4wC8qvK0w0k7Es7OLSmb/9/wFYDEfpajt8ExaX\\nMnRRls6Gzr1BQy/PWKX1AD5goDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCn\\nXw/lb6F+tPYERkmnZmlCJJGsRNrGSA8kUYrYQKSTLAIgDRpdsL/PrSQ67PvlcUKm\\nD6EwfWGHLJLxxKRMv2FdyzA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 1 -lt 2 ']'",
        "+ PEER=peer1.carrier-net",
        "+ CSR_HOSTS=peer1.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:12 [DEBUG] Checking for enrollment",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394630}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399590 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a690}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a690}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a17c0 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASuTwDO39zE+ibzWMYYr+lFUMDmeokbBGdr8s6s8o3YT95P13uu5Gcp3ulZ11yM\\n4dUmXGuvlpDs54qSLF1JC/fQoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAqsyFUKwQMwlraAoVGVJ7V4CfxVSuPI8TUgDC+Lbf+LoCICPzLJYFuJ0G\\nfberNKODlMlyx0yYB+b6E1lJ8e+4UU2S\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASuTwDO39zE+ibzWMYYr+lFUMDmeokbBGdr8s6s8o3YT95P13uu5Gcp3ulZ11yM\\n4dUmXGuvlpDs54qSLF1JC/fQoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEAqsyFUKwQMwlraAoVGVJ7V4CfxVSuPI8TUgDC+Lbf+LoCICPzLJYFuJ0G\\nfberNKODlMlyx0yYB+b6E1lJ8e+4UU2S\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/af1d86676acd3ecdbf390783e61fd2d2d91b2dbd6ccf7588c18f3b30bab411a5_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 12:13:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:12 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203806c0}",
        "2020/11/06 12:13:12 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:12 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:12 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203806c0}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420455a00 DummyKeystore:<nil>}",
        "2020/11/06 12:13:12 [INFO] TLS Enabled",
        "2020/11/06 12:13:12 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:12 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:12 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:12 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:12 [INFO] encoded CSR",
        "2020/11/06 12:13:12 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARdqXGe9wddmLct7BzQzxr0M+lWomhxaYCKqlYzAPdFPB1Px2xdsL8Q0PXgggxv\\njRQva6MXqBxtTkuwaf1n2xsJoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIGUn\\niOS9Z3+UI3Iydyyj0Hr96+BzH/z2ug8QTvgn3Y4TAiAKhjyPi35wbLTEqYkG+g75\\nTW4zJLVO0JGZjMKqzVSi1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARdqXGe9wddmLct7BzQzxr0M+lWomhxaYCKqlYzAPdFPB1Px2xdsL8Q0PXgggxv\\njRQva6MXqBxtTkuwaf1n2xsJoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0cAMEQCIGUn\\niOS9Z3+UI3Iydyyj0Hr96+BzH/z2ug8QTvgn3Y4TAiAKhjyPi35wbLTEqYkG+g75\\nTW4zJLVO0JGZjMKqzVSi1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 2 -lt 2 ']'",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ORG_NAME=carrier",
        "+ TYPE_FOLDER=peers",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ '[' peer '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@carrier-net",
        "+ ORG_USERPASS=User1@carrier-net-pw",
        "+ '[' peer = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:13 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 12:13:13 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:13 [DEBUG] Checking for enrollment",
        "2020/11/06 12:13:13 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a25a0}",
        "2020/11/06 12:13:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a2600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a7310 DummyKeystore:<nil>}",
        "2020/11/06 12:13:13 [INFO] TLS Enabled",
        "2020/11/06 12:13:13 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:13 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:13 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:13 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1",
        "2020/11/06 12:13:13 [DEBUG] Home directory: /root/ca-tools/carrier/client1",
        "2020/11/06 12:13:13 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml",
        "2020/11/06 12:13:13 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}",
        "2020/11/06 12:13:13 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:13 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:13 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}",
        "2020/11/06 12:13:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197970 DummyKeystore:<nil>}",
        "2020/11/06 12:13:13 [INFO] TLS Enabled",
        "2020/11/06 12:13:13 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:13 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:13 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:13 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:13 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:13 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:13 [INFO] encoded CSR",
        "2020/11/06 12:13:13 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATqjivZpVmwLMaJxb8RrGh0scVRu8+9oPF1dy9fka2MtkPMIeQeZDneoyPCtoQB\\nFwpE5AJlzSNGzo92Q7V+1njzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCf\\nUTzMjpHmkPZFXcDpvScb6ZHaqssNTigKkmNmfX4wbwIgKF50jZL5YeRhQl1A4ihi\\neXrahTkyBRRTVD84PSi3ht4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATqjivZpVmwLMaJxb8RrGh0scVRu8+9oPF1dy9fka2MtkPMIeQeZDneoyPCtoQB\\nFwpE5AJlzSNGzo92Q7V+1njzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXI0aGtqMAoGCCqGSM49BAMCA0gAMEUCIQCf\\nUTzMjpHmkPZFXcDpvScb6ZHaqssNTigKkmNmfX4wbwIgKF50jZL5YeRhQl1A4ihi\\neXrahTkyBRRTVD84PSi3ht4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /root/ca-tools/carrier/client1/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/client1/msp/signcerts/*' /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "2020/11/06 12:13:13 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 12:13:13 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4600}",
        "2020/11/06 12:13:13 [DEBUG] Entered runEnroll",
        "2020/11/06 12:13:13 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  }",
        "2020/11/06 12:13:13 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-r4hkj] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4600}",
        "2020/11/06 12:13:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 12:13:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395690 DummyKeystore:<nil>}",
        "2020/11/06 12:13:13 [INFO] TLS Enabled",
        "2020/11/06 12:13:13 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 12:13:13 [DEBUG] Client Cert File: ",
        "2020/11/06 12:13:13 [DEBUG] Client Key File: ",
        "2020/11/06 12:13:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 12:13:13 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-r4hkj] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 12:13:13 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 12:13:13 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 12:13:13 [INFO] encoded CSR",
        "2020/11/06 12:13:13 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEdI7nwu98pdzg9hsZRfkrpi7bRNRj7HWfYzavEhXZKgJ0CYtico4bRh7IIcB/Hb\\nc95nEhjH+qkLqOY2Tyh1ROKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtcjRoa2owCgYIKoZIzj0EAwIDSAAwRQIhAIwg\\ntgA0so6ukTkiYAaCugCqucZbcigfZsLaRgb3xUlZAiBxskeN29n+HAbPN6ma2hcz\\nADjeYSS4oASTJ702HSOZJg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-r4hkj\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEdI7nwu98pdzg9hsZRfkrpi7bRNRj7HWfYzavEhXZKgJ0CYtico4bRh7IIcB/Hb\\nc95nEhjH+qkLqOY2Tyh1ROKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtcjRoa2owCgYIKoZIzj0EAwIDSAAwRQIhAIwg\\ntgA0so6ukTkiYAaCugCqucZbcigfZsLaRgb3xUlZAiBxskeN29n+HAbPN6ma2hcz\\nADjeYSS4oASTJ702HSOZJg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/client1/tls/keystore/8844efa2550f2ead2397294b6cc12a086e7a19bb77b57df087bb7fd9d56473cc_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key",
        "+ cp '/root/ca-tools/carrier/client1/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/carrier/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/client1/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\nRegistering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/peer : Copy the crypto config folder from the ca tools] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109 `" && echo ansible-tmp-1604664793.7787771-14813-156390104287109="` echo /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpf910n9c5 TO /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109/ /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664793.7787771-14813-156390104287109/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.722495",
    "end": "2020-11-06 12:13:14.634426",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:13.911931",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peer.yaml for each peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:58
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257 `" && echo ansible-tmp-1604664794.8082395-14855-275926188241257="` echo /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6j98s2hb TO /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257/ /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664794.8082395-14855-275926188241257/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.151564",
    "end": "2020-11-06 12:13:15.096503",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:14.944939",
    "stderr": "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182 `" && echo ansible-tmp-1604664795.1635385-14908-126249725501182="` echo /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpojigxos0 TO /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182/ /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664795.1635385-14908-126249725501182/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582 `" && echo ansible-tmp-1604664795.795597-14936-193258943117582="` echo /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpd8b1qm9d TO /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582/ /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664795.795597-14936-193258943117582/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583 `" && echo ansible-tmp-1604664796.4219394-14964-175109055719583="` echo /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpllht6gqv TO /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583/ /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664796.4219394-14964-175109055719583/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.052223",
    "end": "2020-11-06 12:13:16.605087",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:13:16.552864",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509 `" && echo ansible-tmp-1604664796.6977918-15000-117799817855509="` echo /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjhdck065 TO /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509/ /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664796.6977918-15000-117799817855509/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673 `" && echo ansible-tmp-1604664796.8879163-15026-119421793171673="` echo /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwwlv3j8w TO /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673/ /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664796.8879163-15026-119421793171673/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier.suneel.pvt.wmtbaf.info\nEOF\n",
    "delta": "0:00:00.002880",
    "end": "2020-11-06 12:13:17.020562",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier.suneel.pvt.wmtbaf.info\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:17.017682",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052 `" && echo ansible-tmp-1604664797.0817888-15054-51781973572052="` echo /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpqnek4hj9 TO /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052/ /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664797.0817888-15054-51781973572052/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143 `" && echo ansible-tmp-1604664797.2802458-15080-54130492758143="` echo /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9y4rgykp TO /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143/ /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664797.2802458-15080-54130492758143/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
    "delta": "0:00:00.012165",
    "end": "2020-11-06 12:13:17.421906",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:17.409741",
    "stderr": "Ignoring -days; not generating a certificate\nSignature ok\nsubject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\nGetting CA Private Key",
    "stderr_lines": [
        "Ignoring -days; not generating a certificate",
        "Signature ok",
        "subject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "Getting CA Private Key"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229 `" && echo ansible-tmp-1604664797.4891386-15112-41084097152229="` echo /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdxgngjit TO /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229/ /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664797.4891386-15112-41084097152229/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
    "delta": "0:00:00.143202",
    "end": "2020-11-06 12:13:17.763526",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:17.620324",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086 `" && echo ansible-tmp-1604664797.8317466-15144-72232537841086="` echo /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmp_xstbj TO /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086/ /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664797.8317466-15144-72232537841086/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
    "delta": "0:00:00.144109",
    "end": "2020-11-06 12:13:18.107093",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:17.962984",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036 `" && echo ansible-tmp-1604664798.1811256-15176-186398890275036="` echo /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmptwyl0o77 TO /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036/ /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664798.1811256-15176-186398890275036/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
    "delta": "0:00:00.043280",
    "end": "2020-11-06 12:13:18.356583",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:18.313303",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador"
    ]
}

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652 `" && echo ansible-tmp-1604664798.4272323-15215-224539852685652="` echo /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmptt2vnwzm TO /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652/ /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664798.4272323-15215-224539852685652/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.081167",
    "end": "2020-11-06 12:13:18.638554",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:18.557387",
    "stderr": "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192 `" && echo ansible-tmp-1604664798.7053413-15267-136445993727192="` echo /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmoa_of4r TO /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192/ /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664798.7053413-15267-136445993727192/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510 `" && echo ansible-tmp-1604664799.3296528-15295-241494073525510="` echo /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvxpta78t TO /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510/ /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664799.3296528-15295-241494073525510/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918 `" && echo ansible-tmp-1604664799.9601958-15323-162014437860918="` echo /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmps1bcao_m TO /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918/ /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664799.9601958-15323-162014437860918/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.054106",
    "end": "2020-11-06 12:13:20.147181",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:20.093075",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "data:\n  certificate: |-\n    -----BEGIN CERTIFICATE-----\n    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTIxMzE3WhcNMjMwODAzMTIx\n    MzE3WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG\n    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww\n    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEx6HP/rDkPZSVfJ0N2yNL5LmNV5NV\n    poGwuGhgz4TlYuADLg9HAvYyOFMUYda9NxhLFOceEocde9Pj1zG+bps49KNvMG0w\n    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFD0315qu\n    kty2aZGmFEFSzHgQb/0CMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0\n    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD9gqD93k9GZnBfz8I59juR\n    qus+lFUjhb+i/+USL6QJWAIhANDlEK9wU5DviPCFhll1UfUc03I9zyFLlovsb8Kb\n    hrcK\n    -----END CERTIFICATE-----\n    -----BEGIN CERTIFICATE-----\n    MIIB8DCCAZagAwIBAgIUEkhzzB8wLQMF3EfC64vegYHV/k8wCgYIKoZIzj0EAwIw\n    VjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\n    MRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYDVQQDDApjYS5jYXJyaWVyMB4XDTIwMTEw\n    NjEyMDM1MloXDTIzMDgyNzEyMDM1MlowVjELMAkGA1UEBhMCR0IxDzANBgNVBAgM\n    BkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9uMRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYD\n    VQQDDApjYS5jYXJyaWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE3U1Dwcr8\n    PLyi1EOrAZEg3DeDkETRAix1EQR1qPRt1PZa+AmOZdJUHqQ/q66oKeBE7dqLy20i\n    VG7wQmu5wXirXqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYw\n    HQYDVR0OBBYEFO2OygGDMuSL5wZY1V3jP+XkSUERMAoGCCqGSM49BAMCA0gAMEUC\n    IQDhmyYwRJk74vJ9U0TruPUsKDAC3X+Yi4UbSaJV9u7rBwIgSiNERqA4as7TtRpQ\n    /Vpc3E4lc1wltJ5Wy2yJI2/nUeo=\n    -----END CERTIFICATE-----\n  clientcert: |-\n    -----BEGIN CERTIFICATE-----\n    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTIxMzE3WhcNMjMwODAzMTIx\n    MzE3WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG\n    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww\n    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEx6HP/rDkPZSVfJ0N2yNL5LmNV5NV\n    poGwuGhgz4TlYuADLg9HAvYyOFMUYda9NxhLFOceEocde9Pj1zG+bps49KNvMG0w\n    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFD0315qu\n    kty2aZGmFEFSzHgQb/0CMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0\n    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD9gqD93k9GZnBfz8I59juR\n    qus+lFUjhb+i/+USL6QJWAIhANDlEK9wU5DviPCFhll1UfUc03I9zyFLlovsb8Kb\n    hrcK\n    -----END CERTIFICATE-----\n  key: |-\n    -----BEGIN EC PRIVATE KEY-----\n    MHcCAQEEIHWEw1l/fqgpp996iZWhD66w/84e4LteO52rnYIYlz9PoAoGCCqGSM49\n    AwEHoUQDQgAEx6HP/rDkPZSVfJ0N2yNL5LmNV5NVpoGwuGhgz4TlYuADLg9HAvYy\n    OFMUYda9NxhLFOceEocde9Pj1zG+bps49A==\n    -----END EC PRIVATE KEY-----\nlease_duration: 2764800\nlease_id: \"\"\nrenewable: false\nrequest_id: 8d429cce-9509-99ea-5209-db733d736617\nwarnings: null",
    "stdout_lines": [
        "data:",
        "  certificate: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTIxMzE3WhcNMjMwODAzMTIx",
        "    MzE3WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG",
        "    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww",
        "    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEx6HP/rDkPZSVfJ0N2yNL5LmNV5NV",
        "    poGwuGhgz4TlYuADLg9HAvYyOFMUYda9NxhLFOceEocde9Pj1zG+bps49KNvMG0w",
        "    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFD0315qu",
        "    kty2aZGmFEFSzHgQb/0CMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0",
        "    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD9gqD93k9GZnBfz8I59juR",
        "    qus+lFUjhb+i/+USL6QJWAIhANDlEK9wU5DviPCFhll1UfUc03I9zyFLlovsb8Kb",
        "    hrcK",
        "    -----END CERTIFICATE-----",
        "    -----BEGIN CERTIFICATE-----",
        "    MIIB8DCCAZagAwIBAgIUEkhzzB8wLQMF3EfC64vegYHV/k8wCgYIKoZIzj0EAwIw",
        "    VjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u",
        "    MRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYDVQQDDApjYS5jYXJyaWVyMB4XDTIwMTEw",
        "    NjEyMDM1MloXDTIzMDgyNzEyMDM1MlowVjELMAkGA1UEBhMCR0IxDzANBgNVBAgM",
        "    BkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9uMRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYD",
        "    VQQDDApjYS5jYXJyaWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE3U1Dwcr8",
        "    PLyi1EOrAZEg3DeDkETRAix1EQR1qPRt1PZa+AmOZdJUHqQ/q66oKeBE7dqLy20i",
        "    VG7wQmu5wXirXqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYw",
        "    HQYDVR0OBBYEFO2OygGDMuSL5wZY1V3jP+XkSUERMAoGCCqGSM49BAMCA0gAMEUC",
        "    IQDhmyYwRJk74vJ9U0TruPUsKDAC3X+Yi4UbSaJV9u7rBwIgSiNERqA4as7TtRpQ",
        "    /Vpc3E4lc1wltJ5Wy2yJI2/nUeo=",
        "    -----END CERTIFICATE-----",
        "  clientcert: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTIxMzE3WhcNMjMwODAzMTIx",
        "    MzE3WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG",
        "    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww",
        "    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEx6HP/rDkPZSVfJ0N2yNL5LmNV5NV",
        "    poGwuGhgz4TlYuADLg9HAvYyOFMUYda9NxhLFOceEocde9Pj1zG+bps49KNvMG0w",
        "    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFD0315qu",
        "    kty2aZGmFEFSzHgQb/0CMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0",
        "    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD9gqD93k9GZnBfz8I59juR",
        "    qus+lFUjhb+i/+USL6QJWAIhANDlEK9wU5DviPCFhll1UfUc03I9zyFLlovsb8Kb",
        "    hrcK",
        "    -----END CERTIFICATE-----",
        "  key: |-",
        "    -----BEGIN EC PRIVATE KEY-----",
        "    MHcCAQEEIHWEw1l/fqgpp996iZWhD66w/84e4LteO52rnYIYlz9PoAoGCCqGSM49",
        "    AwEHoUQDQgAEx6HP/rDkPZSVfJ0N2yNL5LmNV5NVpoGwuGhgz4TlYuADLg9HAvYy",
        "    OFMUYda9NxhLFOceEocde9Pj1zG+bps49A==",
        "    -----END EC PRIVATE KEY-----",
        "lease_duration: 2764800",
        "lease_id: \"\"",
        "renewable: false",
        "request_id: 8d429cce-9509-99ea-5209-db733d736617",
        "warnings: null"
    ]
}

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:19
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684 `" && echo ansible-tmp-1604664800.3861198-15367-74179587748684="` echo /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp446qx_ci TO /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684/ /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664800.3861198-15367-74179587748684/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025 `" && echo ansible-tmp-1604664800.6099532-15393-202503724980025="` echo /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpm87bs0x2 TO /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/ /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpst_gd4yk TO /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/ /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpqrxejhu3 TO /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/ /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "3cc4adb67869bb3cf5dc5c207d41716cb421ea59",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpst_gd4yk",
            "attributes": null,
            "backup": false,
            "checksum": "3cc4adb67869bb3cf5dc5c207d41716cb421ea59",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "26b982c0df9646b145ca9fc45c6ff553",
    "mode": "0644",
    "owner": "root",
    "size": 226,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664800.6099532-15393-202503724980025/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170 `" && echo ansible-tmp-1604664800.969823-15433-83767863556170="` echo /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0s9al4qd TO /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/ /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp16961i2g TO /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/ /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplsbspgux TO /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/ /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "48c40c4a657ff251f778141b0798070a60bb9d46",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp16961i2g",
            "attributes": null,
            "backup": false,
            "checksum": "48c40c4a657ff251f778141b0798070a60bb9d46",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "70b3f3e4ed5be365d785b3af66c3987c",
    "mode": "0644",
    "owner": "root",
    "size": 1571,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664800.969823-15433-83767863556170/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010 `" && echo ansible-tmp-1604664801.3114917-15473-94196601000010="` echo /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3sptiq4e TO /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010/ /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664801.3114917-15473-94196601000010/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "atime": 1604664797.4117196,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "848b3d233e45dabc2118fe3297a4eaf10965f180",
        "ctime": 1604664797.0157135,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3236,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664797.0157135,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 265,
        "uid": 0,
        "version": "4237928841",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789 `" && echo ansible-tmp-1604664801.5417702-15503-41244202891789="` echo /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpoqtg5pi5 TO /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789/ /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664801.5417702-15503-41244202891789/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key"
        }
    },
    "stat": {
        "atime": 1604664800.879772,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "3cc4adb67869bb3cf5dc5c207d41716cb421ea59",
        "ctime": 1604664800.879772,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3241,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664800.74377,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 226,
        "uid": 0,
        "version": "2182227740",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the MSP config.yaml exist or not] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057 `" && echo ansible-tmp-1604664801.8637955-15540-98090342075057="` echo /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiax05dpl TO /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057/ /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664801.8637955-15540-98090342075057/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp/config.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Create the msp directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864 `" && echo ansible-tmp-1604664802.0543654-15566-189174808178864="` echo /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpsz8bbt3a TO /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864/ /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664802.0543654-15566-189174808178864/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Create the MSP config.yaml file for orgs] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:79
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934 `" && echo ansible-tmp-1604664802.2526433-15592-241195768791934="` echo /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpzxezfce9 TO /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934/ /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664802.2526433-15592-241195768791934/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
    "delta": "0:00:00.002438",
    "end": "2020-11-06 12:13:22.385698",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:13:22.383260",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check that orderer-certificate file exists] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:96
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564 `" && echo ansible-tmp-1604664802.4477801-15620-50950344287564="` echo /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnp_7jn0w TO /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564/ /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664802.4477801-15620-50950344287564/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053 `" && echo ansible-tmp-1604664802.6170065-15620-24903044267053="` echo /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp5kbfi_5w TO /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053/ /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664802.6170065-15620-24903044267053/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563 `" && echo ansible-tmp-1604664802.7829206-15620-145997419013563="` echo /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpsdn6xo6o TO /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563/ /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664802.7829206-15620-145997419013563/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Ensure orderer tls cert directory exists] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:108
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296 `" && echo ansible-tmp-1604664802.9784813-15694-110891050171296="` echo /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbdo1ssut TO /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296/ /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664802.9784813-15694-110891050171296/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313 `" && echo ansible-tmp-1604664803.158465-15694-187660286993313="` echo /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpzixcig_0 TO /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313/ /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664803.158465-15694-187660286993313/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594 `" && echo ansible-tmp-1604664803.3353336-15694-181375501160594="` echo /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgbd6rvtz TO /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594/ /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664803.3353336-15694-181375501160594/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Copy tls ca.crt from auto-generated path to given path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:120
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664803.5389063-15768-51471626647879 `" && echo ansible-tmp-1604664803.5389063-15768-51471626647879="` echo /root/.ansible/tmp/ansible-tmp-1604664803.5389063-15768-51471626647879 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664803.5389063-15768-51471626647879/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart.suneel.pvt.wmtbaf.info:8443"
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664803.5747907-15768-10802964878415 `" && echo ansible-tmp-1604664803.5747907-15768-10802964878415="` echo /root/.ansible/tmp/ansible-tmp-1604664803.5747907-15768-10802964878415 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664803.5747907-15768-10802964878415/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart.suneel.pvt.wmtbaf.info:8443"
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664803.6097603-15768-128854229906210 `" && echo ansible-tmp-1604664803.6097603-15768-128854229906210="` echo /root/.ansible/tmp/ansible-tmp-1604664803.6097603-15768-128854229906210 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664803.6097603-15768-128854229906210/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart.suneel.pvt.wmtbaf.info:8443"
    }
}

PLAY RECAP *********************************************************************
localhost                  : ok=300  changed=115  unreachable=0    failed=1    skipped=291  rescued=0    ignored=20  

