ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498 `" && echo ansible-tmp-1604663906.2439613-5768-200477523198498="` echo /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmns8bqmt TO /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/ /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663906.2439613-5768-200477523198498/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421 `" && echo ansible-tmp-1604663907.1732137-5820-174007558261421="` echo /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpld5r2re0 TO /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/ /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663907.1732137-5820-174007558261421/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.qhgc4ski",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762 `" && echo ansible-tmp-1604663907.5004537-5846-24311627337762="` echo /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfxmkvndv TO /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/ /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663907.5004537-5846-24311627337762/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063 `" && echo ansible-tmp-1604663907.9946978-5882-12851382929063="` echo /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8f72axk7 TO /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/ /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663907.9946978-5882-12851382929063/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050915",
    "end": "2020-11-06 11:58:28.340625",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:28.289710",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047 `" && echo ansible-tmp-1604663908.3865848-5913-208072562255047="` echo /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1y8xz2jx TO /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/ /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663908.3865848-5913-208072562255047/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.o0x3pay8",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838 `" && echo ansible-tmp-1604663908.5629444-5939-173289286642838="` echo /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_ta14ui1 TO /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/ /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663908.5629444-5939-173289286642838/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750 `" && echo ansible-tmp-1604663908.9023404-5975-275326116445750="` echo /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpa_8rb7d8 TO /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/ /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663908.9023404-5975-275326116445750/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051942",
    "end": "2020-11-06 11:58:29.084942",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:29.033000",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898 `" && echo ansible-tmp-1604663909.2161424-6008-10714992650898="` echo /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfpqnx2em TO /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/ /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.2161424-6008-10714992650898/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.8pvfsfn0",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307 `" && echo ansible-tmp-1604663909.3952746-6034-61787510727307="` echo /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4pmnm834 TO /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/ /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.3952746-6034-61787510727307/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462 `" && echo ansible-tmp-1604663909.7320917-6070-211105019277462="` echo /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6mwv4_rm TO /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/ /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.7320917-6070-211105019277462/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050135",
    "end": "2020-11-06 11:58:29.911202",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:29.861067",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041 `" && echo ansible-tmp-1604663909.9569445-6101-13685909620041="` echo /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvyeesf0_ TO /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/ /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663909.9569445-6101-13685909620041/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.dttpj75h",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715 `" && echo ansible-tmp-1604663910.1381652-6127-14404923159715="` echo /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwpjy2p4q TO /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/ /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.1381652-6127-14404923159715/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261 `" && echo ansible-tmp-1604663910.4803987-6163-224223260352261="` echo /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpq2q6b_2e TO /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/ /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.4803987-6163-224223260352261/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.059677",
    "end": "2020-11-06 11:58:30.670154",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:30.610477",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854 `" && echo ansible-tmp-1604663910.771205-6197-147578061136854="` echo /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp78dhx_4z TO /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/ /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.771205-6197-147578061136854/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.7fpuzm73",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449 `" && echo ansible-tmp-1604663910.9498298-6223-142042759452449="` echo /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp112ch1ob TO /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/ /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663910.9498298-6223-142042759452449/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530 `" && echo ansible-tmp-1604663911.4010527-6257-114094879633530="` echo /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo3udixbr TO /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/ /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663911.4010527-6257-114094879633530/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.032131",
    "end": "2020-11-06 11:58:31.562536",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:31.530405",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146 `" && echo ansible-tmp-1604663911.818995-6298-22900696448146="` echo /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp61i4mw2y TO /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/ /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663911.818995-6298-22900696448146/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688 `" && echo ansible-tmp-1604663912.794064-6338-224880988011688="` echo /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp178oe5ee TO /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/ /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663912.794064-6338-224880988011688/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039 `" && echo ansible-tmp-1604663913.4338112-6366-160314149386039="` echo /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplarx_dvq TO /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/ /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663913.4338112-6366-160314149386039/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875 `" && echo ansible-tmp-1604663914.234959-6406-10088584520875="` echo /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpqhbtwjdf TO /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/ /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663914.234959-6406-10088584520875/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735 `" && echo ansible-tmp-1604663915.3106432-6461-108293252327735="` echo /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo4iobr50 TO /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/ /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663915.3106432-6461-108293252327735/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.kv0wdg2t",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335 `" && echo ansible-tmp-1604663915.489033-6487-13077265458335="` echo /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpq017f25u TO /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/ /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663915.489033-6487-13077265458335/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168 `" && echo ansible-tmp-1604663915.8467433-6523-192025551356168="` echo /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8g2780hy TO /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/ /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663915.8467433-6523-192025551356168/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053364",
    "end": "2020-11-06 11:58:36.030307",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:35.976943",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739 `" && echo ansible-tmp-1604663916.0825052-6554-38879310801739="` echo /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_yc4wkgy TO /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/ /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.0825052-6554-38879310801739/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.pxqy1jgj",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552 `" && echo ansible-tmp-1604663916.262519-6580-245909013210552="` echo /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpcw8_7t2q TO /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/ /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.262519-6580-245909013210552/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888 `" && echo ansible-tmp-1604663916.6373775-6616-265830438307888="` echo /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprdl57lzf TO /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/ /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.6373775-6616-265830438307888/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051685",
    "end": "2020-11-06 11:58:36.819805",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:36.768120",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861 `" && echo ansible-tmp-1604663916.8787143-6647-20933702594861="` echo /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiu298ng8 TO /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/ /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663916.8787143-6647-20933702594861/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101 `" && echo ansible-tmp-1604663917.7624002-6687-199204363963101="` echo /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp71d321t7 TO /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/ /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663917.7624002-6687-199204363963101/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152 `" && echo ansible-tmp-1604663918.3893642-6715-94211164720152="` echo /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnlyx4z3_ TO /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/ /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663918.3893642-6715-94211164720152/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842 `" && echo ansible-tmp-1604663919.0017037-6743-245367267452842="` echo /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3awt2m0v TO /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/ /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663919.0017037-6743-245367267452842/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.428070",
    "end": "2020-11-06 11:58:39.562231",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:39.134161",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914 `" && echo ansible-tmp-1604663919.6207037-6772-265461855199914="` echo /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk1ddks93 TO /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/ /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663919.6207037-6772-265461855199914/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.249129",
    "end": "2020-11-06 11:58:39.998222",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:39.749093",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760 `" && echo ansible-tmp-1604663920.0663636-6809-73884136265760="` echo /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfl5u9jxv TO /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/ /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663920.0663636-6809-73884136265760/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:02.576639",
    "end": "2020-11-06 11:58:42.775659",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:58:40.199020",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Fri Nov  6 11:58:41 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     0s\nflux-dev-ssh-config   1     0s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          0s\nflux-dev-helm-operator  0/1    1           0          0s\nflux-dev-memcached      0/1    1           0          0s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-bd6r5                0/1    ContainerCreating  0         0s\nflux-dev-helm-operator-745dc7fb99-rszft  0/1    ContainerCreating  0         0s\nflux-dev-memcached-5f689bfdb9-jzqnl      0/1    ContainerCreating  0         0s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.154.18  <none>       3030/TCP   0s\nflux-dev-memcached  ClusterIP  10.0.106.75  <none>       11211/TCP  0s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        0s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  0s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  0s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Fri Nov  6 11:58:41 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     0s",
        "flux-dev-ssh-config   1     0s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          0s",
        "flux-dev-helm-operator  0/1    1           0          0s",
        "flux-dev-memcached      0/1    1           0          0s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-bd6r5                0/1    ContainerCreating  0         0s",
        "flux-dev-helm-operator-745dc7fb99-rszft  0/1    ContainerCreating  0         0s",
        "flux-dev-memcached-5f689bfdb9-jzqnl      0/1    ContainerCreating  0         0s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.154.18  <none>       3030/TCP   0s",
        "flux-dev-memcached  ClusterIP  10.0.106.75  <none>       11211/TCP  0s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        0s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809 `" && echo ansible-tmp-1604663922.9828496-6857-124226987216809="` echo /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpb4n2xg4_ TO /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/ /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663922.9828496-6857-124226987216809/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144 `" && echo ansible-tmp-1604663953.649457-6857-278372237410144="` echo /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiv6ekx5d TO /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/ /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663953.649457-6857-278372237410144/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T11:58:42Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-bd6r5",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "77eb3903-57b6-4723-8fd7-207e205c7206"
                    }
                ],
                "resourceVersion": "2442294",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-bd6r5",
                "uid": "fcb5b7bc-62ea-4a61-a872-ab49a6c85b46"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-mwz5p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-mwz5p",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-mwz5p"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1702e90ca0fd00d5b53975dd6edb50c14596a354c57cc050583bbdad4776c73e",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T11:58:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.21",
                "podIPs": [
                    {
                        "ip": "10.1.0.21"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T11:58:42Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887 `" && echo ansible-tmp-1604663954.485959-6926-63569342935887="` echo /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4xouk6no TO /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/ /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663954.485959-6926-63569342935887/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.372845",
    "end": "2020-11-06 11:59:15.207070",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:14.834225",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294 `" && echo ansible-tmp-1604663956.0130217-6986-68880129731294="` echo /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8spadi0w TO /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/ /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663956.0130217-6986-68880129731294/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.cmwya74f",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651 `" && echo ansible-tmp-1604663956.2289178-7012-262496183905651="` echo /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpegsa9f0x TO /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/ /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663956.2289178-7012-262496183905651/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853 `" && echo ansible-tmp-1604663956.90273-7048-129069509382853="` echo /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp75y7rktk TO /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/ /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663956.90273-7048-129069509382853/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.163579",
    "end": "2020-11-06 11:59:17.270553",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:17.106974",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431 `" && echo ansible-tmp-1604663957.3612936-7080-192279522448431="` echo /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpa3fcq6c7 TO /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/ /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663957.3612936-7080-192279522448431/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ps6shm4q",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610 `" && echo ansible-tmp-1604663957.6278677-7106-268673185474610="` echo /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpue_t3u3y TO /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/ /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663957.6278677-7106-268673185474610/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473 `" && echo ansible-tmp-1604663958.0764883-7142-32612689428473="` echo /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3kokr1bn TO /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/ /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663958.0764883-7142-32612689428473/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.047913",
    "end": "2020-11-06 11:59:18.257336",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:18.209423",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689 `" && echo ansible-tmp-1604663958.3176064-7174-226177185778689="` echo /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfddgbqst TO /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/ /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663958.3176064-7174-226177185778689/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314 `" && echo ansible-tmp-1604663959.2088077-7215-54140016917314="` echo /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7tygp1lj TO /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/ /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663959.2088077-7215-54140016917314/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835 `" && echo ansible-tmp-1604663959.8899238-7243-166120998234835="` echo /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4c__om_k TO /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/ /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663959.8899238-7243-166120998234835/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T11:58:42Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-bd6r5",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "77eb3903-57b6-4723-8fd7-207e205c7206"
                    }
                ],
                "resourceVersion": "2442294",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-bd6r5",
                "uid": "fcb5b7bc-62ea-4a61-a872-ab49a6c85b46"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-mwz5p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-mwz5p",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-mwz5p"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T11:58:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1702e90ca0fd00d5b53975dd6edb50c14596a354c57cc050583bbdad4776c73e",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T11:58:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.21",
                "podIPs": [
                    {
                        "ip": "10.1.0.21"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T11:58:42Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603 `" && echo ansible-tmp-1604663960.6410468-7279-203824175904603="` echo /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpu4t4j8r3 TO /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/ /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663960.6410468-7279-203824175904603/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.132281",
    "end": "2020-11-06 11:59:20.906087",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:20.773806",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664 `" && echo ansible-tmp-1604663961.611707-7345-104182178240664="` echo /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpco7nm6yu TO /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/ /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663961.611707-7345-104182178240664/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.76yzy_b4",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919 `" && echo ansible-tmp-1604663961.7931762-7371-104474522167919="` echo /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1ldda32x TO /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/ /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663961.7931762-7371-104474522167919/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438 `" && echo ansible-tmp-1604663962.1680202-7407-123862796614438="` echo /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk_196mhu TO /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/ /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663962.1680202-7407-123862796614438/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054710",
    "end": "2020-11-06 11:59:22.379062",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:22.324352",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723 `" && echo ansible-tmp-1604663962.4418616-7438-272590583261723="` echo /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9ixwood4 TO /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/ /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663962.4418616-7438-272590583261723/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712 `" && echo ansible-tmp-1604663963.2771156-7478-133673670099712="` echo /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpcyt53hjc TO /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/ /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663963.2771156-7478-133673670099712/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822 `" && echo ansible-tmp-1604663963.913678-7506-136842377925822="` echo /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplt16cpx7 TO /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/ /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663963.913678-7506-136842377925822/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865 `" && echo ansible-tmp-1604663964.8022537-7546-95494538419865="` echo /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpfaxnjlc_ TO /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/ /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663964.8022537-7546-95494538419865/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220 `" && echo ansible-tmp-1604663965.752177-7598-246473833002220="` echo /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpp80zplvj TO /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/ /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663965.752177-7598-246473833002220/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.w58tvq7g",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574 `" && echo ansible-tmp-1604663965.9358735-7624-106959623582574="` echo /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp04emxmdt TO /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/ /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663965.9358735-7624-106959623582574/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381 `" && echo ansible-tmp-1604663966.3135262-7660-245023161834381="` echo /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpl34l6lnn TO /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/ /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663966.3135262-7660-245023161834381/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.060413",
    "end": "2020-11-06 11:59:26.507300",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:26.446887",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376 `" && echo ansible-tmp-1604663966.5689392-7692-176872090594376="` echo /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8tzctrlb TO /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/ /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663966.5689392-7692-176872090594376/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692 `" && echo ansible-tmp-1604663967.4021406-7732-146491260849692="` echo /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprowhc56x TO /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/ /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663967.4021406-7732-146491260849692/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560 `" && echo ansible-tmp-1604663968.0260546-7760-253240803469560="` echo /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphc6krzig TO /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/ /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663968.0260546-7760-253240803469560/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603 `" && echo ansible-tmp-1604663968.8591611-7800-64761653404603="` echo /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbp6cn2er TO /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/ /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663968.8591611-7800-64761653404603/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905 `" && echo ansible-tmp-1604663969.5874527-7829-71927230365905="` echo /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiyn3h3dd TO /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/ /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663969.5874527-7829-71927230365905/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522 `" && echo ansible-tmp-1604663970.1073816-7859-115491689591522="` echo /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpbkgyantg TO /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/ /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663970.1073816-7859-115491689591522/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489 `" && echo ansible-tmp-1604663970.9071448-7897-38377728275489="` echo /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9m8__rn7 TO /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/ /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663970.9071448-7897-38377728275489/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708 `" && echo ansible-tmp-1604663971.1167738-7923-157850790281708="` echo /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphj1v_f7x TO /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpasxucfin/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmps93a55fv TO /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663971.1167738-7923-157850790281708/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380 `" && echo ansible-tmp-1604663971.7932892-7965-91294682878380="` echo /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7y99uktn TO /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/ /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663971.7932892-7965-91294682878380/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903 `" && echo ansible-tmp-1604663971.9986117-7991-68822734997903="` echo /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmptg9linjx TO /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxyfo8al_/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpaici9gfx TO /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663971.9986117-7991-68822734997903/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581 `" && echo ansible-tmp-1604663972.3960795-8033-162812672904581="` echo /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp21vhhbdr TO /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/ /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663972.3960795-8033-162812672904581/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271 `" && echo ansible-tmp-1604663972.6038275-8059-198117112313271="` echo /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpzdjqvx9k TO /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpxeqii8jg/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmplt9gi_6n TO /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663972.6038275-8059-198117112313271/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242 `" && echo ansible-tmp-1604663972.998846-8101-116175496566242="` echo /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpg5m_dhuh TO /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/ /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663972.998846-8101-116175496566242/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066 `" && echo ansible-tmp-1604663973.2045212-8127-269829131272066="` echo /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2c_4707w TO /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuvgr5o7j/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2x8lkzvt TO /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604663973.2045212-8127-269829131272066/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401 `" && echo ansible-tmp-1604663973.6176782-8170-197387719325401="` echo /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppjym6m65 TO /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/ /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663973.6176782-8170-197387719325401/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809 `" && echo ansible-tmp-1604663973.8243132-8196-123473296886809="` echo /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpex32pziq TO /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/ /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663973.8243132-8196-123473296886809/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.689178",
    "end": "2020-11-06 11:59:42.643031",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 11:59:33.953853",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   868c99c5..d312208d  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   868c99c5..d312208d  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla d312208d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 11231 insertions(+), 25950 deletions(-)\n rewrite console.out (73%)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d312208d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 25950 deletions(-)",
        " rewrite console.out (73%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d312208d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 25950 deletions(-)",
        " rewrite console.out (73%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   868c99c5..d312208d  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726 `" && echo ansible-tmp-1604663982.8820388-8248-211129254684726="` echo /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmposz35ofw TO /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/ /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663982.8820388-8248-211129254684726/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563 `" && echo ansible-tmp-1604663983.7529776-8288-222945762381563="` echo /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpni8hvf00 TO /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/ /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604663983.7529776-8288-222945762381563/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664 `" && echo ansible-tmp-1604664019.363273-8288-166243911377664="` echo /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4e71lfws TO /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/ /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664019.363273-8288-166243911377664/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767 `" && echo ansible-tmp-1604664055.016141-8288-143150759080767="` echo /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkj8ogfy7 TO /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/ /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664055.016141-8288-143150759080767/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265 `" && echo ansible-tmp-1604664090.6455688-8288-170289898728265="` echo /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpddm8uvij TO /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/ /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664090.6455688-8288-170289898728265/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:01:01Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2442634",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "3e104c6f-f213-4fd4-b5ae-5b50102876c5"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-g4bvw"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549 `" && echo ansible-tmp-1604664091.4898458-8402-106253643270549="` echo /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp9bav0am2 TO /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/ /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664091.4898458-8402-106253643270549/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:01:01Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2442632",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "6caac180-0a4b-420c-9c52-d434a0772e72"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-kpr65"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923 `" && echo ansible-tmp-1604664092.1771774-8432-31258393455923="` echo /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo294z3m7 TO /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/ /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664092.1771774-8432-31258393455923/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603 `" && echo ansible-tmp-1604664093.0952203-8470-276748423125603="` echo /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnnxhqxsw TO /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/ /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.0952203-8470-276748423125603/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746 `" && echo ansible-tmp-1604664093.2985115-8496-261817456056746="` echo /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpli0f3d_c TO /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7f6po_9d/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0jxx7rsb TO /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664093.2985115-8496-261817456056746/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038 `" && echo ansible-tmp-1604664093.6991246-8538-39296845418038="` echo /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp31sblqgn TO /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/ /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.6991246-8538-39296845418038/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107 `" && echo ansible-tmp-1604664093.9072514-8564-44016413066107="` echo /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp59renyct TO /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvnip_erl/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp1sjwzkkd TO /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664093.9072514-8564-44016413066107/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414 `" && echo ansible-tmp-1604664094.3359017-8606-146492435913414="` echo /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgn_n1bjq TO /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/ /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664094.3359017-8606-146492435913414/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862 `" && echo ansible-tmp-1604664094.5422657-8632-102424116243862="` echo /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvzx9us74 TO /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpht985m8u/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpio_qnhyq TO /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664094.5422657-8632-102424116243862/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988 `" && echo ansible-tmp-1604664094.942517-8674-218992632025988="` echo /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_ise5xix TO /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/ /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664094.942517-8674-218992632025988/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371 `" && echo ansible-tmp-1604664095.1492207-8700-94059704671371="` echo /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpb6m1rfyc TO /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpw3g8lq2x/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpu58fyieb TO /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664095.1492207-8700-94059704671371/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932 `" && echo ansible-tmp-1604664095.565407-8743-63689880709932="` echo /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdp4mtfmt TO /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/ /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664095.565407-8743-63689880709932/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908 `" && echo ansible-tmp-1604664095.7687237-8769-211158712402908="` echo /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7lturhfk TO /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/ /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664095.7687237-8769-211158712402908/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.073315",
    "end": "2020-11-06 12:01:38.971979",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:01:35.898664",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   d312208d..a5effbc0  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d312208d..a5effbc0  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla a5effbc0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1162 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla a5effbc0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla a5effbc0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d312208d..a5effbc0  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061 `" && echo ansible-tmp-1604664099.2183235-8821-34605243622061="` echo /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp46bqrh_0 TO /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/ /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664099.2183235-8821-34605243622061/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724 `" && echo ansible-tmp-1604664100.104841-8861-80363451628724="` echo /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuxhue1of TO /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/ /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664100.104841-8861-80363451628724/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617 `" && echo ansible-tmp-1604664135.7078266-8861-68289995531617="` echo /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmpxi5bdl TO /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/ /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664135.7078266-8861-68289995531617/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708 `" && echo ansible-tmp-1604664171.3340843-8861-272184592053708="` echo /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpi7ryyp1v TO /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/ /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664171.3340843-8861-272184592053708/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065 `" && echo ansible-tmp-1604664206.9470565-8861-268897054420065="` echo /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpioa9_lyr TO /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/ /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664206.9470565-8861-268897054420065/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:03:04Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2442954",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "193c49b4-fcf0-43b3-88fa-857b438f7d8c"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-x85m7"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464 `" && echo ansible-tmp-1604664207.7726333-8975-163790794245464="` echo /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8q8h45c5 TO /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/ /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664207.7726333-8975-163790794245464/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:03:04Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2442952",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "20d9b7ea-60b8-41df-b4de-1fe55918d6ab"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-5cx8t"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701 `" && echo ansible-tmp-1604664208.6379707-9009-176756620969701="` echo /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpo48uykfn TO /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/ /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664208.6379707-9009-176756620969701/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:01:01Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2442625",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "97008025-3972-4370-9785-1a6c3b15716e"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313 `" && echo ansible-tmp-1604664209.3816197-9043-7127339767313="` echo /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjy8s5rfl TO /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/ /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664209.3816197-9043-7127339767313/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708 `" && echo ansible-tmp-1604664209.5679488-9069-68004286580708="` echo /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpmpwntwdp TO /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/ /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664209.5679488-9069-68004286580708/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437 `" && echo ansible-tmp-1604664209.971951-9107-10757349263437="` echo /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8ye4w7dg TO /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/ /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664209.971951-9107-10757349263437/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.078559",
    "end": "2020-11-06 12:03:30.182069",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:30.103510",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.078559",
            "end": "2020-11-06 12:03:30.182069",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 12:03:30.103510",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048 `" && echo ansible-tmp-1604664210.4067118-9153-37087549796048="` echo /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8s1wfm8d TO /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/ /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664210.4067118-9153-37087549796048/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.044007",
    "end": "2020-11-06 12:03:30.581169",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:30.537162",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621 `" && echo ansible-tmp-1604664210.6427948-9188-107463063472621="` echo /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpj8mf399x TO /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/ /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664210.6427948-9188-107463063472621/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.256077",
    "end": "2020-11-06 12:03:31.028811",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:30.772734",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173 `" && echo ansible-tmp-1604664211.1005218-9229-142922047751173="` echo /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpy4gp9ji7 TO /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/ /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664211.1005218-9229-142922047751173/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.289115",
    "end": "2020-11-06 12:03:31.522917",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:31.233802",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038 `" && echo ansible-tmp-1604664211.73757-9290-151389440127038="` echo /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3kseq60r TO /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/ /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664211.73757-9290-151389440127038/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.040433",
    "end": "2020-11-06 12:03:31.908673",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:31.868240",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544 `" && echo ansible-tmp-1604664212.000354-9327-9691056342544="` echo /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpgje74cir TO /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpijb1ncod/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmphbfq6szu TO /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664212.000354-9327-9691056342544/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693 `" && echo ansible-tmp-1604664212.404238-9369-204247222804693="` echo /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp5_d4n6pv TO /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/ /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664212.404238-9369-204247222804693/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.043257",
    "end": "2020-11-06 12:03:32.578019",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:32.534762",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020 `" && echo ansible-tmp-1604664212.6464407-9405-104201191405020="` echo /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0c6dgsxc TO /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/ /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664212.6464407-9405-104201191405020/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.042157",
    "end": "2020-11-06 12:03:32.818838",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:32.776681",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057 `" && echo ansible-tmp-1604664213.1223023-9451-43231373423057="` echo /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpv2vwnb_d TO /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/ /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664213.1223023-9451-43231373423057/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530 `" && echo ansible-tmp-1604664213.730217-9479-30264944597530="` echo /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjmsmvcz6 TO /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/ /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664213.730217-9479-30264944597530/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.105006",
    "end": "2020-11-06 12:03:33.965845",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:33.860839",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398 `" && echo ansible-tmp-1604664214.1331697-9515-267438356504398="` echo /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6zfjqkhj TO /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/ /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664214.1331697-9515-267438356504398/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T12:03:04Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2442945",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "b9e95706-82fb-4b2b-9fd3-226a58c1540c"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797 `" && echo ansible-tmp-1604664214.8683321-9549-225985220862797="` echo /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpszlfgqfi TO /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/ /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664214.8683321-9549-225985220862797/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604664209.6988552,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604664212.2948945,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3006,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604664212.2948945,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1950252234",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107 `" && echo ansible-tmp-1604664215.3251932-9591-262248741768107="` echo /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpf8z9fj21 TO /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/ /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664215.3251932-9591-262248741768107/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.045072",
    "end": "2020-11-06 12:03:35.502632",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:35.457560",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.045072",
            "end": "2020-11-06 12:03:35.502632",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 12:03:35.457560",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109 `" && echo ansible-tmp-1604664215.739641-9637-214534225169109="` echo /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp38125vf0 TO /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/ /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664215.739641-9637-214534225169109/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.042797",
    "end": "2020-11-06 12:03:35.912521",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:35.869724",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774 `" && echo ansible-tmp-1604664215.9776244-9673-110099640586774="` echo /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpp4vovbfp TO /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/ /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664215.9776244-9673-110099640586774/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.206866",
    "end": "2020-11-06 12:03:36.315940",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:36.109074",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986 `" && echo ansible-tmp-1604664216.3901083-9714-156820227255986="` echo /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpg546puzm TO /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/ /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664216.3901083-9714-156820227255986/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.277072",
    "end": "2020-11-06 12:03:36.797524",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:36.520452",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467 `" && echo ansible-tmp-1604664217.0061798-9774-228425216577467="` echo /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp8hqf2yzj TO /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/ /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.0061798-9774-228425216577467/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.042403",
    "end": "2020-11-06 12:03:37.181147",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:37.138744",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536 `" && echo ansible-tmp-1604664217.3088539-9813-243603499677536="` echo /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpiui7cnfj TO /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0va0cb17/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpl7ja_6wj TO /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664217.3088539-9813-243603499677536/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811 `" && echo ansible-tmp-1604664217.6698368-9853-270283305583811="` echo /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpjk0cp_g0 TO /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/ /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.6698368-9853-270283305583811/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.040190",
    "end": "2020-11-06 12:03:37.840314",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:37.800124",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985 `" && echo ansible-tmp-1604664217.9108279-9889-262240353754985="` echo /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp74codefg TO /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/ /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664217.9108279-9889-262240353754985/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.042386",
    "end": "2020-11-06 12:03:38.086368",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:38.043982",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688 `" && echo ansible-tmp-1604664218.3315954-9935-32727503996688="` echo /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2xgxyw4z TO /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/ /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664218.3315954-9935-32727503996688/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882 `" && echo ansible-tmp-1604664218.956742-9963-227410922157882="` echo /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpefwilzzw TO /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/ /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664218.956742-9963-227410922157882/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.112802",
    "end": "2020-11-06 12:03:39.205814",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:39.093012",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155 `" && echo ansible-tmp-1604664219.4897492-9999-276909038757155="` echo /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp2q8rp_ic TO /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/ /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664219.4897492-9999-276909038757155/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224 `" && echo ansible-tmp-1604664220.4703808-10047-236100260595224="` echo /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuc56z7de TO /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/ /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664220.4703808-10047-236100260595224/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402 `" && echo ansible-tmp-1604664221.5479639-10095-68611496223402="` echo /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdh7u6tf8 TO /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/ /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664221.5479639-10095-68611496223402/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.087128",
    "end": "2020-11-06 12:03:41.765233",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:41.678105",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335 `" && echo ansible-tmp-1604664221.8836026-10131-37299295483335="` echo /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpyv6rwtb6 TO /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/ /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664221.8836026-10131-37299295483335/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781 `" && echo ansible-tmp-1604664222.0757253-10157-14304436319781="` echo /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp36rzwmvz TO /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/ /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.0757253-10157-14304436319781/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654 `" && echo ansible-tmp-1604664222.3915265-10191-240224241746654="` echo /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp4u7amrn7 TO /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/ /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.3915265-10191-240224241746654/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434 `" && echo ansible-tmp-1604664222.5834844-10217-153241338612434="` echo /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpwyret17e TO /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/ /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.5834844-10217-153241338612434/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
    "delta": "0:00:00.008317",
    "end": "2020-11-06 12:03:42.721921",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:42.713604",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488 `" && echo ansible-tmp-1604664222.8164172-10246-200660603772488="` echo /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppscb3mb9 TO /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/ /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664222.8164172-10246-200660603772488/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.042625",
    "end": "2020-11-06 12:03:42.991733",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:42.949108",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001 `" && echo ansible-tmp-1604664223.05767-10284-45147633618001="` echo /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmph6m7ydrz TO /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/ /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664223.05767-10284-45147633618001/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.046801",
    "end": "2020-11-06 12:03:43.237067",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 12:03:43.190266",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533 `" && echo ansible-tmp-1604664223.307631-10319-249271232205533="` echo /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppssgs4rs TO /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/ /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664223.307631-10319-249271232205533/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.043966",
    "end": "2020-11-06 12:03:43.483201",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:43.439235",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645 `" && echo ansible-tmp-1604664223.5524743-10355-54008774812645="` echo /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp3sorvksf TO /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/ /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664223.5524743-10355-54008774812645/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644 `" && echo ansible-tmp-1604664224.206129-10383-218479388058644="` echo /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp0t_tw84e TO /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/ /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664224.206129-10383-218479388058644/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.143323",
    "end": "2020-11-06 12:03:44.481199",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:44.337876",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854 `" && echo ansible-tmp-1604664224.6268203-10417-204634536070854="` echo /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp6f_zc8d6 TO /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/ /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664224.6268203-10417-204634536070854/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396 `" && echo ansible-tmp-1604664224.8337846-10443-188117163963396="` echo /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpk8fjcq4j TO /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/ /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664224.8337846-10443-188117163963396/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707 `" && echo ansible-tmp-1604664225.0392883-10469-153311347693707="` echo /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmprocln830 TO /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpdruyk43d/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpkmn_xpxp TO /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664225.0392883-10469-153311347693707/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441 `" && echo ansible-tmp-1604664225.51482-10511-204970644988441="` echo /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp73tq8xb_ TO /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/ /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.51482-10511-204970644988441/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604664225.3710916,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604664225.3750916,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3071,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604664225.2270894,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "4078398586",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889 `" && echo ansible-tmp-1604664225.7896132-10541-243227146925889="` echo /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpcf9a8n2y TO /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/ /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.7896132-10541-243227146925889/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233 `" && echo ansible-tmp-1604664225.9855223-10567-213913809604233="` echo /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp7yqtfdq3 TO /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/ /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664225.9855223-10567-213913809604233/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225 `" && echo ansible-tmp-1604664226.347509-10601-160012034816225="` echo /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpvm1c9g4v TO /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpuif3qnrf TO /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmppq6w6lkm TO /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpuif3qnrf",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604664226.347509-10601-160012034816225/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378 `" && echo ansible-tmp-1604664226.696565-10641-194093331541378="` echo /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpq1h5a6ld TO /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/ /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664226.696565-10641-194093331541378/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.066299",
    "end": "2020-11-06 12:03:46.895516",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 12:03:46.829217",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342 `" && echo ansible-tmp-1604664227.0490701-10678-234926449240342="` echo /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmpnleorcny TO /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/ /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604664227.0490701-10678-234926449240342/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196 `" && echo ansible-tmp-1604664227.261254-10704-160926914716196="` echo /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-5759rb7bg2yg/tmp_fof2f0a TO /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/ /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604664227.261254-10704-160926914716196/AnsiballZ_command.py && sleep 0'
