ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558 `" && echo ansible-tmp-1604395325.2246964-28597-93093651821558="` echo /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmphckch18_ TO /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558/ /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395325.2246964-28597-93093651821558/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100 `" && echo ansible-tmp-1604395326.151256-28649-250236054629100="` echo /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp6k84e9g1 TO /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100/ /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395326.151256-28649-250236054629100/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.q93kgswq",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716 `" && echo ansible-tmp-1604395326.470919-28675-90621788797716="` echo /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpcprca4i5 TO /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716/ /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395326.470919-28675-90621788797716/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826 `" && echo ansible-tmp-1604395326.9673514-28711-187804538217826="` echo /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpwkqe9nu3 TO /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826/ /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395326.9673514-28711-187804538217826/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053993",
    "end": "2020-11-03 09:22:07.297651",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:07.243658",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651 `" && echo ansible-tmp-1604395327.345132-28742-40747138046651="` echo /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpk_x7cqn_ TO /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651/ /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395327.345132-28742-40747138046651/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.wq6fqbuo",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444 `" && echo ansible-tmp-1604395327.5244384-28768-114594091944444="` echo /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp9zev5y_w TO /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444/ /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395327.5244384-28768-114594091944444/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940 `" && echo ansible-tmp-1604395327.9062235-28804-274576303878940="` echo /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpk_eau_gr TO /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940/ /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395327.9062235-28804-274576303878940/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.049379",
    "end": "2020-11-03 09:22:08.095299",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:08.045920",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071 `" && echo ansible-tmp-1604395328.221026-28837-148511893203071="` echo /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpp_dho5v6 TO /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071/ /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395328.221026-28837-148511893203071/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ny7qw6rl",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832 `" && echo ansible-tmp-1604395328.4001484-28863-101414520773832="` echo /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpljzk6or5 TO /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832/ /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395328.4001484-28863-101414520773832/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885 `" && echo ansible-tmp-1604395328.7386823-28899-219323760883885="` echo /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpl1lnkl1l TO /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885/ /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395328.7386823-28899-219323760883885/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050516",
    "end": "2020-11-03 09:22:08.925435",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:08.874919",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751 `" && echo ansible-tmp-1604395328.973579-28931-108654966719751="` echo /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp591e6nhz TO /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751/ /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395328.973579-28931-108654966719751/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.mgm4jk9p",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798 `" && echo ansible-tmp-1604395329.1543615-28957-112312578134798="` echo /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpihr7thri TO /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798/ /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395329.1543615-28957-112312578134798/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906 `" && echo ansible-tmp-1604395329.4929812-28993-111024041793906="` echo /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmplagwn36s TO /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906/ /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395329.4929812-28993-111024041793906/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053445",
    "end": "2020-11-03 09:22:09.676418",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:09.622973",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731 `" && echo ansible-tmp-1604395329.7774787-29026-56772705256731="` echo /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxlchs_ml TO /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731/ /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395329.7774787-29026-56772705256731/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.mjs2imj4",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432 `" && echo ansible-tmp-1604395329.9597166-29052-127052037126432="` echo /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpd8i_83o2 TO /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432/ /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395329.9597166-29052-127052037126432/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934 `" && echo ansible-tmp-1604395330.4085202-29086-262248755724934="` echo /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp8fxziytf TO /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934/ /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395330.4085202-29086-262248755724934/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.029386",
    "end": "2020-11-03 09:22:10.568262",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:10.538876",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'supplychain-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.supplychain-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "supplychain-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "supplychain",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.svc.cluster.local:7051', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.svc.cluster.local:7051",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'supplychain-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.supplychain-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "supplychain-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "supplychain",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.svc.cluster.local:7051', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.svc.cluster.local:7051",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989 `" && echo ansible-tmp-1604395330.8235555-29126-211238532957989="` echo /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp_tz47ec_ TO /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989/ /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395330.8235555-29126-211238532957989/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849 `" && echo ansible-tmp-1604395331.8678722-29166-42605655817849="` echo /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbopr2ngh TO /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849/ /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395331.8678722-29166-42605655817849/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059 `" && echo ansible-tmp-1604395332.5023265-29194-230803690930059="` echo /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmptqadulmf TO /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059/ /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395332.5023265-29194-230803690930059/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359 `" && echo ansible-tmp-1604395333.308914-29234-73801901635359="` echo /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmph9sbbdd6 TO /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359/ /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395333.308914-29234-73801901635359/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324 `" && echo ansible-tmp-1604395334.3807688-29289-205226403978324="` echo /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpmc3thtgk TO /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324/ /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395334.3807688-29289-205226403978324/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.nhocn6j1",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665 `" && echo ansible-tmp-1604395334.5625548-29315-147928226573665="` echo /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpzzqxeua7 TO /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665/ /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395334.5625548-29315-147928226573665/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671 `" && echo ansible-tmp-1604395334.9323802-29351-179493050720671="` echo /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpy0polysz TO /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671/ /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395334.9323802-29351-179493050720671/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.049801",
    "end": "2020-11-03 09:22:15.113232",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:15.063431",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454 `" && echo ansible-tmp-1604395335.167826-29382-143054690292454="` echo /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxf4cr943 TO /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454/ /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395335.167826-29382-143054690292454/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.psey4s9n",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549 `" && echo ansible-tmp-1604395335.3515308-29408-101840159812549="` echo /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpr01dbkm0 TO /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549/ /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395335.3515308-29408-101840159812549/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413 `" && echo ansible-tmp-1604395335.714538-29444-64551957113413="` echo /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp2i5ynj4s TO /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413/ /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395335.714538-29444-64551957113413/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050340",
    "end": "2020-11-03 09:22:15.896136",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:15.845796",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996 `" && echo ansible-tmp-1604395335.958092-29475-186568087912996="` echo /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp5dtdn6jg TO /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996/ /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395335.958092-29475-186568087912996/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588 `" && echo ansible-tmp-1604395336.841435-29515-103627484287588="` echo /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp0nkaz6fs TO /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588/ /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395336.841435-29515-103627484287588/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376 `" && echo ansible-tmp-1604395337.4794421-29543-15344991418376="` echo /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpljp1ur8w TO /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376/ /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395337.4794421-29543-15344991418376/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216 `" && echo ansible-tmp-1604395338.0981622-29571-138355474595216="` echo /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpnlkuj6bc TO /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216/ /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395338.0981622-29571-138355474595216/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.320466",
    "end": "2020-11-03 09:22:18.548406",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:18.227940",
    "stderr": "# github.com:22 SSH-2.0-babeld-2715c76c\n# github.com:22 SSH-2.0-babeld-2715c76c\n# github.com:22 SSH-2.0-babeld-2715c76c",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-2715c76c",
        "# github.com:22 SSH-2.0-babeld-2715c76c",
        "# github.com:22 SSH-2.0-babeld-2715c76c"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221 `" && echo ansible-tmp-1604395338.6015403-29600-58349688137221="` echo /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpcgvogq1d TO /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221/ /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395338.6015403-29600-58349688137221/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.289886",
    "end": "2020-11-03 09:22:19.021572",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:18.731686",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784 `" && echo ansible-tmp-1604395339.0903695-29637-210623932192784="` echo /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmph8_ewv2v TO /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784/ /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395339.0903695-29637-210623932192784/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=local --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:01.928621",
    "end": "2020-11-03 09:22:21.148326",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=local --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:19.219705",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Tue Nov  3 09:22:20 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     0s\nflux-dev-ssh-config   1     0s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          1s\nflux-dev-helm-operator  0/1    1           0          1s\nflux-dev-memcached      0/1    1           0          1s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-8bcfc4ff4-7dzgj                 0/1    ContainerCreating  0         1s\nflux-dev-helm-operator-745dc7fb99-rwr2m  0/1    ContainerCreating  0         1s\nflux-dev-memcached-5f689bfdb9-t4lvv      0/1    ContainerCreating  0         1s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.202.224  <none>       3030/TCP   1s\nflux-dev-memcached  ClusterIP  10.0.155.13   <none>       11211/TCP  1s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        0s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  1s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  1s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Tue Nov  3 09:22:20 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     0s",
        "flux-dev-ssh-config   1     0s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          1s",
        "flux-dev-helm-operator  0/1    1           0          1s",
        "flux-dev-memcached      0/1    1           0          1s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-8bcfc4ff4-7dzgj                 0/1    ContainerCreating  0         1s",
        "flux-dev-helm-operator-745dc7fb99-rwr2m  0/1    ContainerCreating  0         1s",
        "flux-dev-memcached-5f689bfdb9-t4lvv      0/1    ContainerCreating  0         1s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.202.224  <none>       3030/TCP   1s",
        "flux-dev-memcached  ClusterIP  10.0.155.13   <none>       11211/TCP  1s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        0s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346 `" && echo ansible-tmp-1604395341.342496-29685-249855639316346="` echo /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpc54nd6eh TO /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346/ /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395341.342496-29685-249855639316346/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234 `" && echo ansible-tmp-1604395372.0306828-29685-191970653051234="` echo /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpk_r4y8vu TO /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234/ /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395372.0306828-29685-191970653051234/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-03T09:22:20Z",
                "generateName": "flux-dev-8bcfc4ff4-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "8bcfc4ff4",
                    "release": "flux-dev"
                },
                "name": "flux-dev-8bcfc4ff4-7dzgj",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-8bcfc4ff4",
                        "uid": "bc016e12-f79d-4e43-9fe6-da3e7ac572ac"
                    }
                ],
                "resourceVersion": "1732614",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-8bcfc4ff4-7dzgj",
                "uid": "6743e64a-181e-4f86-9c67-8ab01933537a"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=local",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-mqdql",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-mqdql",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-mqdql"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://cb1062e7dea2aa3ad51f28f70f406ea1356ca4d28a6b2214ce7c55d2c063a67c",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-03T09:22:22Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.17",
                "podIPs": [
                    {
                        "ip": "10.1.0.17"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-03T09:22:20Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409 `" && echo ansible-tmp-1604395373.0703819-29754-212663648913409="` echo /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpwtdqi4g9 TO /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409/ /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395373.0703819-29754-212663648913409/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.523565",
    "end": "2020-11-03 09:22:53.982929",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:53.459364",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818 `" && echo ansible-tmp-1604395374.618014-29815-196551462908818="` echo /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpeuu8o3cp TO /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818/ /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395374.618014-29815-196551462908818/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.nhlxpjgo",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691 `" && echo ansible-tmp-1604395374.806814-29841-119182568557691="` echo /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpy2f5jpg_ TO /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691/ /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395374.806814-29841-119182568557691/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652 `" && echo ansible-tmp-1604395375.2433152-29877-146340045281652="` echo /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp0ha77bcu TO /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652/ /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395375.2433152-29877-146340045281652/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.349545",
    "end": "2020-11-03 09:22:55.829614",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:55.480069",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438 `" && echo ansible-tmp-1604395375.8892982-29910-244203704717438="` echo /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpvenseja0 TO /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438/ /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395375.8892982-29910-244203704717438/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible._lvg84k9",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546 `" && echo ansible-tmp-1604395376.0890489-29936-163002620000546="` echo /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpob0crp6q TO /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546/ /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395376.0890489-29936-163002620000546/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799 `" && echo ansible-tmp-1604395376.5201418-29972-239815983228799="` echo /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp3x4_iwxr TO /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799/ /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395376.5201418-29972-239815983228799/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051109",
    "end": "2020-11-03 09:22:56.702580",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:56.651471",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704 `" && echo ansible-tmp-1604395376.7654564-30003-439211389704="` echo /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpw_jl5msy TO /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704/ /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395376.7654564-30003-439211389704/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986 `" && echo ansible-tmp-1604395377.7626534-30043-166320371760986="` echo /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpszyg58v7 TO /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986/ /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395377.7626534-30043-166320371760986/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373 `" && echo ansible-tmp-1604395378.4476564-30071-159799913140373="` echo /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpuq7_yckb TO /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373/ /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395378.4476564-30071-159799913140373/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-03T09:22:20Z",
                "generateName": "flux-dev-8bcfc4ff4-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "8bcfc4ff4",
                    "release": "flux-dev"
                },
                "name": "flux-dev-8bcfc4ff4-7dzgj",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-8bcfc4ff4",
                        "uid": "bc016e12-f79d-4e43-9fe6-da3e7ac572ac"
                    }
                ],
                "resourceVersion": "1732614",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-8bcfc4ff4-7dzgj",
                "uid": "6743e64a-181e-4f86-9c67-8ab01933537a"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=local",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-mqdql",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-mqdql",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-mqdql"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-03T09:22:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://cb1062e7dea2aa3ad51f28f70f406ea1356ca4d28a6b2214ce7c55d2c063a67c",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-03T09:22:22Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.17",
                "podIPs": [
                    {
                        "ip": "10.1.0.17"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-03T09:22:20Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334 `" && echo ansible-tmp-1604395379.1881425-30107-119658173111334="` echo /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp7vtqlsus TO /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334/ /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395379.1881425-30107-119658173111334/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.182909",
    "end": "2020-11-03 09:22:59.507241",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:22:59.324332",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'supplychain-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.supplychain-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "supplychain-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "supplychain",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.svc.cluster.local:7051', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.svc.cluster.local:7051",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'supplychain-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.supplychain-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "supplychain-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "supplychain",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.svc.cluster.local', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'cluster_region', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'local', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.svc.cluster.local:7051', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.svc.cluster.local",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "cluster_region"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.svc.cluster.local:7051",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798 `" && echo ansible-tmp-1604395380.184526-30173-208590215420798="` echo /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpowyjj2in TO /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798/ /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395380.184526-30173-208590215420798/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.awb0lupe",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856 `" && echo ansible-tmp-1604395380.3664691-30199-69139831658856="` echo /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpejnkbfvo TO /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856/ /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395380.3664691-30199-69139831658856/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449 `" && echo ansible-tmp-1604395380.735979-30235-85860310559449="` echo /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpg7yv9kba TO /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449/ /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395380.735979-30235-85860310559449/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055624",
    "end": "2020-11-03 09:23:00.923350",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:23:00.867726",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737 `" && echo ansible-tmp-1604395380.9859667-30266-120217208296737="` echo /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp_bybcofr TO /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737/ /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395380.9859667-30266-120217208296737/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500 `" && echo ansible-tmp-1604395381.8395262-30306-156995325548500="` echo /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp42916_qq TO /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500/ /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395381.8395262-30306-156995325548500/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598 `" && echo ansible-tmp-1604395382.4858363-30334-257317902016598="` echo /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpr8nkqm76 TO /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598/ /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395382.4858363-30334-257317902016598/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530 `" && echo ansible-tmp-1604395383.425605-30374-240823654644530="` echo /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxbjak8k0 TO /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530/ /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395383.425605-30374-240823654644530/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628 `" && echo ansible-tmp-1604395384.4037545-30426-173101870817628="` echo /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbd1pbxpw TO /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628/ /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395384.4037545-30426-173101870817628/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible._5m95o75",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209 `" && echo ansible-tmp-1604395384.5853963-30452-262495721152209="` echo /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpns_q3lb9 TO /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209/ /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395384.5853963-30452-262495721152209/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963 `" && echo ansible-tmp-1604395384.961441-30488-265800888406963="` echo /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmppq460zpu TO /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963/ /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395384.961441-30488-265800888406963/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.052707",
    "end": "2020-11-03 09:23:05.146059",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:23:05.093352",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171 `" && echo ansible-tmp-1604395385.2077138-30519-158735055600171="` echo /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp27ajf3yn TO /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171/ /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395385.2077138-30519-158735055600171/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694 `" && echo ansible-tmp-1604395386.064268-30559-77888684766694="` echo /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmposgumgb9 TO /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694/ /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395386.064268-30559-77888684766694/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476 `" && echo ansible-tmp-1604395386.704536-30587-278567060543476="` echo /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpi5dv518_ TO /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476/ /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395386.704536-30587-278567060543476/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813 `" && echo ansible-tmp-1604395387.5398567-30627-238456622702813="` echo /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp6gj0ha5s TO /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813/ /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395387.5398567-30627-238456622702813/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168 `" && echo ansible-tmp-1604395388.2028198-30656-169401179420168="` echo /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpu2ztq8ll TO /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168/ /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395388.2028198-30656-169401179420168/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace supplychain-net already exists] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729 `" && echo ansible-tmp-1604395388.7506292-30686-158867883856729="` echo /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmprxxax2kl TO /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729/ /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395388.7506292-30686-158867883856729/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "supplychain-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149 `" && echo ansible-tmp-1604395389.5537796-30724-81460012993149="` echo /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp5pau_a5y TO /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149/ /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395389.5537796-30724-81460012993149/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340 `" && echo ansible-tmp-1604395389.7615342-30750-223244496742340="` echo /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1w1mnhll TO /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/ /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp2iq3huw2/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/ /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1soy32bm TO /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/ /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "764a9d412ee8c0bb2dcd3c55cdb72e2d1ff9d691",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "764a9d412ee8c0bb2dcd3c55cdb72e2d1ff9d691",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cf1425b79e968b40d5e1e2117e221f20",
    "mode": "0644",
    "owner": "root",
    "size": 64,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395389.7615342-30750-223244496742340/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148 `" && echo ansible-tmp-1604395390.4359286-30792-65979038993148="` echo /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpkb943xt8 TO /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148/ /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395390.4359286-30792-65979038993148/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544 `" && echo ansible-tmp-1604395390.6426904-30818-243501220805544="` echo /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpw6oavt6v TO /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/ /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbyxz1moh/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/ /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp6nkj3iob TO /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/ /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9d128be9605e45ba4716f4ba8a39ae745f14db79",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9d128be9605e45ba4716f4ba8a39ae745f14db79",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "c5daec1c3c097342e8e412880e157dd4",
    "mode": "0644",
    "owner": "root",
    "size": 97,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395390.6426904-30818-243501220805544/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921 `" && echo ansible-tmp-1604395391.039746-30860-260571313655921="` echo /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbcd_oxi9 TO /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921/ /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395391.039746-30860-260571313655921/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655 `" && echo ansible-tmp-1604395391.2445965-30886-139874376306655="` echo /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp_92_mwf6 TO /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/ /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmplg3g3gia/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/ /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbprlxzuq TO /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/ /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a1900901e2836334aa654bf71990b01c437a0557",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a1900901e2836334aa654bf71990b01c437a0557",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "07219cd1d901d8c368736759bd1f8b18",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395391.2445965-30886-139874376306655/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650 `" && echo ansible-tmp-1604395391.6543727-30928-193531983980650="` echo /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpvr3qcwku TO /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650/ /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395391.6543727-30928-193531983980650/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534 `" && echo ansible-tmp-1604395391.8570502-30954-5059836049534="` echo /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpv2wbzc_f TO /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/ /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmptblim4fk/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/ /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1qpklze3 TO /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/ /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a367bfe0512ceff5f1b8540d1fe765d8ddb132f1",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a367bfe0512ceff5f1b8540d1fe765d8ddb132f1",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "e260abafd7db9e5d5765a4c9a8db9574",
    "mode": "0644",
    "owner": "root",
    "size": 332,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395391.8570502-30954-5059836049534/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847 `" && echo ansible-tmp-1604395392.2540035-30996-175125965392847="` echo /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp0xu9enno TO /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847/ /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395392.2540035-30996-175125965392847/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850 `" && echo ansible-tmp-1604395392.4894114-31022-246179142354850="` echo /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1l5e4l4q TO /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850/ /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395392.4894114-31022-246179142354850/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:local\n",
    "delta": "0:00:08.693984",
    "end": "2020-11-03 09:23:21.315943",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:local\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:23:12.621959",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   7cd38d3f..7f4853e7  HEAD -> local",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   7cd38d3f..7f4853e7  HEAD -> local"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.DS_Store\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocker-compose.yaml\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/.yamllint\nM\tplatforms/hyperledger-fabric/configuration/README.md\nM\tplatforms/hyperledger-fabric/configuration/add-new-channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/add-organization.yaml\nM\tplatforms/hyperledger-fabric/configuration/add-peer.yaml\nM\tplatforms/hyperledger-fabric/configuration/chaincode-install-instantiate.yaml\nM\tplatforms/hyperledger-fabric/configuration/chaincode-upgrade.yaml\nM\tplatforms/hyperledger-fabric/configuration/create-join-channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/deploy-network.yaml\nM\tplatforms/hyperledger-fabric/configuration/generate-artefacts-deploy.yaml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/cleanup.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/converge.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/molecule.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/prepare.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/verify.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/cleanup.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/converge.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/molecule.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/prepare.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/verify.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/cleanup.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/converge.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/molecule.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/prepare.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/verify.yml\nM\tplatforms/hyperledger-fabric/configuration/openssl.conf\nM\tplatforms/hyperledger-fabric/configuration/reset-network.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/templates/organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/README.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/cli_pod/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrderer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrg.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxProfile.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxinit.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/README.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/create_json.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/templates/organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/peers/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/peers/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awsorderer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awspeer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azureorderer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azurepeer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/mini_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/meta/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/README.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/meta/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/anchorpeer_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-orderer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-peer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-tools.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/cli.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/create_channel_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/helm_component.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/install_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/instantiate_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/invoke_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/join_channel_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/orderernode.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/upgrade_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/value_peer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/zkkafka.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/default.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/existing_peer_cli.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/namespace_component.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/orderer_cli.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/vault_auth.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_create_cli.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_fetch_role.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_sign_and_update.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_update_channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/peercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/orderer-ro.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/peer-ro.tpl\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-new-channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-organization.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv-add-peer.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2-raft.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-minikube.yaml\n[local 7f4853e7] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 10911 insertions(+), 36438 deletions(-)\n rewrite console.out (82%)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".DS_Store",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docker-compose.yaml",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/.yamllint",
        "M\tplatforms/hyperledger-fabric/configuration/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-install-instantiate.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-upgrade.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/create-join-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/deploy-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/generate-artefacts-deploy.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/openssl.conf",
        "M\tplatforms/hyperledger-fabric/configuration/reset-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/cli_pod/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrg.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxProfile.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxinit.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/create_json.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awsorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awspeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azureorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azurepeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/mini_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/anchorpeer_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-orderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-tools.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/create_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/helm_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/install_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/instantiate_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/invoke_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/join_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/orderernode.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/upgrade_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/value_peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/zkkafka.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/default.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/existing_peer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/namespace_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/orderer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/vault_auth.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_create_cli.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_fetch_role.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_sign_and_update.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_update_channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/orderer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/peer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv-add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2-raft.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-minikube.yaml",
        "[local 7f4853e7] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 10911 insertions(+), 36438 deletions(-)",
        " rewrite console.out (82%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".DS_Store",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docker-compose.yaml",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/.yamllint",
        "M\tplatforms/hyperledger-fabric/configuration/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-install-instantiate.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-upgrade.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/create-join-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/deploy-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/generate-artefacts-deploy.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/openssl.conf",
        "M\tplatforms/hyperledger-fabric/configuration/reset-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/cli_pod/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrg.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxProfile.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxinit.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/create_json.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awsorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awspeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azureorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azurepeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/mini_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/anchorpeer_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-orderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-tools.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/create_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/helm_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/install_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/instantiate_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/invoke_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/join_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/orderernode.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/upgrade_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/value_peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/zkkafka.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/default.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/existing_peer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/namespace_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/orderer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/vault_auth.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_create_cli.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_fetch_role.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_sign_and_update.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_update_channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/orderer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/peer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv-add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2-raft.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-minikube.yaml",
        "[local 7f4853e7] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 10911 insertions(+), 36438 deletions(-)",
        " rewrite console.out (82%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/supplychain/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   7cd38d3f..7f4853e7  HEAD -> local"
    ]
}

TASK [Checking for the supplychain-net-role-tokenreview-binding] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding supplychain-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding supplychain-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951 `" && echo ansible-tmp-1604395401.570237-31074-86525386507951="` echo /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp79b1fgyl TO /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951/ /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395401.570237-31074-86525386507951/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "supplychain-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "e8e69174d8fae5811887caa7cabb9236d45efc2d",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"e8e69174d8fae5811887caa7cabb9236d45efc2d\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.lYGVO-vPz2-mHUjOPL2xBXW8kC227Dljm5laKHKbyYA\"},\"name\":\"supplychain-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"supplychain-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T06:59:47Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.lYGVO-vPz2-mHUjOPL2xBXW8kC227Dljm5laKHKbyYA"
                },
                "name": "supplychain-net-role-tokenreview-binding",
                "resourceVersion": "353267",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/supplychain-net-role-tokenreview-binding",
                "uid": "b89aea82-0494-441d-9a22-9cf0de129356"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "supplychain-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding supplychain-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding supplychain-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058 `" && echo ansible-tmp-1604395402.445869-31114-213823271311058="` echo /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpji0t_9t2 TO /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058/ /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395402.445869-31114-213823271311058/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "supplychain-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946 `" && echo ansible-tmp-1604395438.0513449-31114-62562594632946="` echo /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxoyrsrdm TO /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946/ /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395438.0513449-31114-62562594632946/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "supplychain-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678 `" && echo ansible-tmp-1604395473.704347-31114-75383053499678="` echo /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpyk7k9y9m TO /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678/ /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395473.704347-31114-75383053499678/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "supplychain-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693 `" && echo ansible-tmp-1604395509.3206663-31114-178573378542693="` echo /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp677urezj TO /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693/ /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395509.3206663-31114-178573378542693/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "supplychain-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1815564976fa3e9356fc8e55f0ca4c4187b7724d",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1815564976fa3e9356fc8e55f0ca4c4187b7724d\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.MFg5uZwHcGzbStKA4ztT3-b7qyaB4kb9Wn4JnwU2NLU\"},\"name\":\"vault-reviewer\",\"namespace\":\"supplychain-net\"}}\n"
                },
                "creationTimestamp": "2020-11-03T09:24:41Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.MFg5uZwHcGzbStKA4ztT3-b7qyaB4kb9Wn4JnwU2NLU"
                },
                "name": "vault-reviewer",
                "namespace": "supplychain-net",
                "resourceVersion": "1732942",
                "selfLink": "/api/v1/namespaces/supplychain-net/serviceaccounts/vault-reviewer",
                "uid": "e76c056c-c19c-4e98-8087-fa78fc9db7bf"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-7zr6l"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in supplychain-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981 `" && echo ansible-tmp-1604395510.129755-31229-194487566013981="` echo /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmprkak97vy TO /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981/ /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395510.129755-31229-194487566013981/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "supplychain-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "c3d1e3a475c54a9b0e0a6e51942fe67b14347ea4",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"c3d1e3a475c54a9b0e0a6e51942fe67b14347ea4\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.6D4FfSLgVTiwRhBOG5vou1CBcdY68AebTCpdTU6OJlk\"},\"name\":\"vault-auth\",\"namespace\":\"supplychain-net\"}}\n"
                },
                "creationTimestamp": "2020-11-03T09:24:41Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.6D4FfSLgVTiwRhBOG5vou1CBcdY68AebTCpdTU6OJlk"
                },
                "name": "vault-auth",
                "namespace": "supplychain-net",
                "resourceVersion": "1732940",
                "selfLink": "/api/v1/namespaces/supplychain-net/serviceaccounts/vault-auth",
                "uid": "ba5abeba-4156-4329-929c-abb9cdc668a4"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-q4dbx"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360 `" && echo ansible-tmp-1604395510.8123422-31259-93706448266360="` echo /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpqdkh9j7j TO /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360/ /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395510.8123422-31259-93706448266360/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857 `" && echo ansible-tmp-1604395511.6333694-31297-229160517218857="` echo /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpzb9amgs0 TO /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857/ /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395511.6333694-31297-229160517218857/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666 `" && echo ansible-tmp-1604395511.8400545-31323-132170302093666="` echo /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpjkifgcia TO /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/ /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp7uh22b15/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/ /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpq2q8r1ey TO /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/ /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395511.8400545-31323-132170302093666/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979 `" && echo ansible-tmp-1604395512.2341027-31365-50498140845979="` echo /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmps0o76tgb TO /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979/ /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395512.2341027-31365-50498140845979/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443 `" && echo ansible-tmp-1604395512.438547-31391-239647351655443="` echo /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxeq0zviy TO /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/ /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpsxnxex3x/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/ /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpepmnuwtm TO /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/ /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395512.438547-31391-239647351655443/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777 `" && echo ansible-tmp-1604395512.8347337-31433-147530447883777="` echo /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpgpn79pox TO /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777/ /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395512.8347337-31433-147530447883777/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860 `" && echo ansible-tmp-1604395513.073382-31459-83045864829860="` echo /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpdhflm76z TO /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/ /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpkd4m4vd9/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/ /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmprm3hcx1o TO /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/ /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395513.073382-31459-83045864829860/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624 `" && echo ansible-tmp-1604395513.4775562-31501-176947638221624="` echo /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp3ir8viz_ TO /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624/ /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395513.4775562-31501-176947638221624/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037 `" && echo ansible-tmp-1604395513.6855314-31527-36654628260037="` echo /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpgow14ebw TO /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/ /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1g3ssddq/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/ /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpgicyxicd TO /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/ /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395513.6855314-31527-36654628260037/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975 `" && echo ansible-tmp-1604395514.0818849-31569-43918475087975="` echo /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp47t3cn5_ TO /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975/ /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395514.0818849-31569-43918475087975/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849 `" && echo ansible-tmp-1604395514.2862816-31595-251282955320849="` echo /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmppudva30z TO /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849/ /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395514.2862816-31595-251282955320849/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:local\n",
    "delta": "0:00:03.159854",
    "end": "2020-11-03 09:25:17.575961",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:local\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:25:14.416107",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   7f4853e7..673880a0  HEAD -> local",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   7f4853e7..673880a0  HEAD -> local"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.DS_Store\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocker-compose.yaml\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/.yamllint\nM\tplatforms/hyperledger-fabric/configuration/README.md\nM\tplatforms/hyperledger-fabric/configuration/add-new-channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/add-organization.yaml\nM\tplatforms/hyperledger-fabric/configuration/add-peer.yaml\nM\tplatforms/hyperledger-fabric/configuration/chaincode-install-instantiate.yaml\nM\tplatforms/hyperledger-fabric/configuration/chaincode-upgrade.yaml\nM\tplatforms/hyperledger-fabric/configuration/create-join-channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/deploy-network.yaml\nM\tplatforms/hyperledger-fabric/configuration/generate-artefacts-deploy.yaml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/cleanup.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/converge.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/molecule.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/prepare.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/crypto/verify.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/cleanup.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/converge.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/molecule.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/prepare.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/default/verify.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/cleanup.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/converge.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/molecule.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/prepare.yml\nM\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/verify.yml\nM\tplatforms/hyperledger-fabric/configuration/openssl.conf\nM\tplatforms/hyperledger-fabric/configuration/reset-network.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/templates/organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/README.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/cli_pod/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrderer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrg.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxProfile.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxinit.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/README.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/create_json.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/templates/organisation_script.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/peers/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/peers/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awsorderer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awspeer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azureorderer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azurepeer_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/mini_sc.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/meta/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/README.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/meta/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/anchorpeer_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-orderer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-peer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-tools.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/cli.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/create_channel_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/helm_component.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/install_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/instantiate_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/invoke_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/join_channel_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/orderernode.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/upgrade_chaincode_job.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/value_peer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/zkkafka.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/helm_component/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/default.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/existing_peer_cli.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/namespace_component.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/orderer_cli.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/vault_auth.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_create_cli.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_fetch_role.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/vars/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_sign_and_update.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_update_channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/peercheck.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/valuefile.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/Readme.md\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/orderer-ro.tpl\nM\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/peer-ro.tpl\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-new-channel.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-organization.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv-add-peer.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2-raft.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2.yaml\nM\tplatforms/hyperledger-fabric/configuration/samples/network-minikube.yaml\n[local 673880a0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1508 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".DS_Store",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docker-compose.yaml",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/.yamllint",
        "M\tplatforms/hyperledger-fabric/configuration/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-install-instantiate.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-upgrade.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/create-join-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/deploy-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/generate-artefacts-deploy.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/openssl.conf",
        "M\tplatforms/hyperledger-fabric/configuration/reset-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/cli_pod/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrg.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxProfile.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxinit.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/create_json.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awsorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awspeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azureorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azurepeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/mini_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/anchorpeer_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-orderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-tools.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/create_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/helm_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/install_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/instantiate_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/invoke_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/join_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/orderernode.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/upgrade_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/value_peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/zkkafka.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/default.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/existing_peer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/namespace_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/orderer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/vault_auth.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_create_cli.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_fetch_role.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_sign_and_update.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_update_channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/orderer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/peer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv-add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2-raft.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-minikube.yaml",
        "[local 673880a0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1508 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".DS_Store",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docker-compose.yaml",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/.yamllint",
        "M\tplatforms/hyperledger-fabric/configuration/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-install-instantiate.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/chaincode-upgrade.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/create-join-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/deploy-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/generate-artefacts-deploy.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/crypto/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/default/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/cleanup.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/converge.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/molecule.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/prepare.yml",
        "M\tplatforms/hyperledger-fabric/configuration/molecule/pre-vault-setup/verify.yml",
        "M\tplatforms/hyperledger-fabric/configuration/openssl.conf",
        "M\tplatforms/hyperledger-fabric/configuration/reset-network.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/add_new_peer/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-server/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/install/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/instantiate/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/invoke/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/chaincode/upgrade/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/cli_pod/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxOrg.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxProfile.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/configtx/templates/configtxinit.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/orderer_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/crypto_script/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/create_json.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/templates/organisation_script.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/new_organization/create_block/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/orderers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/peers/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awsorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/awspeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azureorderer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/azurepeer_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/templates/mini_sc.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/create/storageclass/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/flux_releases/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/README.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/genesis/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/gitops_files/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/meta/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/delete/vault_secrets/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/anchorpeer_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-orderer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/ca-tools.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/create_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/helm_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/install_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/instantiate_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/invoke_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/join_channel_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/orderernode.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/upgrade_chaincode_job.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/value_peer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/templates/zkkafka.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/helm_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/default.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/existing_peer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/namespace_component.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/orderer_cli.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/vault_auth.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_create_cli.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/tasks/nested_fetch_role.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/fetch/vars/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_sign_and_update.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/nested_update_channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/peercheck.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/config_block/sign_and_update/tasks/valuefile.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/get_crypto/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/Readme.md",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/orderer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/templates/peer-ro.tpl",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-new-channel.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabric-add-organization.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv-add-peer.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2-raft.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-fabricv2.yaml",
        "M\tplatforms/hyperledger-fabric/configuration/samples/network-minikube.yaml",
        "[local 673880a0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1508 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   7f4853e7..673880a0  HEAD -> local"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495 `" && echo ansible-tmp-1604395517.8251112-31647-211239096274495="` echo /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpaupegvof TO /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495/ /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395517.8251112-31647-211239096274495/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.nY1jCAbFWWUIUzYOLd7xKhyFhQDaN7pdlsrvGTqenH0\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.nY1jCAbFWWUIUzYOLd7xKhyFhQDaN7pdlsrvGTqenH0"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "375148",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887 `" && echo ansible-tmp-1604395518.7038686-31687-245572929798887="` echo /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmppnqph5tw TO /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887/ /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395518.7038686-31687-245572929798887/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344 `" && echo ansible-tmp-1604395554.302685-31687-189725906546344="` echo /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmplqetx06l TO /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344/ /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395554.302685-31687-189725906546344/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614 `" && echo ansible-tmp-1604395589.94682-31687-53807696614614="` echo /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp2rj3o8mr TO /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614/ /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395589.94682-31687-53807696614614/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911 `" && echo ansible-tmp-1604395625.5550787-31687-253572401692911="` echo /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbt8t2ddf TO /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911/ /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395625.5550787-31687-253572401692911/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dt5M0QYqk7emylM_SdOi0FuFA3imtPNxUZEey6qcH-c\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-03T09:26:41Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dt5M0QYqk7emylM_SdOi0FuFA3imtPNxUZEey6qcH-c"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "1733255",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "5ce91c29-b0ab-4c18-b0b9-8964d66f1d9d"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-jtwff"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255 `" && echo ansible-tmp-1604395626.3592231-31801-252171359535255="` echo /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp4ht4bu_m TO /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255/ /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395626.3592231-31801-252171359535255/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.ggnV0EceKl1NdrttFZwl3F2G19TIL1jGHYOjJaoafBg\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-03T09:26:41Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.ggnV0EceKl1NdrttFZwl3F2G19TIL1jGHYOjJaoafBg"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "1733253",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "98eedb18-57cc-4301-b00e-b5df19ecc4ed"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-28zsf"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace supplychain-net to be created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751 `" && echo ansible-tmp-1604395627.2384577-31835-154683276735751="` echo /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpn2fyr50v TO /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751/ /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395627.2384577-31835-154683276735751/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "supplychain-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.9cs-g7peoJr7Nr6uniQUXwfoVuVAnY6q68mKXSsb3ec\"},\"name\":\"supplychain-net\"}}\n"
                },
                "creationTimestamp": "2020-11-03T09:24:41Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.9cs-g7peoJr7Nr6uniQUXwfoVuVAnY6q68mKXSsb3ec"
                },
                "name": "supplychain-net",
                "resourceVersion": "1732933",
                "selfLink": "/api/v1/namespaces/supplychain-net",
                "uid": "993a07b8-2845-4685-b3dd-b30c4e09c79e"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377 `" && echo ansible-tmp-1604395627.9882839-31869-244094988219377="` echo /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmplf2jq2aq TO /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377/ /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395627.9882839-31869-244094988219377/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323 `" && echo ansible-tmp-1604395628.176811-31895-261478223771323="` echo /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpx_a_193t TO /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323/ /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395628.176811-31895-261478223771323/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062 `" && echo ansible-tmp-1604395628.578045-31933-32922459545062="` echo /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp6hdt9qqg TO /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062/ /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395628.578045-31933-32922459545062/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.081037",
    "end": "2020-11-03 09:27:08.789564",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:08.708527",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.081037",
            "end": "2020-11-03 09:27:08.789564",
            "failed": false,
            "rc": 0,
            "start": "2020-11-03 09:27:08.708527",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"supplychain-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549 `" && echo ansible-tmp-1604395629.0217037-31979-118130994714549="` echo /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpdgs5wnw9 TO /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549/ /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395629.0217037-31979-118130994714549/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"supplychain-net-auth\" kubernetes\n",
    "delta": "0:00:00.079254",
    "end": "2020-11-03 09:27:09.231649",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"supplychain-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:09.152395",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: supplychain-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: supplychain-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177 `" && echo ansible-tmp-1604395629.295213-32015-82211717360177="` echo /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp3c_xl5hj TO /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177/ /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395629.295213-32015-82211717360177/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/supplychain-net.ca.cert\"\n",
    "delta": "0:00:00.254564",
    "end": "2020-11-03 09:27:09.680700",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/supplychain-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:09.426136",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628 `" && echo ansible-tmp-1604395629.7507198-32056-149737813695628="` echo /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpkbm9c_jp TO /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628/ /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395629.7507198-32056-149737813695628/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n supplychain-net vault-reviewer -o jsonpath={.secrets[0].name}) -n supplychain-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/supplychain-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/supplychain-net.ca.cert\"\n",
    "delta": "0:00:00.295257",
    "end": "2020-11-03 09:27:10.178247",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n supplychain-net vault-reviewer -o jsonpath={.secrets[0].name}) -n supplychain-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/supplychain-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/supplychain-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:09.882990",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/supplychain-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/supplychain-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890 `" && echo ansible-tmp-1604395630.4014387-32117-201285858649890="` echo /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpe536nalh TO /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890/ /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395630.4014387-32117-201285858649890/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-supplychain-net-ro\n",
    "delta": "0:00:00.047349",
    "end": "2020-11-03 09:27:10.579349",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-supplychain-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-03 09:27:10.532000",
    "stderr": "No policy named: vault-crypto-orderer-supplychain-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-supplychain-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576 `" && echo ansible-tmp-1604395630.66909-32153-72014175745576="` echo /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpn0dcxh6o TO /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/ /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmprcxh88fn/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/ /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp0rpqh799 TO /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/ /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "6087773cae99db361c62dac35b5347dedca6aa13",
    "dest": "./build/vault-crypto-supplychain-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "6087773cae99db361c62dac35b5347dedca6aa13",
            "content": null,
            "dest": "./build/vault-crypto-supplychain-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "0c8acb2419d91f1c68386e8f7b956152",
    "mode": "0644",
    "owner": "root",
    "size": 305,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395630.66909-32153-72014175745576/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617 `" && echo ansible-tmp-1604395631.0558548-32196-224893155640617="` echo /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpjiq_n69g TO /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617/ /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395631.0558548-32196-224893155640617/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-supplychain-net-ro policy=\"@./build/vault-crypto-supplychain-net-ro.hcl\"\n",
    "delta": "0:00:00.046187",
    "end": "2020-11-03 09:27:11.233245",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-supplychain-net-ro policy=\"@./build/vault-crypto-supplychain-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:11.187058",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-supplychain-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-supplychain-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503 `" && echo ansible-tmp-1604395631.317027-32232-109289537096503="` echo /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpiketten4 TO /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503/ /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395631.317027-32232-109289537096503/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/supplychain-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=supplychain-net policies=\"vault-crypto-orderer-supplychain-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.042935",
    "end": "2020-11-03 09:27:11.492982",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/supplychain-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=supplychain-net policies=\"vault-crypto-orderer-supplychain-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:11.450047",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/supplychain-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/supplychain-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076 `" && echo ansible-tmp-1604395631.740841-32277-151378032403076="` echo /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp2oovk3xa TO /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076/ /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395631.740841-32277-151378032403076/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "supplychain-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461 `" && echo ansible-tmp-1604395632.3652775-32305-22581757454461="` echo /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpap48x_xq TO /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461/ /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395632.3652775-32305-22581757454461/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n supplychain-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.106901",
    "end": "2020-11-03 09:27:12.603034",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n supplychain-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:12.496133",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591 `" && echo ansible-tmp-1604395632.8016286-32341-121585884583591="` echo /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp32i0409k TO /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591/ /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395632.8016286-32341-121585884583591/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.CL9bktjD52BB-vURVAD_VarAJhfU2NSS_xK3EDF_cDc\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-03T09:26:41Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.CL9bktjD52BB-vURVAD_VarAJhfU2NSS_xK3EDF_cDc"
                },
                "name": "carrier-net",
                "resourceVersion": "1733246",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "677e4c86-d271-46d9-ad37-053ebf39444a"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428 `" && echo ansible-tmp-1604395633.5310318-32375-64868623246428="` echo /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpbk_0go9y TO /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428/ /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395633.5310318-32375-64868623246428/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604395628.3097699,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604395630.9578094,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4565,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604395630.9578094,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "683400880",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095 `" && echo ansible-tmp-1604395633.9538155-32417-160365109774095="` echo /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1qda3jn4 TO /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095/ /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395633.9538155-32417-160365109774095/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.042847",
    "end": "2020-11-03 09:27:14.127274",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:14.084427",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"supplychain-net-auth/\"\n\"token/\"",
    "stdout_lines": [
        "\"supplychain-net-auth/\"",
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.042847",
            "end": "2020-11-03 09:27:14.127274",
            "failed": false,
            "rc": 0,
            "start": "2020-11-03 09:27:14.084427",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"supplychain-net-auth/\"\n\"token/\"",
            "stdout_lines": [
                "\"supplychain-net-auth/\"",
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="supplychain-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"supplychain-net-auth/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304 `" && echo ansible-tmp-1604395634.3581145-32464-117690560810304="` echo /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpibtxci8e TO /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304/ /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395634.3581145-32464-117690560810304/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.044114",
    "end": "2020-11-03 09:27:14.534129",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:14.490015",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007 `" && echo ansible-tmp-1604395634.5997565-32499-164317576380007="` echo /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpomvapbr_ TO /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007/ /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395634.5997565-32499-164317576380007/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.196715",
    "end": "2020-11-03 09:27:14.926418",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:14.729703",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165 `" && echo ansible-tmp-1604395634.9958665-32541-42420969527165="` echo /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmppka8j4xm TO /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165/ /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395634.9958665-32541-42420969527165/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.316141",
    "end": "2020-11-03 09:27:15.442258",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:15.126117",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136 `" && echo ansible-tmp-1604395635.6512036-32603-183390999337136="` echo /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpus7oe2vl TO /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136/ /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395635.6512036-32603-183390999337136/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.045973",
    "end": "2020-11-03 09:27:15.828119",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-03 09:27:15.782146",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519 `" && echo ansible-tmp-1604395635.953395-32642-258121313336519="` echo /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp7s5bzt1d TO /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/ /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpfh5hib62/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/ /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpo2zo7yg_ TO /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/ /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395635.953395-32642-258121313336519/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111 `" && echo ansible-tmp-1604395636.3144617-32682-153625794338111="` echo /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp2goohprf TO /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111/ /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395636.3144617-32682-153625794338111/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.040274",
    "end": "2020-11-03 09:27:16.484104",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:16.443830",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168 `" && echo ansible-tmp-1604395636.5531883-32718-111294248656168="` echo /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp1_dpwdfd TO /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168/ /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395636.5531883-32718-111294248656168/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.044257",
    "end": "2020-11-03 09:27:16.741245",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:16.696988",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623 `" && echo ansible-tmp-1604395636.990922-32764-264785838684623="` echo /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp14m7gw43 TO /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623/ /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395636.990922-32764-264785838684623/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141 `" && echo ansible-tmp-1604395637.6089475-324-202738355775141="` echo /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmppjoc7csh TO /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141/ /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395637.6089475-324-202738355775141/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.137522",
    "end": "2020-11-03 09:27:17.876809",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:17.739287",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class supplychainsc already exists] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass supplychainsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311 `" && echo ansible-tmp-1604395638.1608996-360-20831868384311="` echo /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpd0t3wpme TO /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311/ /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395638.1608996-360-20831868384311/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "supplychainsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "561507a628b179ebd66840d514405746bcfc2f0c",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"561507a628b179ebd66840d514405746bcfc2f0c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.q0EqliYN1RxadOo2q276T0ujnVXSzuYNBnqKic-m-n8\"},\"name\":\"supplychainsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:25:50Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.q0EqliYN1RxadOo2q276T0ujnVXSzuYNBnqKic-m-n8"
                },
                "name": "supplychainsc",
                "resourceVersion": "375766",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/supplychainsc",
                "uid": "98a46c6a-aa12-4639-9547-d0bf8a464749"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "561507a628b179ebd66840d514405746bcfc2f0c",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"561507a628b179ebd66840d514405746bcfc2f0c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.q0EqliYN1RxadOo2q276T0ujnVXSzuYNBnqKic-m-n8\"},\"name\":\"supplychainsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:25:50Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.q0EqliYN1RxadOo2q276T0ujnVXSzuYNBnqKic-m-n8"
                        },
                        "name": "supplychainsc",
                        "resourceVersion": "375766",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/supplychainsc",
                        "uid": "98a46c6a-aa12-4639-9547-d0bf8a464749"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of supplychainsc storage class] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580 `" && echo ansible-tmp-1604395639.134688-408-239594193124580="` echo /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpytce51yd TO /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580/ /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395639.134688-408-239594193124580/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008 `" && echo ansible-tmp-1604395640.1979258-456-176564227675008="` echo /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmppy72isj8 TO /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008/ /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395640.1979258-456-176564227675008/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.supplychain-net-cert.pem secret/crypto/ordererOrganizations/supplychain-net/ca\n",
    "delta": "0:00:00.099634",
    "end": "2020-11-03 09:27:20.428271",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.supplychain-net-cert.pem secret/crypto/ordererOrganizations/supplychain-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-03 09:27:20.328637",
    "stderr": "No value found at secret/crypto/ordererOrganizations/supplychain-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/supplychain-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/supplychain-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427 `" && echo ansible-tmp-1604395640.543126-492-236449742869427="` echo /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpx_6oopj8 TO /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427/ /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395640.543126-492-236449742869427/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188 `" && echo ansible-tmp-1604395640.7338064-518-165201451252188="` echo /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxf4zypjt TO /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188/ /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395640.7338064-518-165201451252188/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915 `" && echo ansible-tmp-1604395641.038566-552-116748402837915="` echo /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpstc_9_vb TO /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915/ /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395641.038566-552-116748402837915/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca/supplychain-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699 `" && echo ansible-tmp-1604395641.2313082-578-102842728372699="` echo /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp8zycworu TO /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699/ /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395641.2313082-578-102842728372699/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/supplychain-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out supplychain-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key supplychain-net-CA.key -days 1024 -out ca.supplychain-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net\"\n",
    "delta": "0:00:00.009329",
    "end": "2020-11-03 09:27:21.372348",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/supplychain-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out supplychain-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key supplychain-net-CA.key -days 1024 -out ca.supplychain-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:21.363019",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833 `" && echo ansible-tmp-1604395641.4365315-607-27898257458833="` echo /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp2v44maao TO /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833/ /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395641.4365315-607-27898257458833/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/supplychain-net/ca ca.supplychain-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/supplychain-net/ca/ca.supplychain-net-cert.pem\")\" supplychain-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/supplychain-net/ca/supplychain-net-CA.key\")\"\n",
    "delta": "0:00:00.080100",
    "end": "2020-11-03 09:27:21.647315",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/supplychain-net/ca ca.supplychain-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/supplychain-net/ca/ca.supplychain-net-cert.pem\")\" supplychain-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/supplychain-net/ca/supplychain-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:21.567215",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/supplychain-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/supplychain-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325 `" && echo ansible-tmp-1604395641.7160535-644-92634387079325="` echo /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpz2__1noi TO /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325/ /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395641.7160535-644-92634387079325/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/supplychain-net/ca/supplychain\n",
    "delta": "0:00:00.054593",
    "end": "2020-11-03 09:27:21.901102",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/supplychain-net/ca/supplychain\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-03 09:27:21.846509",
    "stderr": "No value found at secret/credentials/supplychain-net/ca/supplychain",
    "stderr_lines": [
        "No value found at secret/credentials/supplychain-net/ca/supplychain"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489 `" && echo ansible-tmp-1604395641.970492-678-190993373757489="` echo /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpr95k7_bq TO /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489/ /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395641.970492-678-190993373757489/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/supplychain-net/ca/supplychain user=\"supplychain-adminpw\"\n",
    "delta": "0:00:00.042089",
    "end": "2020-11-03 09:27:22.144264",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/supplychain-net/ca/supplychain user=\"supplychain-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:22.102175",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/supplychain-net/ca/supplychain",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/supplychain-net/ca/supplychain"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388 `" && echo ansible-tmp-1604395642.2113097-714-88383632892388="` echo /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmplxv9r88i TO /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388/ /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395642.2113097-714-88383632892388/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-supplychain-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785 `" && echo ansible-tmp-1604395642.8510454-742-70481372218785="` echo /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpzr5aakcv TO /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785/ /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395642.8510454-742-70481372218785/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-supplychain-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/supplychain-net/ca/ca.supplychain-net-cert.pem --key=./build/crypto-config/ordererOrganizations/supplychain-net/ca/supplychain-net-CA.key -n default\n",
    "delta": "0:00:00.113748",
    "end": "2020-11-03 09:27:23.099605",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-supplychain-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/supplychain-net/ca/ca.supplychain-net-cert.pem --key=./build/crypto-config/ordererOrganizations/supplychain-net/ca/supplychain-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:22.985857",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-supplychain-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-supplychain-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403 `" && echo ansible-tmp-1604395643.245342-777-150557127259403="` echo /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp8yj9mktm TO /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403/ /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395643.245342-777-150557127259403/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544 `" && echo ansible-tmp-1604395643.4646225-803-65163127897544="` echo /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpjc26uwwv TO /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544/ /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395643.4646225-803-65163127897544/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for supplychain-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400 `" && echo ansible-tmp-1604395643.6690097-829-8789409540400="` echo /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpo_261jnx TO /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/ /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpotnp9ir4/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/ /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpwg4db8cd TO /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/ /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "2361beea6f262aa055e4ce5b67a6c1a7e44e47d2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "2361beea6f262aa055e4ce5b67a6c1a7e44e47d2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "80bbae7f77b8d1eb6d2459264fac49e2",
    "mode": "0644",
    "owner": "root",
    "size": 1322,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395643.6690097-829-8789409540400/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635 `" && echo ansible-tmp-1604395644.100103-871-196600229213635="` echo /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpn_qrjp_6 TO /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635/ /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395644.100103-871-196600229213635/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml"
        }
    },
    "stat": {
        "atime": 1604395643.9700036,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "2361beea6f262aa055e4ce5b67a6c1a7e44e47d2",
        "ctime": 1604395643.9740038,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4634,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604395643.8380017,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1322,
        "uid": 0,
        "version": "600617017",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956 `" && echo ansible-tmp-1604395644.3675115-901-120457888523956="` echo /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmparjhqn1q TO /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956/ /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395644.3675115-901-120457888523956/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568 `" && echo ansible-tmp-1604395644.560528-927-267420350030568="` echo /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp6mnn884j TO /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568/ /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395644.560528-927-267420350030568/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "supplychain-net-ca",
            "namespace": "supplychain-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "local"
            },
            "releaseName": "supplychain-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "supplychain-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "supplychain-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "supplychainsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "supplychain-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/supplychain-net/ca/supplychain?user",
                    "secretcert": "secret/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602 `" && echo ansible-tmp-1604395644.9113257-961-281018691486602="` echo /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpwe8hf855 TO /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/ /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmp9k44j_gd TO /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/ /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpj_ogeg48 TO /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/ /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e99bde4feb36ccd25271ce7fdad8309459236ddd",
    "dest": "./build/test/supplychain-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp9k44j_gd",
            "attributes": null,
            "backup": false,
            "checksum": "e99bde4feb36ccd25271ce7fdad8309459236ddd",
            "content": null,
            "dest": "./build/test/supplychain-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2549c037deb1c981cd209c01603f83a9",
    "mode": "0644",
    "owner": "root",
    "size": 883,
    "src": "/root/.ansible/tmp/ansible-tmp-1604395644.9113257-961-281018691486602/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947 `" && echo ansible-tmp-1604395645.2826772-1001-201584330792947="` echo /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpswxvd3e0 TO /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947/ /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395645.2826772-1001-201584330792947/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/supplychain-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.057910",
    "end": "2020-11-03 09:27:25.472466",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/supplychain-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-03 09:27:25.414556",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174 `" && echo ansible-tmp-1604395645.6212666-1037-161709676561174="` echo /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpxhxxgs45 TO /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174/ /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604395645.6212666-1037-161709676561174/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604395645.835701-1063-230836837586464 `" && echo ansible-tmp-1604395645.835701-1063-230836837586464="` echo /root/.ansible/tmp/ansible-tmp-1604395645.835701-1063-230836837586464 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-28588nwachy04/tmpesys51mw TO /root/.ansible/tmp/ansible-tmp-1604395645.835701-1063-230836837586464/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604395645.835701-1063-230836837586464/ /root/.ansible/tmp/ansible-tmp-1604395645.835701-1063-230836837586464/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604395645.835701-1063-230836837586464/AnsiballZ_command.py && sleep 0'
