ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262 `" && echo ansible-tmp-1604678792.9714067-26945-86372754347262="` echo /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2a7oynlg TO /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262/ /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678792.9714067-26945-86372754347262/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098 `" && echo ansible-tmp-1604678793.9052362-26997-254365907484098="` echo /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpg8o3lhw_ TO /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098/ /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678793.9052362-26997-254365907484098/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.jre1aiib",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200 `" && echo ansible-tmp-1604678794.2239323-27023-106013564041200="` echo /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp5rqk9dyl TO /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200/ /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678794.2239323-27023-106013564041200/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338 `" && echo ansible-tmp-1604678794.7128832-27059-33668312994338="` echo /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpqv1byu3b TO /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338/ /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678794.7128832-27059-33668312994338/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.052017",
    "end": "2020-11-06 16:06:35.040229",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:34.988212",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290 `" && echo ansible-tmp-1604678795.0850425-27090-242734404311290="` echo /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8bbcejdu TO /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290/ /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678795.0850425-27090-242734404311290/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.zxiqrs82",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575 `" && echo ansible-tmp-1604678795.2609897-27116-68121734261575="` echo /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp49mykr4s TO /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575/ /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678795.2609897-27116-68121734261575/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618 `" && echo ansible-tmp-1604678795.6162207-27152-167204689441618="` echo /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpn4w0ul6b TO /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618/ /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678795.6162207-27152-167204689441618/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.047636",
    "end": "2020-11-06 16:06:35.793570",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:35.745934",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574 `" && echo ansible-tmp-1604678795.9204524-27185-190357454529574="` echo /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpymqjewyz TO /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574/ /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678795.9204524-27185-190357454529574/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.xuii8ubl",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966 `" && echo ansible-tmp-1604678796.096419-27211-113111830146966="` echo /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmphtv661f5 TO /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966/ /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678796.096419-27211-113111830146966/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273 `" && echo ansible-tmp-1604678796.4324386-27247-100425691144273="` echo /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0sb7dj29 TO /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273/ /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678796.4324386-27247-100425691144273/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050469",
    "end": "2020-11-06 16:06:36.612996",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:36.562527",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898 `" && echo ansible-tmp-1604678796.6573486-27278-243680870067898="` echo /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpsovt4d2d TO /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898/ /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678796.6573486-27278-243680870067898/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.33_h3ho6",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193 `" && echo ansible-tmp-1604678796.8440669-27304-134321428727193="` echo /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmptjitsfwu TO /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193/ /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678796.8440669-27304-134321428727193/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356 `" && echo ansible-tmp-1604678797.180261-27340-232594514476356="` echo /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwd8pl50g TO /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356/ /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678797.180261-27340-232594514476356/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053535",
    "end": "2020-11-06 16:06:37.366173",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:37.312638",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640 `" && echo ansible-tmp-1604678797.4691837-27373-23460697967640="` echo /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpzpnf2hmr TO /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640/ /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678797.4691837-27373-23460697967640/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ikbgdrj2",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629 `" && echo ansible-tmp-1604678797.646515-27399-126600115122629="` echo /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpslx8n5xp TO /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629/ /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678797.646515-27399-126600115122629/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311 `" && echo ansible-tmp-1604678798.0900178-27433-90162294045311="` echo /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpn857vmk9 TO /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311/ /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678798.0900178-27433-90162294045311/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.033589",
    "end": "2020-11-06 16:06:38.252913",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:38.219324",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913 `" && echo ansible-tmp-1604678798.506657-27474-171251646986913="` echo /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp37npt3hw TO /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913/ /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678798.506657-27474-171251646986913/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658 `" && echo ansible-tmp-1604678799.503035-27514-182933792122658="` echo /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpffzunhaw TO /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658/ /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678799.503035-27514-182933792122658/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148 `" && echo ansible-tmp-1604678800.1234617-27542-74381671127148="` echo /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpaj8aiddt TO /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148/ /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678800.1234617-27542-74381671127148/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465 `" && echo ansible-tmp-1604678800.9073956-27582-173824795184465="` echo /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpgdfqscpc TO /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465/ /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678800.9073956-27582-173824795184465/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269 `" && echo ansible-tmp-1604678801.9683897-27637-178876809476269="` echo /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpd_eloce4 TO /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269/ /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678801.9683897-27637-178876809476269/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.bwhohzlr",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517 `" && echo ansible-tmp-1604678802.144103-27663-71922259847517="` echo /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmplle55tdm TO /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517/ /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678802.144103-27663-71922259847517/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740 `" && echo ansible-tmp-1604678802.5074065-27699-260410359420740="` echo /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6g77cz53 TO /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740/ /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678802.5074065-27699-260410359420740/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050674",
    "end": "2020-11-06 16:06:42.687966",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:42.637292",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244 `" && echo ansible-tmp-1604678802.739417-27730-144051681909244="` echo /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxdv8ng11 TO /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244/ /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678802.739417-27730-144051681909244/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.85lromsq",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260 `" && echo ansible-tmp-1604678802.9258332-27771-61972792994260="` echo /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpk1a1p98h TO /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260/ /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678802.9258332-27771-61972792994260/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545 `" && echo ansible-tmp-1604678803.2873008-27807-133797274181545="` echo /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpygk2jm_o TO /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545/ /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678803.2873008-27807-133797274181545/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.048947",
    "end": "2020-11-06 16:06:43.468770",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:43.419823",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554 `" && echo ansible-tmp-1604678803.5246234-27838-255769934203554="` echo /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpi2hvttjw TO /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554/ /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678803.5246234-27838-255769934203554/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236 `" && echo ansible-tmp-1604678804.3985393-27878-135306985173236="` echo /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxl40ndrq TO /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236/ /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678804.3985393-27878-135306985173236/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661 `" && echo ansible-tmp-1604678805.017693-27906-133956152661="` echo /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2rm0gle_ TO /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661/ /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678805.017693-27906-133956152661/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412 `" && echo ansible-tmp-1604678805.6276088-27934-103146945033412="` echo /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpnspschoo TO /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412/ /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678805.6276088-27934-103146945033412/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:01.220767",
    "end": "2020-11-06 16:06:46.978101",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:45.757334",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971 `" && echo ansible-tmp-1604678807.0325253-27963-131150297507971="` echo /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpghovynod TO /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971/ /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678807.0325253-27963-131150297507971/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.272444",
    "end": "2020-11-06 16:06:47.436353",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:47.163909",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490 `" && echo ansible-tmp-1604678807.5022528-28000-184191933644490="` echo /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpopf45a89 TO /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490/ /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678807.5022528-28000-184191933644490/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:01.625047",
    "end": "2020-11-06 16:06:49.256758",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:06:47.631711",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Fri Nov  6 16:06:48 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     1s\nflux-dev-ssh-config   1     1s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          1s\nflux-dev-helm-operator  0/1    1           0          1s\nflux-dev-memcached      0/1    1           0          1s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-qbf44                0/1    ContainerCreating  0         0s\nflux-dev-helm-operator-745dc7fb99-gwnhc  0/1    ContainerCreating  0         0s\nflux-dev-memcached-5f689bfdb9-zlkr2      0/1    ContainerCreating  0         0s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.132.62  <none>       3030/TCP   1s\nflux-dev-memcached  ClusterIP  10.0.7.109   <none>       11211/TCP  1s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        1s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  1s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  1s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Fri Nov  6 16:06:48 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     1s",
        "flux-dev-ssh-config   1     1s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          1s",
        "flux-dev-helm-operator  0/1    1           0          1s",
        "flux-dev-memcached      0/1    1           0          1s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-qbf44                0/1    ContainerCreating  0         0s",
        "flux-dev-helm-operator-745dc7fb99-gwnhc  0/1    ContainerCreating  0         0s",
        "flux-dev-memcached-5f689bfdb9-zlkr2      0/1    ContainerCreating  0         0s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.132.62  <none>       3030/TCP   1s",
        "flux-dev-memcached  ClusterIP  10.0.7.109   <none>       11211/TCP  1s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        1s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690 `" && echo ansible-tmp-1604678809.4485033-28048-117919598236690="` echo /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpls35lr2u TO /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690/ /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678809.4485033-28048-117919598236690/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276 `" && echo ansible-tmp-1604678840.0903265-28048-243994024027276="` echo /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpj5j34ie9 TO /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276/ /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678840.0903265-28048-243994024027276/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T16:06:49Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-qbf44",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "81fc5513-51df-4035-8bbc-15a758ec7201"
                    }
                ],
                "resourceVersion": "2481005",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-qbf44",
                "uid": "a2124ece-b46a-4dbd-9339-c234fbfdb6b6"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-vn9z2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-vn9z2",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-vn9z2"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:55Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:49Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c4bd9340480cf7143057f20516dcc2b1448dbd3b2d82c89a9c1208ac59c5a8a9",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T16:06:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.37",
                "podIPs": [
                    {
                        "ip": "10.1.0.37"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T16:06:49Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990 `" && echo ansible-tmp-1604678840.7278996-28103-17622420165990="` echo /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0m4uxu8q TO /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990/ /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678840.7278996-28103-17622420165990/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.162043",
    "end": "2020-11-06 16:07:21.019889",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:20.857846",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838 `" && echo ansible-tmp-1604678841.3999183-28163-78577854646838="` echo /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp9bgpsd63 TO /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838/ /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678841.3999183-28163-78577854646838/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.vb0cgxkx",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130 `" && echo ansible-tmp-1604678841.577681-28189-8096684541130="` echo /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvq3hh745 TO /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130/ /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678841.577681-28189-8096684541130/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402 `" && echo ansible-tmp-1604678841.938516-28226-17706579513402="` echo /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8vvaaoys TO /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402/ /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678841.938516-28226-17706579513402/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.052871",
    "end": "2020-11-06 16:07:22.121760",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:22.068889",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758 `" && echo ansible-tmp-1604678842.1744175-28257-280127707580758="` echo /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkvd8f505 TO /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758/ /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678842.1744175-28257-280127707580758/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.wjcqi1el",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012 `" && echo ansible-tmp-1604678842.3569546-28283-113172827533012="` echo /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmph1fvkl0j TO /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012/ /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678842.3569546-28283-113172827533012/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919 `" && echo ansible-tmp-1604678842.7229543-28319-46585453013919="` echo /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpgaa4__33 TO /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919/ /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678842.7229543-28319-46585453013919/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.049219",
    "end": "2020-11-06 16:07:22.903047",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:22.853828",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717 `" && echo ansible-tmp-1604678842.9609082-28350-202905704042717="` echo /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp56l9ibm5 TO /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717/ /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678842.9609082-28350-202905704042717/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614 `" && echo ansible-tmp-1604678843.8425848-28390-157556610966614="` echo /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpu946cadd TO /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614/ /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678843.8425848-28390-157556610966614/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487 `" && echo ansible-tmp-1604678844.4766557-28418-61246900913487="` echo /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwmd5igfk TO /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487/ /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678844.4766557-28418-61246900913487/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T16:06:49Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-qbf44",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "81fc5513-51df-4035-8bbc-15a758ec7201"
                    }
                ],
                "resourceVersion": "2481005",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-qbf44",
                "uid": "a2124ece-b46a-4dbd-9339-c234fbfdb6b6"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-vn9z2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-vn9z2",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-vn9z2"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:55Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:06:49Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c4bd9340480cf7143057f20516dcc2b1448dbd3b2d82c89a9c1208ac59c5a8a9",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T16:06:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.37",
                "podIPs": [
                    {
                        "ip": "10.1.0.37"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T16:06:49Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208 `" && echo ansible-tmp-1604678845.2071571-28454-197335462208="` echo /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwoaktmqp TO /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208/ /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678845.2071571-28454-197335462208/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.173193",
    "end": "2020-11-06 16:07:25.514039",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:25.340846",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084 `" && echo ansible-tmp-1604678846.1746137-28520-66319590200084="` echo /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0likgl7h TO /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084/ /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678846.1746137-28520-66319590200084/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ka1n7qm8",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361 `" && echo ansible-tmp-1604678846.3526273-28546-116948685171361="` echo /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp07jk674j TO /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361/ /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678846.3526273-28546-116948685171361/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705 `" && echo ansible-tmp-1604678846.7129495-28582-22153901313705="` echo /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpuugfp1vv TO /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705/ /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678846.7129495-28582-22153901313705/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.061910",
    "end": "2020-11-06 16:07:26.905420",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:26.843510",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962 `" && echo ansible-tmp-1604678846.9623544-28613-92181879398962="` echo /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwmfs3pm7 TO /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962/ /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678846.9623544-28613-92181879398962/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611 `" && echo ansible-tmp-1604678847.8465552-28653-19644063237611="` echo /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpo3b0rli5 TO /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611/ /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678847.8465552-28653-19644063237611/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404 `" && echo ansible-tmp-1604678848.4815717-28681-134855003358404="` echo /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpdytxwodo TO /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404/ /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678848.4815717-28681-134855003358404/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309 `" && echo ansible-tmp-1604678849.3082209-28721-94653245618309="` echo /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpmkkzr8yr TO /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309/ /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678849.3082209-28721-94653245618309/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849 `" && echo ansible-tmp-1604678850.2382154-28773-107054169706849="` echo /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2_vsc7tf TO /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849/ /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678850.2382154-28773-107054169706849/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.9jqqphvc",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614 `" && echo ansible-tmp-1604678850.4158168-28801-111309842023614="` echo /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkk4msgx1 TO /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614/ /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678850.4158168-28801-111309842023614/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937 `" && echo ansible-tmp-1604678850.7727396-28837-149976592394937="` echo /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpl9abf0ba TO /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937/ /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678850.7727396-28837-149976592394937/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050283",
    "end": "2020-11-06 16:07:30.954135",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:30.903852",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324 `" && echo ansible-tmp-1604678851.0139341-28868-100057998840324="` echo /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpexgu4ful TO /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324/ /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678851.0139341-28868-100057998840324/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608 `" && echo ansible-tmp-1604678851.8442643-28908-158077070326608="` echo /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmprp11ea1o TO /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608/ /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678851.8442643-28908-158077070326608/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795 `" && echo ansible-tmp-1604678852.4709125-28936-57179318882795="` echo /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpt5g5vr_o TO /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795/ /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678852.4709125-28936-57179318882795/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775 `" && echo ansible-tmp-1604678853.3266728-28976-56302669842775="` echo /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpstjpgjul TO /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775/ /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678853.3266728-28976-56302669842775/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608 `" && echo ansible-tmp-1604678853.9973276-29005-42382119066608="` echo /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpanvcvssz TO /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608/ /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678853.9973276-29005-42382119066608/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894 `" && echo ansible-tmp-1604678854.5885432-29035-141501687023894="` echo /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpjjx2p3jh TO /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894/ /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678854.5885432-29035-141501687023894/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115 `" && echo ansible-tmp-1604678855.4035692-29073-93562568702115="` echo /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp9blou2d1 TO /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115/ /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678855.4035692-29073-93562568702115/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790 `" && echo ansible-tmp-1604678855.611399-29099-257755503062790="` echo /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpz99nikyf TO /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/ /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpekc7qz39/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/ /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpq1torlhp TO /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/ /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678855.611399-29099-257755503062790/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423 `" && echo ansible-tmp-1604678856.281434-29141-38030242800423="` echo /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpnz3oyixp TO /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423/ /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678856.281434-29141-38030242800423/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136 `" && echo ansible-tmp-1604678856.4840968-29167-155513642658136="` echo /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpd7l9fhka TO /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/ /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkyojsi9c/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/ /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpt59cifqr TO /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/ /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678856.4840968-29167-155513642658136/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093 `" && echo ansible-tmp-1604678856.8784158-29209-23347772931093="` echo /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp73hm4axr TO /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093/ /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678856.8784158-29209-23347772931093/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276 `" && echo ansible-tmp-1604678857.0901914-29235-10796385107276="` echo /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7ubl_w6f TO /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/ /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpe038bspj/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/ /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp4lwdbca0 TO /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/ /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678857.0901914-29235-10796385107276/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453 `" && echo ansible-tmp-1604678857.4960656-29277-252381576379453="` echo /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpl9nyny30 TO /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453/ /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678857.4960656-29277-252381576379453/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983 `" && echo ansible-tmp-1604678857.7008004-29303-149563863574983="` echo /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpv3xfmth4 TO /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/ /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpdf7xvryb/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/ /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpz_8rieth TO /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/ /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678857.7008004-29303-149563863574983/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084 `" && echo ansible-tmp-1604678858.1388323-29345-148857660719084="` echo /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpj22fo3el TO /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084/ /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678858.1388323-29345-148857660719084/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218 `" && echo ansible-tmp-1604678858.3395195-29371-222152127208218="` echo /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_24kaxyu TO /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218/ /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678858.3395195-29371-222152127208218/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.398364",
    "end": "2020-11-06 16:07:41.868943",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:07:38.470579",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   52b9ab04..4303d7a0  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   52b9ab04..4303d7a0  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 4303d7a0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 953 insertions(+), 1709 deletions(-)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 4303d7a0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 953 insertions(+), 1709 deletions(-)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 4303d7a0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 953 insertions(+), 1709 deletions(-)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   52b9ab04..4303d7a0  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676 `" && echo ansible-tmp-1604678862.1183398-29423-221173037415676="` echo /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp20b1y7c2 TO /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676/ /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678862.1183398-29423-221173037415676/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257 `" && echo ansible-tmp-1604678862.9841022-29463-542732941257="` echo /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpiwglchus TO /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257/ /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678862.9841022-29463-542732941257/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851 `" && echo ansible-tmp-1604678898.609026-29463-134054488679851="` echo /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6lyluu34 TO /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851/ /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678898.609026-29463-134054488679851/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933 `" && echo ansible-tmp-1604678934.2026272-29463-185376385978933="` echo /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpm0o3l9p5 TO /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933/ /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678934.2026272-29463-185376385978933/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673 `" && echo ansible-tmp-1604678969.8017766-29463-17920671421673="` echo /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp3f0m6yyl TO /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673/ /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678969.8017766-29463-17920671421673/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T16:09:09Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2481354",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "73f2119f-2824-4e8f-ad2a-c88c698eb1e5"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-wt95w"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910 `" && echo ansible-tmp-1604678970.6123319-29577-98547610751910="` echo /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpjw_ex05u TO /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910/ /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678970.6123319-29577-98547610751910/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T16:09:09Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2481352",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "506743e7-5849-4c12-a77b-df0eae267e8d"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-d7n2m"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720 `" && echo ansible-tmp-1604678971.2977917-29607-247803625827720="` echo /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpv4hf68z0 TO /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720/ /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678971.2977917-29607-247803625827720/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176 `" && echo ansible-tmp-1604678972.0857728-29645-233603316117176="` echo /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpdasy9kjw TO /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176/ /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678972.0857728-29645-233603316117176/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732 `" && echo ansible-tmp-1604678972.2897785-29671-225298134070732="` echo /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpx5xnshiu TO /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/ /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpli7q1rod/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/ /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvull46kp TO /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/ /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678972.2897785-29671-225298134070732/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035 `" && echo ansible-tmp-1604678972.68744-29713-62078814044035="` echo /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpl4vib21d TO /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035/ /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678972.68744-29713-62078814044035/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454 `" && echo ansible-tmp-1604678972.8897436-29739-62944051230454="` echo /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1feuzij1 TO /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/ /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpua5jpg01/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/ /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpnj_m64bu TO /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/ /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678972.8897436-29739-62944051230454/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328 `" && echo ansible-tmp-1604678973.2958713-29781-100909393098328="` echo /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpg4qlkubg TO /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328/ /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678973.2958713-29781-100909393098328/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448 `" && echo ansible-tmp-1604678973.5012755-29807-271473021377448="` echo /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp3x4a6zc1 TO /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/ /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpcpk7hdkq/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/ /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpusx0v2z9 TO /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/ /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678973.5012755-29807-271473021377448/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483 `" && echo ansible-tmp-1604678973.899756-29849-124482316982483="` echo /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpv2rqzi_o TO /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483/ /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678973.899756-29849-124482316982483/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770 `" && echo ansible-tmp-1604678974.1078718-29875-265087611597770="` echo /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwggg594i TO /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/ /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpyfuw9922/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/ /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp4bfks5vc TO /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/ /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604678974.1078718-29875-265087611597770/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375 `" && echo ansible-tmp-1604678974.5085456-29917-204959113809375="` echo /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpe2bnx8dk TO /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375/ /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678974.5085456-29917-204959113809375/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922 `" && echo ansible-tmp-1604678974.7113786-29943-147184511720922="` echo /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpncf6pot3 TO /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922/ /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678974.7113786-29943-147184511720922/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.982271",
    "end": "2020-11-06 16:09:38.822974",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:09:34.840703",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   4303d7a0..6b21fdb0  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   4303d7a0..6b21fdb0  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 6b21fdb0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1160 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 6b21fdb0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1160 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 6b21fdb0] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1160 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   4303d7a0..6b21fdb0  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771 `" && echo ansible-tmp-1604678979.0622876-29995-246617872275771="` echo /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0guo_ybq TO /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771/ /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678979.0622876-29995-246617872275771/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184 `" && echo ansible-tmp-1604678979.9193647-30035-260962288098184="` echo /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2onr0svf TO /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184/ /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604678979.9193647-30035-260962288098184/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781 `" && echo ansible-tmp-1604679015.5037935-30035-168889740681781="` echo /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6859ffut TO /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781/ /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679015.5037935-30035-168889740681781/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532 `" && echo ansible-tmp-1604679051.1261067-30035-85996912927532="` echo /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpmpw5iks8 TO /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532/ /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679051.1261067-30035-85996912927532/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256 `" && echo ansible-tmp-1604679086.754673-30035-142137158297256="` echo /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpdbw_2c4t TO /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256/ /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679086.754673-30035-142137158297256/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T16:11:09Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2481668",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "726736ca-32a1-4501-bcf1-5da0cb9435a8"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-w29x9"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170 `" && echo ansible-tmp-1604679087.5710294-30151-92729888251170="` echo /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp33qkx4g9 TO /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170/ /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679087.5710294-30151-92729888251170/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T16:11:09Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2481666",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "6e708fb0-af35-4465-be68-e3ea91791c43"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-hzpnq"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451 `" && echo ansible-tmp-1604679088.4345798-30185-225127262792451="` echo /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7cmsv7cy TO /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451/ /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679088.4345798-30185-225127262792451/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T16:09:09Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2481345",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "e539770b-81e1-416e-8768-81e255bbd3e0"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430 `" && echo ansible-tmp-1604679089.1800458-30219-114657064856430="` echo /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpl6tqopkr TO /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430/ /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679089.1800458-30219-114657064856430/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019 `" && echo ansible-tmp-1604679089.3736446-30245-155710231705019="` echo /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpc_460gws TO /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019/ /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679089.3736446-30245-155710231705019/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427 `" && echo ansible-tmp-1604679089.7755044-30283-272703866505427="` echo /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_if41yzh TO /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427/ /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679089.7755044-30283-272703866505427/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.075940",
    "end": "2020-11-06 16:11:29.982325",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:29.906385",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.075940",
            "end": "2020-11-06 16:11:29.982325",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 16:11:29.906385",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712 `" && echo ansible-tmp-1604679090.2095587-30330-254101014573712="` echo /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7p5pchj0 TO /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712/ /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679090.2095587-30330-254101014573712/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.048180",
    "end": "2020-11-06 16:11:30.389025",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:30.340845",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500 `" && echo ansible-tmp-1604679090.451573-30366-160097792722500="` echo /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpb50i9lbj TO /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500/ /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679090.451573-30366-160097792722500/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.210709",
    "end": "2020-11-06 16:11:30.791330",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:30.580621",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454 `" && echo ansible-tmp-1604679090.865221-30408-110663945570454="` echo /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpm6neqt8f TO /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454/ /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679090.865221-30408-110663945570454/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.292272",
    "end": "2020-11-06 16:11:31.288121",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:30.995849",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564 `" && echo ansible-tmp-1604679091.507128-30470-268294854382564="` echo /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp16shm32b TO /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564/ /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679091.507128-30470-268294854382564/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.041872",
    "end": "2020-11-06 16:11:31.682281",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:11:31.640409",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773 `" && echo ansible-tmp-1604679091.7711408-30507-259313186011773="` echo /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp5jp03jw9 TO /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/ /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpjkx8l3nu/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/ /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpnb19d0by TO /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/ /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679091.7711408-30507-259313186011773/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285 `" && echo ansible-tmp-1604679092.1619046-30549-35487950924285="` echo /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1p1iwkri TO /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285/ /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679092.1619046-30549-35487950924285/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.043182",
    "end": "2020-11-06 16:11:32.336042",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:32.292860",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447 `" && echo ansible-tmp-1604679092.4044425-30584-62715860971447="` echo /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwvq02ob1 TO /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447/ /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679092.4044425-30584-62715860971447/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.042425",
    "end": "2020-11-06 16:11:32.577825",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:32.535400",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778 `" && echo ansible-tmp-1604679092.8179276-30629-237867923198778="` echo /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpstac2_zs TO /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778/ /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679092.8179276-30629-237867923198778/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675 `" && echo ansible-tmp-1604679093.4474454-30657-248926545342675="` echo /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmps5dmadm0 TO /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675/ /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679093.4474454-30657-248926545342675/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.138878",
    "end": "2020-11-06 16:11:33.716854",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:33.577976",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894 `" && echo ansible-tmp-1604679093.9105277-30693-61432252366894="` echo /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpdtan6u63 TO /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894/ /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679093.9105277-30693-61432252366894/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T16:11:09Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2481659",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "874867a4-da20-4df2-a8e9-668f0f572057"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138 `" && echo ansible-tmp-1604679094.644946-30727-170191278778138="` echo /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpc5bu_mhc TO /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138/ /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679094.644946-30727-170191278778138/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604679089.5039513,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604679092.0559897,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3092,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604679092.0559897,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1792345744",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127 `" && echo ansible-tmp-1604679095.0696328-30769-3383455126127="` echo /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpsph236qh TO /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127/ /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679095.0696328-30769-3383455126127/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.045194",
    "end": "2020-11-06 16:11:35.248688",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:35.203494",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.045194",
            "end": "2020-11-06 16:11:35.248688",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 16:11:35.203494",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045 `" && echo ansible-tmp-1604679095.4975953-30817-170919323679045="` echo /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmph26uisbn TO /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045/ /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679095.4975953-30817-170919323679045/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.043939",
    "end": "2020-11-06 16:11:35.672454",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:35.628515",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459 `" && echo ansible-tmp-1604679095.7349594-30853-224642908613459="` echo /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpbjuww7sa TO /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459/ /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679095.7349594-30853-224642908613459/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.194547",
    "end": "2020-11-06 16:11:36.059878",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:35.865331",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915 `" && echo ansible-tmp-1604679096.1315448-30894-52753597154915="` echo /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpewygxm1u TO /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915/ /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679096.1315448-30894-52753597154915/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.288897",
    "end": "2020-11-06 16:11:36.551096",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:36.262199",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889 `" && echo ansible-tmp-1604679096.76654-30954-146661063406889="` echo /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvgmbhoer TO /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889/ /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679096.76654-30954-146661063406889/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.041341",
    "end": "2020-11-06 16:11:36.938222",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:11:36.896881",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920 `" && echo ansible-tmp-1604679097.0560951-30993-271484178578920="` echo /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpi6xq5sp1 TO /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/ /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxkyra8z2/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/ /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmprvobt7vd TO /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/ /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679097.0560951-30993-271484178578920/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312 `" && echo ansible-tmp-1604679097.420868-31033-152066178387312="` echo /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6s0sz_j6 TO /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312/ /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679097.420868-31033-152066178387312/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.051406",
    "end": "2020-11-06 16:11:37.606946",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:37.555540",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090 `" && echo ansible-tmp-1604679097.6750548-31069-210121754707090="` echo /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8cyxzii8 TO /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090/ /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679097.6750548-31069-210121754707090/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.039177",
    "end": "2020-11-06 16:11:37.844218",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:37.805041",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657 `" && echo ansible-tmp-1604679098.088747-31115-260656293201657="` echo /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpl41exd3r TO /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657/ /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679098.088747-31115-260656293201657/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089 `" && echo ansible-tmp-1604679098.7420437-31143-115845617754089="` echo /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0gzruwe5 TO /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089/ /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679098.7420437-31143-115845617754089/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.108931",
    "end": "2020-11-06 16:11:38.981375",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:38.872444",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497 `" && echo ansible-tmp-1604679099.2616162-31179-199649056401497="` echo /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpc1kvzcck TO /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497/ /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679099.2616162-31179-199649056401497/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301 `" && echo ansible-tmp-1604679100.2479885-31227-213126241326301="` echo /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8wbvaijx TO /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301/ /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679100.2479885-31227-213126241326301/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745 `" && echo ansible-tmp-1604679101.3254647-31275-226837317192745="` echo /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvigkjbwl TO /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745/ /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679101.3254647-31275-226837317192745/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.085730",
    "end": "2020-11-06 16:11:41.541827",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:11:41.456097",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806 `" && echo ansible-tmp-1604679101.6576211-31312-58462237839806="` echo /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpd5g4ysge TO /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806/ /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679101.6576211-31312-58462237839806/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532 `" && echo ansible-tmp-1604679101.8456872-31338-113918875871532="` echo /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpeddc5fuj TO /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532/ /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679101.8456872-31338-113918875871532/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082 `" && echo ansible-tmp-1604679102.1639168-31372-242178940277082="` echo /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpudi66vs9 TO /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082/ /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679102.1639168-31372-242178940277082/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903 `" && echo ansible-tmp-1604679102.3523684-31398-60121735580903="` echo /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmps2brr4j9 TO /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903/ /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679102.3523684-31398-60121735580903/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
    "delta": "0:00:00.008602",
    "end": "2020-11-06 16:11:42.492384",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:42.483782",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992 `" && echo ansible-tmp-1604679102.6025448-31427-87752984513992="` echo /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmphk4wfhgn TO /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992/ /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679102.6025448-31427-87752984513992/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.044647",
    "end": "2020-11-06 16:11:42.778063",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:42.733416",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558 `" && echo ansible-tmp-1604679102.8434176-31465-163678273224558="` echo /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvwh5b3go TO /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558/ /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679102.8434176-31465-163678273224558/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.085022",
    "end": "2020-11-06 16:11:43.058840",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:11:42.973818",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817 `" && echo ansible-tmp-1604679103.1263447-31502-264468462928817="` echo /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6qnzz1r7 TO /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817/ /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679103.1263447-31502-264468462928817/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.043288",
    "end": "2020-11-06 16:11:43.304226",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:43.260938",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685 `" && echo ansible-tmp-1604679103.3739586-31538-278978486777685="` echo /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp3fhpk72n TO /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685/ /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679103.3739586-31538-278978486777685/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667 `" && echo ansible-tmp-1604679103.9960957-31566-257838157834667="` echo /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp18cu93by TO /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667/ /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679103.9960957-31566-257838157834667/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.123876",
    "end": "2020-11-06 16:11:44.250112",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:44.126236",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758 `" && echo ansible-tmp-1604679104.3884075-31601-92502266915758="` echo /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpragm8db3 TO /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758/ /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679104.3884075-31601-92502266915758/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417 `" && echo ansible-tmp-1604679104.58871-31627-171159652330417="` echo /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp794t8liy TO /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417/ /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679104.58871-31627-171159652330417/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786 `" && echo ansible-tmp-1604679104.785186-31653-121788737456786="` echo /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpptvhxopx TO /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/ /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpslx3u3he/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/ /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpqc7_obqj TO /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/ /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679104.785186-31653-121788737456786/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942 `" && echo ansible-tmp-1604679105.2062306-31695-76873568868942="` echo /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpdpq7tep0 TO /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942/ /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679105.2062306-31695-76873568868942/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604679105.080186,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604679105.080186,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604679104.952184,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "3541939608",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339 `" && echo ansible-tmp-1604679105.4615893-31725-121454142891339="` echo /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpf13ajerq TO /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339/ /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679105.4615893-31725-121454142891339/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690 `" && echo ansible-tmp-1604679105.6454253-31751-154578414894690="` echo /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp87qjfptp TO /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690/ /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679105.6454253-31751-154578414894690/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407 `" && echo ansible-tmp-1604679105.980951-31785-48643399119407="` echo /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpn83vw9dz TO /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/ /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp55l31ibm TO /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/ /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvvh0f72c TO /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/ /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp55l31ibm",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679105.980951-31785-48643399119407/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082 `" && echo ansible-tmp-1604679106.319753-31825-23076909508082="` echo /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0y2b8nm8 TO /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082/ /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679106.319753-31825-23076909508082/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.058072",
    "end": "2020-11-06 16:11:46.507789",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:46.449717",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218 `" && echo ansible-tmp-1604679106.6565638-31861-18186215967218="` echo /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpr4eou_6m TO /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218/ /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679106.6565638-31861-18186215967218/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490 `" && echo ansible-tmp-1604679106.859505-31887-82859911177490="` echo /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpjmv34pl8 TO /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490/ /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679106.859505-31887-82859911177490/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.260073",
    "end": "2020-11-06 16:11:50.248694",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:46.988621",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   6b21fdb0..2fed43ef  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   6b21fdb0..2fed43ef  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 2fed43ef] [ci skip] Pushing CA server files\n 2 files changed, 3447 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 2fed43ef] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 2fed43ef] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   6b21fdb0..2fed43ef  HEAD -> gorilla"
    ]
}

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629 `" && echo ansible-tmp-1604679110.3784742-31935-115280481252629="` echo /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmptgrhuyo1 TO /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629/ /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679110.3784742-31935-115280481252629/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
    "delta": "0:00:00.049776",
    "end": "2020-11-06 16:11:50.567000",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:11:50.517224",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727 `" && echo ansible-tmp-1604679110.678289-31972-25879872209727="` echo /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvsoalo4h TO /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727/ /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679110.678289-31972-25879872209727/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845 `" && echo ansible-tmp-1604679110.8653758-31999-241256682011845="` echo /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmplj8fk44e TO /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845/ /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679110.8653758-31999-241256682011845/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880 `" && echo ansible-tmp-1604679111.1820285-32033-31496798046880="` echo /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpb45qdr6u TO /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880/ /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679111.1820285-32033-31496798046880/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317 `" && echo ansible-tmp-1604679111.382852-32059-139827945293317="` echo /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpnfh8ssvg TO /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317/ /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679111.382852-32059-139827945293317/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier\"\n",
    "delta": "0:00:00.008266",
    "end": "2020-11-06 16:11:51.521092",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:51.512826",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941 `" && echo ansible-tmp-1604679111.5909953-32089-236564178022941="` echo /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpd854w9fw TO /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941/ /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679111.5909953-32089-236564178022941/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
    "delta": "0:00:00.079303",
    "end": "2020-11-06 16:11:51.799515",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:51.720212",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229 `" && echo ansible-tmp-1604679111.8657227-32127-229251386568229="` echo /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvlfghapv TO /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229/ /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679111.8657227-32127-229251386568229/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
    "delta": "0:00:00.047759",
    "end": "2020-11-06 16:11:52.043219",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:11:51.995460",
    "stderr": "No value found at secret/credentials/carrier-net/ca/carrier",
    "stderr_lines": [
        "No value found at secret/credentials/carrier-net/ca/carrier"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255 `" && echo ansible-tmp-1604679112.109675-32162-36008778015255="` echo /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpzna4ajqu TO /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255/ /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679112.109675-32162-36008778015255/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
    "delta": "0:00:00.072991",
    "end": "2020-11-06 16:11:52.313179",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:52.240188",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/ca/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/ca/carrier"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681 `" && echo ansible-tmp-1604679112.3776608-32198-91845237146681="` echo /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp5z6z0i49 TO /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681/ /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679112.3776608-32198-91845237146681/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100 `" && echo ansible-tmp-1604679112.9953988-32226-201047993059100="` echo /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0shnll8v TO /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100/ /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679112.9953988-32226-201047993059100/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
    "delta": "0:00:00.108538",
    "end": "2020-11-06 16:11:53.235050",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:53.126512",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-carrier-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458 `" && echo ansible-tmp-1604679113.3945463-32262-46370098008458="` echo /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpjs4vbnze TO /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458/ /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679113.3945463-32262-46370098008458/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013 `" && echo ansible-tmp-1604679113.592803-32288-9197782124013="` echo /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpuxcigz_q TO /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013/ /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679113.592803-32288-9197782124013/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880 `" && echo ansible-tmp-1604679113.789707-32314-62261984800880="` echo /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpk37sj02e TO /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/ /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpgt1itklr/ca-peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/ /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpth1f7h4y TO /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/ /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7d8e039d61ac8a6ff961573116ce20ca",
    "mode": "0644",
    "owner": "root",
    "size": 1262,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679113.789707-32314-62261984800880/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819 `" && echo ansible-tmp-1604679114.2789567-32356-263789258668819="` echo /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpw9h1qk3m TO /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819/ /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679114.2789567-32356-263789258668819/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604679114.0923216,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
        "ctime": 1604679114.0923216,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3139,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604679113.9603195,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1262,
        "uid": 0,
        "version": "2641170309",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636 `" && echo ansible-tmp-1604679114.5239518-32386-202077029405636="` echo /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1x_ku5jk TO /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636/ /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679114.5239518-32386-202077029405636/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604679105.7761965,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604679106.2482035,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3127,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604679106.2482035,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "837921036",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "carrier-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "peer"
                },
                "server": {
                    "admin": "carrier-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/carrier-net/ca/carrier?user",
                    "secretcert": "secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem",
                    "secretkey": "secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352 `" && echo ansible-tmp-1604679114.894547-32424-277405652069352="` echo /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmphcqijhj8 TO /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/ /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmplxl363bc TO /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/ /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxkpmvnv_ TO /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/ /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
    "dest": "./build/test/carrier-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmplxl363bc",
            "attributes": null,
            "backup": false,
            "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
            "content": null,
            "dest": "./build/test/carrier-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea14e4e12c26cbb2cb9ee3a173335ca1",
    "mode": "0644",
    "owner": "root",
    "size": 834,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679114.894547-32424-277405652069352/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134 `" && echo ansible-tmp-1604679115.2369733-32464-191766543393134="` echo /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwyvhvwfe TO /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134/ /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679115.2369733-32464-191766543393134/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.059489",
    "end": "2020-11-06 16:11:55.435932",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:55.376443",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906 `" && echo ansible-tmp-1604679115.555182-32498-84316648263906="` echo /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmplwjfxm7t TO /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906/ /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679115.555182-32498-84316648263906/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240 `" && echo ansible-tmp-1604679115.7548451-32524-43000078215240="` echo /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpqwtro_wz TO /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240/ /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679115.7548451-32524-43000078215240/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.215248",
    "end": "2020-11-06 16:11:59.099893",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:11:55.884645",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   2fed43ef..ed2e8754  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   2fed43ef..ed2e8754  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla ed2e8754] [ci skip] Pushing CA server files\n 2 files changed, 1142 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla ed2e8754] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla ed2e8754] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   2fed43ef..ed2e8754  HEAD -> gorilla"
    ]
}

TASK [include_role : create/ca-tools] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:70

TASK [waiting for the CA server to be created in walmart-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611 `" && echo ansible-tmp-1604679119.5130084-32580-50563967177611="` echo /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp998nqeem TO /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611/ /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679119.5130084-32580-50563967177611/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747 `" && echo ansible-tmp-1604679150.1597943-32580-147493953050747="` echo /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6daiu4v4 TO /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747/ /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679150.1597943-32580-147493953050747/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118 `" && echo ansible-tmp-1604679180.811996-32580-65049543237118="` echo /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp4a_wedks TO /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118/ /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679180.811996-32580-65049543237118/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938 `" && echo ansible-tmp-1604679211.4302518-32580-27592892112938="` echo /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpagkm_71k TO /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938/ /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679211.4302518-32580-27592892112938/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930 `" && echo ansible-tmp-1604679242.0804324-32580-180133174395930="` echo /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7rbglv16 TO /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930/ /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679242.0804324-32580-180133174395930/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T16:13:17Z",
                "generateName": "ca-876984656-",
                "labels": {
                    "app.kubernetes.io/instance": "walmart-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "876984656"
                },
                "name": "ca-876984656-znhrd",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-876984656",
                        "uid": "7baaea05-9e2a-4b09-a40b-64358d080c38"
                    }
                ],
                "resourceVersion": "2482207",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-876984656-znhrd",
                "uid": "960691c1-19dd-4e78-94f8-b095736ccc4d"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b walmart-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.walmart-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-d7n2m",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/walmart-net/ca/walmart?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-d7n2m",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-d7n2m",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-d7n2m"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:55Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:31Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e2f0ccd5e2fb89a27840d225e780222023104135641d12f3cd54152035abe661",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T16:13:54Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://d88a2f012fdaa086cb9e47844849091565d0917a38e8aef90ef68c9037a51dfb",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://d88a2f012fdaa086cb9e47844849091565d0917a38e8aef90ef68c9037a51dfb",
                                "exitCode": 0,
                                "finishedAt": "2020-11-06T16:13:53Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-06T16:13:53Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.15",
                "podIPs": [
                    {
                        "ip": "10.1.0.15"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T16:13:31Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608 `" && echo ansible-tmp-1604679242.7941868-32714-88511924095608="` echo /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpc1a9mrei TO /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608/ /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679242.7941868-32714-88511924095608/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024 `" && echo ansible-tmp-1604679242.9968705-32740-24364823492024="` echo /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpp390lnt2 TO /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024/ /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679242.9968705-32740-24364823492024/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734 `" && echo ansible-tmp-1604679243.1965303-32766-102767118963734="` echo /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp23mba9p4 TO /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/ /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpndbcgtzk/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/ /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxvkrzttf TO /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/ /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22eb57fc62c4c46e12211ccc6f0ae59e",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679243.1965303-32766-102767118963734/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833 `" && echo ansible-tmp-1604679243.5966969-344-58045213190833="` echo /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpu2am9iqp TO /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833/ /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679243.5966969-344-58045213190833/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604679243.4863546,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
        "ctime": 1604679243.4863546,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3144,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604679243.3503523,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "700037718",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534 `" && echo ansible-tmp-1604679243.8407493-374-236961636590534="` echo /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpbjecgl8p TO /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534/ /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679243.8407493-374-236961636590534/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604679105.7761965,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604679115.1643376,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3127,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604679115.1643376,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "837921036",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca-tools",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "walmart-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977 `" && echo ansible-tmp-1604679244.2183-412-94244423052977="` echo /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp5_engq9t TO /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/ /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpc6f0jb17 TO /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/ /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpj6naux_i TO /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/ /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
    "dest": "./build/test/walmart-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpc6f0jb17",
            "attributes": null,
            "backup": false,
            "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
            "content": null,
            "dest": "./build/test/walmart-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "590790aef7bb9a4128b32a0352fb27f4",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679244.2183-412-94244423052977/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872 `" && echo ansible-tmp-1604679244.561547-452-21013733690872="` echo /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpci1nsp9j TO /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872/ /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679244.561547-452-21013733690872/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.052945",
    "end": "2020-11-06 16:14:04.753012",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:14:04.700067",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285 `" && echo ansible-tmp-1604679244.8660777-486-170252358456285="` echo /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpk46ql1rg TO /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285/ /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679244.8660777-486-170252358456285/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681 `" && echo ansible-tmp-1604679245.064386-512-218927824163681="` echo /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp88xy4zh9 TO /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681/ /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679245.064386-512-218927824163681/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.213619",
    "end": "2020-11-06 16:14:08.408152",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:14:05.194533",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   ed2e8754..e05b48ca  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   ed2e8754..e05b48ca  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla e05b48ca] [ci skip] Pushing CA-tools files\n 2 files changed, 1193 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla e05b48ca] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla e05b48ca] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   ed2e8754..e05b48ca  HEAD -> gorilla"
    ]
}

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113 `" && echo ansible-tmp-1604679248.6818206-566-147396999868113="` echo /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp9qypo6if TO /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113/ /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679248.6818206-566-147396999868113/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T16:13:16Z",
                "generateName": "ca-645c757f7d-",
                "labels": {
                    "app.kubernetes.io/instance": "carrier-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "645c757f7d"
                },
                "name": "ca-645c757f7d-sz8j2",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-645c757f7d",
                        "uid": "74f37efd-d3ad-44b4-b1af-f1b315fb5bd3"
                    }
                ],
                "resourceVersion": "2482194",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-645c757f7d-sz8j2",
                "uid": "314afa92-d9dc-4a58-8eeb-315133712882"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.carrier-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-hzpnq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-hzpnq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-hzpnq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-hzpnq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:52Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:13:31Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ead51b9b077aa7f1f7f189146b4096bbd467d345d902d04112bbe2c1e49675b",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T16:13:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://b1a928223940be86628f2f5824ec39ad9b9ac9db363642798fc9cfef6c9f9359",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://b1a928223940be86628f2f5824ec39ad9b9ac9db363642798fc9cfef6c9f9359",
                                "exitCode": 0,
                                "finishedAt": "2020-11-06T16:13:51Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-06T16:13:51Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.57",
                "podIPs": [
                    {
                        "ip": "10.1.0.57"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T16:13:31Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316 `" && echo ansible-tmp-1604679249.370999-596-236236737430316="` echo /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkl40942u TO /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316/ /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679249.370999-596-236236737430316/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217 `" && echo ansible-tmp-1604679249.5744624-622-122269065693217="` echo /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpr8as20e4 TO /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217/ /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679249.5744624-622-122269065693217/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847 `" && echo ansible-tmp-1604679249.7789679-648-45174392712847="` echo /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmppkaw73jk TO /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/ /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmprf2zr8yf/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/ /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpavo9fqu7 TO /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/ /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "31ce48ae00d8d8ffe510b3550432011b",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679249.7789679-648-45174392712847/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742 `" && echo ansible-tmp-1604679250.1814494-690-272389421544742="` echo /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1c973478 TO /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742/ /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679250.1814494-690-272389421544742/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604679250.0664654,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
        "ctime": 1604679250.0664654,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3152,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604679249.9344633,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "4123310442",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824 `" && echo ansible-tmp-1604679250.4254577-720-74577900563824="` echo /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1m7sp0ma TO /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824/ /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679250.4254577-720-74577900563824/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604679105.7761965,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604679244.4863715,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3127,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604679244.4863715,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "837921036",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca-tools",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "carrier-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296 `" && echo ansible-tmp-1604679250.7982807-758-23357117533296="` echo /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpuzojsy_t TO /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/ /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0onj4oq6 TO /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/ /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6flb8pq4 TO /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/ /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
    "dest": "./build/test/carrier-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp0onj4oq6",
            "attributes": null,
            "backup": false,
            "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
            "content": null,
            "dest": "./build/test/carrier-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "1e84a94c7e9daff778218b24a27091ea",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679250.7982807-758-23357117533296/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302 `" && echo ansible-tmp-1604679251.135976-798-128153208411302="` echo /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpl735vuz5 TO /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302/ /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679251.135976-798-128153208411302/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.055232",
    "end": "2020-11-06 16:14:11.322066",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:14:11.266834",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875 `" && echo ansible-tmp-1604679251.4350557-833-224455826205875="` echo /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkauwyfy7 TO /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875/ /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679251.4350557-833-224455826205875/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978 `" && echo ansible-tmp-1604679251.641695-859-177266905343978="` echo /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvbgh5cmg TO /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978/ /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679251.641695-859-177266905343978/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.211483",
    "end": "2020-11-06 16:14:14.983048",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:14:11.771565",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   e05b48ca..f2b58fb4  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e05b48ca..f2b58fb4  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla f2b58fb4] [ci skip] Pushing CA-tools files\n 2 files changed, 1011 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f2b58fb4] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f2b58fb4] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e05b48ca..f2b58fb4  HEAD -> gorilla"
    ]
}

TASK [include_role : create/crypto_script] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:85

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305 `" && echo ansible-tmp-1604679255.253084-909-268624459847305="` echo /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpn03sqmdc TO /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305/ /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679255.253084-909-268624459847305/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653 `" && echo ansible-tmp-1604679255.511501-935-16097306582653="` echo /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpr6s_pe93 TO /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/ /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_lob4ppl/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/ /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxz5mcvk8 TO /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/ /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "8971bb1d61fca97c22f2d6a674576f37276da513",
    "dest": "./build/generate-crypto-walmart-orderer1.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "8971bb1d61fca97c22f2d6a674576f37276da513",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer1.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a5c3b328cd353c579ccf59f38d5dd26f",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer1",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2587,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679255.511501-935-16097306582653/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358 `" && echo ansible-tmp-1604679255.8461614-935-13759440081358="` echo /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpg8fklbdb TO /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/ /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpjxhbgan_/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/ /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp3plniisn TO /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/ /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "0f34ff006a48ed85608f0c56326160a3420fa870",
    "dest": "./build/generate-crypto-walmart-orderer2.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "0f34ff006a48ed85608f0c56326160a3420fa870",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer2.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea5fdcd7f7da93ae9eae230a17fe4f56",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer2",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2587,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679255.8461614-935-13759440081358/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494 `" && echo ansible-tmp-1604679256.1735244-935-39938963662494="` echo /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7agpfd1n TO /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/ /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpw47ypwci/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/ /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpyqbwpseb TO /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/ /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "07bc4b5c88c2fb8b59116bd32a35e3173f4a3d45",
    "dest": "./build/generate-crypto-walmart-orderer3.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "07bc4b5c88c2fb8b59116bd32a35e3173f4a3d45",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer3.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "5055cfd462368cefb9e9d25e4cb814b7",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer3",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2587,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679256.1735244-935-39938963662494/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663 `" && echo ansible-tmp-1604679256.5266228-1051-274393146637663="` echo /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpz81mfolw TO /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/ /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp55705l0m/orderer_organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/ /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpy9r6ugh_ TO /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/ /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "0cbf099676ed3db46b4284f018386093ea3eb488",
    "dest": "./build/generate-crypto-walmart.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "0cbf099676ed3db46b4284f018386093ea3eb488",
            "content": null,
            "dest": "./build/generate-crypto-walmart.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "06d6898b6e6c0f64e68d456f385c4db4",
    "mode": "0644",
    "owner": "root",
    "size": 2904,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679256.5266228-1051-274393146637663/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499 `" && echo ansible-tmp-1604679256.904341-1093-200920641381499="` echo /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpb1igadzp TO /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499/ /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679256.904341-1093-200920641381499/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625 `" && echo ansible-tmp-1604679257.1672626-1123-144256582908625="` echo /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0m8ign6q TO /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/ /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmphythhcmu/organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/ /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpakgz1ept TO /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/ /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9b0219314b564b677d8729c2646cc3f70683d9d7",
    "dest": "./build/generate-crypto-carrier.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9b0219314b564b677d8729c2646cc3f70683d9d7",
            "content": null,
            "dest": "./build/generate-crypto-carrier.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "6dbe6657d953c4e519484ce3a085eec5",
    "mode": "0644",
    "owner": "root",
    "size": 5178,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679257.1672626-1123-144256582908625/source",
    "state": "file",
    "uid": 0
}

TASK [pause] *******************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:94
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
ok: [localhost] => {
    "changed": false,
    "delta": 360,
    "echo": true,
    "rc": 0,
    "start": "2020-11-06 16:14:17.513127",
    "stderr": "",
    "stdout": "Paused for 6.0 minutes",
    "stop": "2020-11-06 16:20:17.513410",
    "user_input": ""
}

TASK [include_role : create/crypto/orderer] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:99
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012 `" && echo ansible-tmp-1604679617.6917198-1168-136574048863012="` echo /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmppp1smo2f TO /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012/ /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679617.6917198-1168-136574048863012/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.082814",
    "end": "2020-11-06 16:20:17.909639",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:17.826825",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Call orderercheck.yaml for orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:16
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml for localhost

TASK [Waiting for CA-tool in walmart-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:2
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611 `" && echo ansible-tmp-1604679618.1999211-1210-74920877776611="` echo /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvetvru8h TO /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611/ /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679618.1999211-1210-74920877776611/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T16:15:17Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-5trvl",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "c4783eef-41bf-40d4-bf51-ce309848f1ed"
                    }
                ],
                "resourceVersion": "2482754",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-tools-69d7885f86-5trvl",
                "uid": "8976473c-c7e8-4f70-82ba-a59a0444b84f"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-2fk7n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-2fk7n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-2fk7n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:15:34Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:16:42Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:16:42Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:15:34Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://cafff32b4672413cbc82c4f6f29ddfd06d4c3dac4c76a67231ba84669c40f41d",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T16:16:41Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.96",
                "podIPs": [
                    {
                        "ip": "10.1.0.96"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T16:15:34Z"
            }
        }
    ]
}

TASK [include_role : {{ playbook_dir }}/../../shared/configuration/roles/check/setup] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533 `" && echo ansible-tmp-1604679618.9080312-1240-92633863526533="` echo /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpcx0i3hdn TO /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533/ /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679618.9080312-1240-92633863526533/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "atime": 1604679101.976139,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604679102.4881468,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3122,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604679102.4881468,
        "nlink": 2,
        "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1979180156",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if ca certs already created] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532 `" && echo ansible-tmp-1604679619.2322307-1276-197631272993532="` echo /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpmwiciveu TO /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532/ /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679619.2322307-1276-197631272993532/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.057653",
    "end": "2020-11-06 16:20:19.424530",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:19.366877",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Check if ca key already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252 `" && echo ansible-tmp-1604679619.4899704-1313-106359041263252="` echo /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp4lkjua13 TO /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252/ /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679619.4899704-1313-106359041263252/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.047269",
    "end": "2020-11-06 16:20:19.669229",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:19.621960",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call common.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:19
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml for localhost

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612 `" && echo ansible-tmp-1604679619.7877958-1351-208606990087612="` echo /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpcvq_zmsc TO /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612/ /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679619.7877958-1351-208606990087612/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:02.098272",
    "end": "2020-11-06 16:20:22.016946",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:19.918674",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Changing the permissions for generate-crypto script] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083 `" && echo ansible-tmp-1604679622.0850894-1396-28018497381083="` echo /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8l510jec TO /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083/ /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679622.0850894-1396-28018497381083/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart.sh"
        }
    },
    "files": "generate-crypto-walmart.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart.sh",
    "size": 2904,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186 `" && echo ansible-tmp-1604679622.2909896-1422-64703939754186="` echo /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpy_5jrlez TO /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186/ /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679622.2909896-1422-64703939754186/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:02.466235",
    "end": "2020-11-06 16:20:24.888707",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:22.422472",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738 `" && echo ansible-tmp-1604679624.9559035-1467-159845696086738="` echo /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpq7e4dxzs TO /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738/ /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679624.9559035-1467-159845696086738/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
    "delta": "0:00:01.159824",
    "end": "2020-11-06 16:20:26.246566",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:25.086742",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:25 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:25 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:25 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42047c750}\n2020/11/06 16:20:25 [DEBUG] Entered runEnroll\n2020/11/06 16:20:25 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42047c750}\n2020/11/06 16:20:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42047c7b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420483c70 DummyKeystore:<nil>}\n2020/11/06 16:20:25 [INFO] TLS Enabled\n2020/11/06 16:20:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:25 [DEBUG] Client Cert File: \n2020/11/06 16:20:25 [DEBUG] Client Key File: \n2020/11/06 16:20:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:25 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:25 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:25 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:25 [INFO] encoded CSR\n2020/11/06 16:20:25 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIB+YWnQPI17f+CZf911kR3uI9fvL\\nc/EzmmaDMt5d8EdFSsDB6J6kh2MgF4qmsdJmOBJgYimCbY3vQLAZgkqnCaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni01\\ndHJ2bDAKBggqhkjOPQQDAgNIADBFAiEAzBg7MU9vbJx6Lt1h2giUOjKSa3a/0yZQ\\n98E5yFeHkYwCIEuXK0e48OIsNeYgZymwtlVjGIrNjcdURklttJ2M9L4Y\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIB+YWnQPI17f+CZf911kR3uI9fvL\\nc/EzmmaDMt5d8EdFSsDB6J6kh2MgF4qmsdJmOBJgYimCbY3vQLAZgkqnCaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni01\\ndHJ2bDAKBggqhkjOPQQDAgNIADBFAiEAzBg7MU9vbJx6Lt1h2giUOjKSa3a/0yZQ\\n98E5yFeHkYwCIEuXK0e48OIsNeYgZymwtlVjGIrNjcdURklttJ2M9L4Y\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ fabric-ca-client getcacert -d -u https://ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp\n2020/11/06 16:20:25 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:25 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 16:20:25 [DEBUG] Client configuration settings: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 16:20:25 [DEBUG] Entered runGetCACert\n2020/11/06 16:20:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 16:20:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203960a0 DummyKeystore:<nil>}\n2020/11/06 16:20:25 [INFO] TLS Enabled\n2020/11/06 16:20:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:25 [DEBUG] Client Cert File: \n2020/11/06 16:20:25 [DEBUG] Client Key File: \n2020/11/06 16:20:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:25 [DEBUG] Sending request\nPOST https://ca.walmart:7054/cainfo\n{}\nError: POST failure of request: POST https://ca.walmart:7054/cainfo\n{}: Post https://ca.walmart:7054/cainfo: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*': No such file or directory\n+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:26 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:26 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:26 [DEBUG] Checking for enrollment\n2020/11/06 16:20:26 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420476450}\n2020/11/06 16:20:26 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4204764b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:26 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204846e0 DummyKeystore:<nil>}\n2020/11/06 16:20:26 [INFO] TLS Enabled\n2020/11/06 16:20:26 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:26 [DEBUG] Client Cert File: \n2020/11/06 16:20:26 [DEBUG] Client Key File: \n2020/11/06 16:20:26 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:26 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:26 [DEBUG] Home directory: /root/ca-tools/walmart/admin\n2020/11/06 16:20:26 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml\n2020/11/06 16:20:26 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a6690}\n2020/11/06 16:20:26 [DEBUG] Entered runEnroll\n2020/11/06 16:20:26 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:26 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a6690}\n2020/11/06 16:20:26 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201a66f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:26 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201abcf0 DummyKeystore:<nil>}\n2020/11/06 16:20:26 [INFO] TLS Enabled\n2020/11/06 16:20:26 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:26 [DEBUG] Client Cert File: \n2020/11/06 16:20:26 [DEBUG] Client Key File: \n2020/11/06 16:20:26 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:26 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:26 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:26 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:26 [INFO] encoded CSR\n2020/11/06 16:20:26 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABH5f+VSPWgfP6ZZutj1CJuON\\ni1hAJksdyjKVmfGER2wJn8uVJ6Ia9PKFF/yTMv+rvj47CMeYyKBNzfq4KuksrVqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgYgZlzl9PhmLnZSCUXcJj95vl/+jr\\nsbggOtZWtdvDy+0CICxvfUEBp3hBkeKS9WCdulA3bDlEz++BVAQ+EHqQsJBG\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABH5f+VSPWgfP6ZZutj1CJuON\\ni1hAJksdyjKVmfGER2wJn8uVJ6Ia9PKFF/yTMv+rvj47CMeYyKBNzfq4KuksrVqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgYgZlzl9PhmLnZSCUXcJj95vl/+jr\\nsbggOtZWtdvDy+0CICxvfUEBp3hBkeKS9WCdulA3bDlEz++BVAQ+EHqQsJBG\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts\n+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory\n+ mkdir /root/ca-tools/walmart/admin/msp/admincerts\n+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:26 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:26 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 16:20:26 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}\n2020/11/06 16:20:26 [DEBUG] Entered runEnroll\n2020/11/06 16:20:26 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:26 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}\n2020/11/06 16:20:26 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420288810 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:26 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420293dc0 DummyKeystore:<nil>}\n2020/11/06 16:20:26 [INFO] TLS Enabled\n2020/11/06 16:20:26 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:26 [DEBUG] Client Cert File: \n2020/11/06 16:20:26 [DEBUG] Client Key File: \n2020/11/06 16:20:26 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:26 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:26 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:26 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:26 [INFO] encoded CSR\n2020/11/06 16:20:26 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPx6Eh5O2Gfm4DQiJd9jgqyE\\nr57Nid8qVfrSIip9YtoW7vRRERWnBLrRHc6J9W5IIkidrJ0TIcQ5NZJ7c7bhyKqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgLHUFwxsUJvLlH4nkpSkE/hONu3AS\\n5mvaCxITNED+j+ACIGae6oVSJzdtkFNojGyNYHslC0UWURvuahjRW/4TCUmB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPx6Eh5O2Gfm4DQiJd9jgqyE\\nr57Nid8qVfrSIip9YtoW7vRRERWnBLrRHc6J9W5IIkidrJ0TIcQ5NZJ7c7bhyKqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgLHUFwxsUJvLlH4nkpSkE/hONu3AS\\n5mvaCxITNED+j+ACIGae6oVSJzdtkFNojGyNYHslC0UWURvuahjRW/4TCUmB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls\n+ cp /root/ca-tools/walmart/admin/tls/keystore/7985ad4d4fb382a4b4504439cfb51d0c10b64cf62ebc516f23d167ec58d5dd2f_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key\n+ cp '/root/ca-tools/walmart/admin/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/admin/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/admin/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/admin/tls/tlscacerts/*': No such file or directory\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:25 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:25 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:25 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42047c750}",
        "2020/11/06 16:20:25 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:25 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42047c750}",
        "2020/11/06 16:20:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42047c7b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420483c70 DummyKeystore:<nil>}",
        "2020/11/06 16:20:25 [INFO] TLS Enabled",
        "2020/11/06 16:20:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:25 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:25 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:25 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:25 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:25 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:25 [INFO] encoded CSR",
        "2020/11/06 16:20:25 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIB+YWnQPI17f+CZf911kR3uI9fvL\\nc/EzmmaDMt5d8EdFSsDB6J6kh2MgF4qmsdJmOBJgYimCbY3vQLAZgkqnCaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni01\\ndHJ2bDAKBggqhkjOPQQDAgNIADBFAiEAzBg7MU9vbJx6Lt1h2giUOjKSa3a/0yZQ\\n98E5yFeHkYwCIEuXK0e48OIsNeYgZymwtlVjGIrNjcdURklttJ2M9L4Y\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIB+YWnQPI17f+CZf911kR3uI9fvL\\nc/EzmmaDMt5d8EdFSsDB6J6kh2MgF4qmsdJmOBJgYimCbY3vQLAZgkqnCaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni01\\ndHJ2bDAKBggqhkjOPQQDAgNIADBFAiEAzBg7MU9vbJx6Lt1h2giUOjKSa3a/0yZQ\\n98E5yFeHkYwCIEuXK0e48OIsNeYgZymwtlVjGIrNjcdURklttJ2M9L4Y\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ fabric-ca-client getcacert -d -u https://ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp",
        "2020/11/06 16:20:25 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:25 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:25 [DEBUG] Client configuration settings: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 16:20:25 [DEBUG] Entered runGetCACert",
        "2020/11/06 16:20:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 16:20:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203960a0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:25 [INFO] TLS Enabled",
        "2020/11/06 16:20:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:25 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:25 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:25 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/cainfo",
        "{}",
        "Error: POST failure of request: POST https://ca.walmart:7054/cainfo",
        "{}: Post https://ca.walmart:7054/cainfo: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*': No such file or directory",
        "+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:26 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:26 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:26 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:26 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420476450}",
        "2020/11/06 16:20:26 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4204764b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:26 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204846e0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:26 [INFO] TLS Enabled",
        "2020/11/06 16:20:26 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:26 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:26 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:26 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:26 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:26 [DEBUG] Home directory: /root/ca-tools/walmart/admin",
        "2020/11/06 16:20:26 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:26 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a6690}",
        "2020/11/06 16:20:26 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:26 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:26 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a6690}",
        "2020/11/06 16:20:26 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201a66f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:26 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201abcf0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:26 [INFO] TLS Enabled",
        "2020/11/06 16:20:26 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:26 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:26 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:26 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:26 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:26 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:26 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:26 [INFO] encoded CSR",
        "2020/11/06 16:20:26 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABH5f+VSPWgfP6ZZutj1CJuON\\ni1hAJksdyjKVmfGER2wJn8uVJ6Ia9PKFF/yTMv+rvj47CMeYyKBNzfq4KuksrVqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgYgZlzl9PhmLnZSCUXcJj95vl/+jr\\nsbggOtZWtdvDy+0CICxvfUEBp3hBkeKS9WCdulA3bDlEz++BVAQ+EHqQsJBG\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABH5f+VSPWgfP6ZZutj1CJuON\\ni1hAJksdyjKVmfGER2wJn8uVJ6Ia9PKFF/yTMv+rvj47CMeYyKBNzfq4KuksrVqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgYgZlzl9PhmLnZSCUXcJj95vl/+jr\\nsbggOtZWtdvDy+0CICxvfUEBp3hBkeKS9WCdulA3bDlEz++BVAQ+EHqQsJBG\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir /root/ca-tools/walmart/admin/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:26 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:26 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:26 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}",
        "2020/11/06 16:20:26 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:26 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:26 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}",
        "2020/11/06 16:20:26 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420288810 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:26 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420293dc0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:26 [INFO] TLS Enabled",
        "2020/11/06 16:20:26 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:26 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:26 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:26 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:26 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:26 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:26 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:26 [INFO] encoded CSR",
        "2020/11/06 16:20:26 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPx6Eh5O2Gfm4DQiJd9jgqyE\\nr57Nid8qVfrSIip9YtoW7vRRERWnBLrRHc6J9W5IIkidrJ0TIcQ5NZJ7c7bhyKqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgLHUFwxsUJvLlH4nkpSkE/hONu3AS\\n5mvaCxITNED+j+ACIGae6oVSJzdtkFNojGyNYHslC0UWURvuahjRW/4TCUmB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPx6Eh5O2Gfm4DQiJd9jgqyE\\nr57Nid8qVfrSIip9YtoW7vRRERWnBLrRHc6J9W5IIkidrJ0TIcQ5NZJ7c7bhyKqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgLHUFwxsUJvLlH4nkpSkE/hONu3AS\\n5mvaCxITNED+j+ACIGae6oVSJzdtkFNojGyNYHslC0UWURvuahjRW/4TCUmB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/admin/tls/keystore/7985ad4d4fb382a4b4504439cfb51d0c10b64cf62ebc516f23d167ec58d5dd2f_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key",
        "+ cp '/root/ca-tools/walmart/admin/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/admin/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/admin/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/admin/tls/tlscacerts/*': No such file or directory",
        "+ cd /"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:48
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616 `" && echo ansible-tmp-1604679626.3120124-1507-75521711623616="` echo /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpil875xzn TO /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616/ /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679626.3120124-1507-75521711623616/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.717503",
    "end": "2020-11-06 16:20:27.164579",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:26.447076",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call orderer.yaml for each orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826 `" && echo ansible-tmp-1604679627.3569338-1549-254303768341826="` echo /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpqkzbep5a TO /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826/ /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679627.3569338-1549-254303768341826/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
    "delta": "0:00:00.051746",
    "end": "2020-11-06 16:20:27.540661",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:27.488915",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698 `" && echo ansible-tmp-1604679627.6344163-1586-111199854100698="` echo /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpt8bg0art TO /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698/ /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679627.6344163-1586-111199854100698/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
    "delta": "0:00:00.049831",
    "end": "2020-11-06 16:20:27.814722",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:27.764891",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955 `" && echo ansible-tmp-1604679627.9408138-1624-40395213319955="` echo /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8zf2l331 TO /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955/ /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679627.9408138-1624-40395213319955/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.305277",
    "end": "2020-11-06 16:20:29.376070",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:28.070793",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859 `" && echo ansible-tmp-1604679629.4435906-1669-148114503608859="` echo /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpua8nrnn7 TO /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859/ /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679629.4435906-1669-148114503608859/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025 `" && echo ansible-tmp-1604679629.6522079-1697-18721671946025="` echo /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpp9hcdnuu TO /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025/ /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679629.6522079-1697-18721671946025/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer1.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer1.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer1.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer1.sh",
    "size": 2587,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808 `" && echo ansible-tmp-1604679629.824025-1697-118191334668808="` echo /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpmlir_ucs TO /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808/ /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679629.824025-1697-118191334668808/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095 `" && echo ansible-tmp-1604679630.0350053-1747-42347336386095="` echo /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpb3t5f9pk TO /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095/ /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679630.0350053-1747-42347336386095/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.701513",
    "end": "2020-11-06 16:20:33.868588",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:30.167075",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905 `" && echo ansible-tmp-1604679633.9376543-1797-242570292479905="` echo /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmplem2b7x4 TO /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905/ /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679633.9376543-1797-242570292479905/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.608385",
    "end": "2020-11-06 16:20:35.680244",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:34.071859",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer1.walmart-net\n+ CSR_HOSTS=orderer1.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:34 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:34 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:34 [DEBUG] Checking for enrollment\n2020/11/06 16:20:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8540}\n2020/11/06 16:20:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b85a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420394e40 DummyKeystore:<nil>}\n2020/11/06 16:20:34 [INFO] TLS Enabled\n2020/11/06 16:20:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:34 [DEBUG] Client Cert File: \n2020/11/06 16:20:34 [DEBUG] Client Key File: \n2020/11/06 16:20:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:34 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:34 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a630}\n2020/11/06 16:20:34 [DEBUG] Entered runEnroll\n2020/11/06 16:20:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a630}\n2020/11/06 16:20:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42045fb80 DummyKeystore:<nil>}\n2020/11/06 16:20:34 [INFO] TLS Enabled\n2020/11/06 16:20:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:34 [DEBUG] Client Cert File: \n2020/11/06 16:20:34 [DEBUG] Client Key File: \n2020/11/06 16:20:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:34 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:34 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:34 [INFO] encoded CSR\n2020/11/06 16:20:34 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXvZ9M353UKmgO2RLJ\\nzS2VmuRw4ILvD6GF2FoR6/UpGkoXueIHoSnp/0+7ETAhNaZ89bYOOCKQ/KcJdpKK\\nieoAoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIBf/sAxoNKBsi7xoyuxCUqyQZ7qK+7cqevH9kRNj\\nYl1wAiAxzPadCF6xFNOIiUUKZELykFUiURmF9es/YjUuJTYe3w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXvZ9M353UKmgO2RLJ\\nzS2VmuRw4ILvD6GF2FoR6/UpGkoXueIHoSnp/0+7ETAhNaZ89bYOOCKQ/KcJdpKK\\nieoAoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIBf/sAxoNKBsi7xoyuxCUqyQZ7qK+7cqevH9kRNj\\nYl1wAiAxzPadCF6xFNOIiUUKZELykFUiURmF9es/YjUuJTYe3w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/da35f0bd371ca329b2943afa3136ebba1190c1a8346dc292376f68f97ae6471f_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:34 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}\n2020/11/06 16:20:34 [DEBUG] Entered runEnroll\n2020/11/06 16:20:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}\n2020/11/06 16:20:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c26f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203998d0 DummyKeystore:<nil>}\n2020/11/06 16:20:34 [INFO] TLS Enabled\n2020/11/06 16:20:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:34 [DEBUG] Client Cert File: \n2020/11/06 16:20:34 [DEBUG] Client Key File: \n2020/11/06 16:20:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:34 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:34 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:34 [INFO] encoded CSR\n2020/11/06 16:20:34 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHzuCSi5M3JEsE1mTRB/\\nso8hIc81UikHcs4fqndLCSPyLXVcsvmOHxEhkA1VLrpA9Bw34b57aHzIZamFECaI\\nAnygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgNVphMJukcZ56tXQqxWyiDufK\\nSE+TP9JdUIhOkFIS9WYCIC0ivQyJ6EGuWh6nxurgXhjBV0iaTIJgEG7SNco14kPy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHzuCSi5M3JEsE1mTRB/\\nso8hIc81UikHcs4fqndLCSPyLXVcsvmOHxEhkA1VLrpA9Bw34b57aHzIZamFECaI\\nAnygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgNVphMJukcZ56tXQqxWyiDufK\\nSE+TP9JdUIhOkFIS9WYCIC0ivQyJ6EGuWh6nxurgXhjBV0iaTIJgEG7SNco14kPy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer1s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer1 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer1 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:35 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:35 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:35 [DEBUG] Checking for enrollment\n2020/11/06 16:20:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0660}\n2020/11/06 16:20:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c06c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395740 DummyKeystore:<nil>}\n2020/11/06 16:20:35 [INFO] TLS Enabled\n2020/11/06 16:20:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:35 [DEBUG] Client Cert File: \n2020/11/06 16:20:35 [DEBUG] Client Key File: \n2020/11/06 16:20:35 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:35 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 16:20:35 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 16:20:35 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml\n2020/11/06 16:20:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce840}\n2020/11/06 16:20:35 [DEBUG] Entered runEnroll\n2020/11/06 16:20:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce840}\n2020/11/06 16:20:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ce8a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a0660 DummyKeystore:<nil>}\n2020/11/06 16:20:35 [INFO] TLS Enabled\n2020/11/06 16:20:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:35 [DEBUG] Client Cert File: \n2020/11/06 16:20:35 [DEBUG] Client Key File: \n2020/11/06 16:20:35 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:35 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:35 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:35 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:35 [INFO] encoded CSR\n2020/11/06 16:20:35 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEQOqaCzIG+bMCNFBJl5fkBS\\ny3MqUPiMmugVQhPhBOrB9DQwiDsjHD5jWupQ15tN+HQXatbw7HTClMiUjIwTbuyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgbMYY4o27eDiyjPp58jkbFllQaN3z\\nG8OyxJPS/IpJOVoCIDV7lAMKuaQtJFCU1t94R/zNKlPFBRSsLszQQgcEmOvg\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEQOqaCzIG+bMCNFBJl5fkBS\\ny3MqUPiMmugVQhPhBOrB9DQwiDsjHD5jWupQ15tN+HQXatbw7HTClMiUjIwTbuyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgbMYY4o27eDiyjPp58jkbFllQaN3z\\nG8OyxJPS/IpJOVoCIDV7lAMKuaQtJFCU1t94R/zNKlPFBRSsLszQQgcEmOvg\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 16:20:35 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2600}\n2020/11/06 16:20:35 [DEBUG] Entered runEnroll\n2020/11/06 16:20:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2600}\n2020/11/06 16:20:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203955f0 DummyKeystore:<nil>}\n2020/11/06 16:20:35 [INFO] TLS Enabled\n2020/11/06 16:20:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:35 [DEBUG] Client Cert File: \n2020/11/06 16:20:35 [DEBUG] Client Key File: \n2020/11/06 16:20:35 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:35 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:35 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:35 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:35 [INFO] encoded CSR\n2020/11/06 16:20:35 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWjCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCINO6P4sCdTo6Ke37tHMR5z/2SPRmhodi/mNxvOLrS8oH0YjJwTlGf/9Jd4Alls\\nqblG3fDGPiB2bls4U3HWwTugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRgAwQwIfbIXr\\nDuryqL0MOgD4ZgSD415jPBsDIqfwn6j8y1LmXgIgRaxW5gdl42pLp5ws7YrUzqXC\\njttmW5xDdOFIwUwn0pg=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWjCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCINO6P4sCdTo6Ke37tHMR5z/2SPRmhodi/mNxvOLrS8oH0YjJwTlGf/9Jd4Alls\\nqblG3fDGPiB2bls4U3HWwTugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRgAwQwIfbIXr\\nDuryqL0MOgD4ZgSD415jPBsDIqfwn6j8y1LmXgIgRaxW5gdl42pLp5ws7YrUzqXC\\njttmW5xDdOFIwUwn0pg=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/bfa518932845c1d2ef75b3e8ddcdb950962887a4d943f427fe1d1194b83abe63_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer1.walmart-net",
        "+ CSR_HOSTS=orderer1.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:34 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:34 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:34 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8540}",
        "2020/11/06 16:20:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b85a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420394e40 DummyKeystore:<nil>}",
        "2020/11/06 16:20:34 [INFO] TLS Enabled",
        "2020/11/06 16:20:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:34 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:34 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:34 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:34 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a630}",
        "2020/11/06 16:20:34 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a630}",
        "2020/11/06 16:20:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42045fb80 DummyKeystore:<nil>}",
        "2020/11/06 16:20:34 [INFO] TLS Enabled",
        "2020/11/06 16:20:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:34 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:34 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:34 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:34 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:34 [INFO] encoded CSR",
        "2020/11/06 16:20:34 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXvZ9M353UKmgO2RLJ\\nzS2VmuRw4ILvD6GF2FoR6/UpGkoXueIHoSnp/0+7ETAhNaZ89bYOOCKQ/KcJdpKK\\nieoAoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIBf/sAxoNKBsi7xoyuxCUqyQZ7qK+7cqevH9kRNj\\nYl1wAiAxzPadCF6xFNOIiUUKZELykFUiURmF9es/YjUuJTYe3w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXvZ9M353UKmgO2RLJ\\nzS2VmuRw4ILvD6GF2FoR6/UpGkoXueIHoSnp/0+7ETAhNaZ89bYOOCKQ/KcJdpKK\\nieoAoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIBf/sAxoNKBsi7xoyuxCUqyQZ7qK+7cqevH9kRNj\\nYl1wAiAxzPadCF6xFNOIiUUKZELykFUiURmF9es/YjUuJTYe3w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/da35f0bd371ca329b2943afa3136ebba1190c1a8346dc292376f68f97ae6471f_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:34 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}",
        "2020/11/06 16:20:34 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}",
        "2020/11/06 16:20:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c26f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203998d0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:34 [INFO] TLS Enabled",
        "2020/11/06 16:20:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:34 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:34 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:34 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:34 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:34 [INFO] encoded CSR",
        "2020/11/06 16:20:34 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHzuCSi5M3JEsE1mTRB/\\nso8hIc81UikHcs4fqndLCSPyLXVcsvmOHxEhkA1VLrpA9Bw34b57aHzIZamFECaI\\nAnygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgNVphMJukcZ56tXQqxWyiDufK\\nSE+TP9JdUIhOkFIS9WYCIC0ivQyJ6EGuWh6nxurgXhjBV0iaTIJgEG7SNco14kPy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHzuCSi5M3JEsE1mTRB/\\nso8hIc81UikHcs4fqndLCSPyLXVcsvmOHxEhkA1VLrpA9Bw34b57aHzIZamFECaI\\nAnygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgNVphMJukcZ56tXQqxWyiDufK\\nSE+TP9JdUIhOkFIS9WYCIC0ivQyJ6EGuWh6nxurgXhjBV0iaTIJgEG7SNco14kPy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer1s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer1 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer1 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:35 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:35 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:35 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0660}",
        "2020/11/06 16:20:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c06c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395740 DummyKeystore:<nil>}",
        "2020/11/06 16:20:35 [INFO] TLS Enabled",
        "2020/11/06 16:20:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:35 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:35 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:35 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:35 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 16:20:35 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 16:20:35 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce840}",
        "2020/11/06 16:20:35 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce840}",
        "2020/11/06 16:20:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ce8a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a0660 DummyKeystore:<nil>}",
        "2020/11/06 16:20:35 [INFO] TLS Enabled",
        "2020/11/06 16:20:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:35 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:35 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:35 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:35 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:35 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:35 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:35 [INFO] encoded CSR",
        "2020/11/06 16:20:35 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEQOqaCzIG+bMCNFBJl5fkBS\\ny3MqUPiMmugVQhPhBOrB9DQwiDsjHD5jWupQ15tN+HQXatbw7HTClMiUjIwTbuyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgbMYY4o27eDiyjPp58jkbFllQaN3z\\nG8OyxJPS/IpJOVoCIDV7lAMKuaQtJFCU1t94R/zNKlPFBRSsLszQQgcEmOvg\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEQOqaCzIG+bMCNFBJl5fkBS\\ny3MqUPiMmugVQhPhBOrB9DQwiDsjHD5jWupQ15tN+HQXatbw7HTClMiUjIwTbuyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgbMYY4o27eDiyjPp58jkbFllQaN3z\\nG8OyxJPS/IpJOVoCIDV7lAMKuaQtJFCU1t94R/zNKlPFBRSsLszQQgcEmOvg\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 16:20:35 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2600}",
        "2020/11/06 16:20:35 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2600}",
        "2020/11/06 16:20:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203955f0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:35 [INFO] TLS Enabled",
        "2020/11/06 16:20:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:35 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:35 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:35 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:35 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:35 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:35 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:35 [INFO] encoded CSR",
        "2020/11/06 16:20:35 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWjCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCINO6P4sCdTo6Ke37tHMR5z/2SPRmhodi/mNxvOLrS8oH0YjJwTlGf/9Jd4Alls\\nqblG3fDGPiB2bls4U3HWwTugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRgAwQwIfbIXr\\nDuryqL0MOgD4ZgSD415jPBsDIqfwn6j8y1LmXgIgRaxW5gdl42pLp5ws7YrUzqXC\\njttmW5xDdOFIwUwn0pg=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWjCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBCINO6P4sCdTo6Ke37tHMR5z/2SPRmhodi/mNxvOLrS8oH0YjJwTlGf/9Jd4Alls\\nqblG3fDGPiB2bls4U3HWwTugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRgAwQwIfbIXr\\nDuryqL0MOgD4ZgSD415jPBsDIqfwn6j8y1LmXgIgRaxW5gdl42pLp5ws7YrUzqXC\\njttmW5xDdOFIwUwn0pg=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/bfa518932845c1d2ef75b3e8ddcdb950962887a4d943f427fe1d1194b83abe63_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114 `" && echo ansible-tmp-1604679635.7496974-1842-75909627342114="` echo /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpklhxqi7n TO /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114/ /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679635.7496974-1842-75909627342114/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.686780",
    "end": "2020-11-06 16:20:36.567424",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:35.880644",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519 `" && echo ansible-tmp-1604679636.639431-1883-144535241158519="` echo /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpih5jvd0_ TO /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519/ /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679636.639431-1883-144535241158519/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.123049",
    "end": "2020-11-06 16:20:36.893876",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:36.770827",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476 `" && echo ansible-tmp-1604679636.9645166-1934-205946959650476="` echo /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0kjki7ql TO /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476/ /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679636.9645166-1934-205946959650476/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer1-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5RENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9EUTVXaGNOTWpNd09EQXpNRGd5Ck9EUTVXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TVM1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFkCmFncTQ3ZjdueVp6eHZRVnM5UjRoV0VQeHVpZk1HZEttRVFveW52NVUrWDNlRndLYytQSkZPekJKNnlQMVBlRXIKbENGWHR2ZmxTYzYzb1dXOHpqMGhvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVVJqNWFNMDRUd3dCSk43SG9oWjhpbmpQcDdWNHdDZ1lJS29aSXpqMEVBd0lEClJ3QXdSQUlnUVVtNmRUNG41VlErT0I3TXMxckFtNVV6ZzNwS1hzNmlicnBJbUVTWkU2OENJQWw2d3I4enUrMFEKT011VTBTREZVMjhKamZjSnFQb1hBLzc3ZFlTRHhHNWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhEQ0NBWmFnQXdJQkFnSVVNemhzd2VRL1l4R1RBbHFkUDFpdmtNWXg4NzB3Q2dZSUtvWkl6ajBFQXdJdwpWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEVlFRRERBcGpZUzUzWVd4dFlYSjBNQjRYRFRJd01URXcKTmpBNE1Ua3hObG9YRFRJek1EZ3lOekE0TVRreE5sb3dWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTQpCa3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEClZRUUREQXBqWVM1M1lXeHRZWEowTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFeG9JdDhlWisKOVhHQ0M3VzdMbEdVK2lVUTV2bmFxem1PczF0Snc2anZMYm40ZDlLTk56NHVuclg1LzViM3E0WWtMeEpZT3poTQpYYzd3N3JwbXFLV0VzcU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3CkhRWURWUjBPQkJZRUZKNGlUblB4dk1wbVNLSXFkN2ZmaG5tQzhNOEFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUMKSVFEZ3dQZlFZTVBDYjJiaXdma09UNVZkVnVFUkh2SWdidGxrdHpWVkZCTjl0Z0lnTmw0T3AyVEdIT1kwcXRoRAp2dENDMUNvMGhEbHZKTGVyYUxwYlYxdGtHVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjRXFDbXgycWJFcnQyZmd0ODZhR2ZGWVdZcGx2Z2pQK00yREpqL2pwdnlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFdvS3VPMys1OG1jOGIwRmJQVWVJVmhEOGJvbnpCblNwaEVLTXA3K1ZQbDkzaGNDblBqeQpSVHN3U2VzajlUM2hLNVFoVjdiMzVVbk90NkZsdk00OUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:28:49Z",
                "name": "orderer1-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408734",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer1-walmart-net-ambassador-certs",
                "uid": "a5a7499f-2fa9-4ba5-9662-97fa6bef6281"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264 `" && echo ansible-tmp-1604679637.59328-1962-226307119751264="` echo /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp9hubo5km TO /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264/ /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679637.59328-1962-226307119751264/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
    "delta": "0:00:00.052325",
    "end": "2020-11-06 16:20:37.775446",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:37.723121",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138 `" && echo ansible-tmp-1604679637.9307847-2003-205998394965138="` echo /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1l6qgdqh TO /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138/ /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679637.9307847-2003-205998394965138/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
    "delta": "0:00:00.062857",
    "end": "2020-11-06 16:20:38.124520",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:38.061663",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373 `" && echo ansible-tmp-1604679638.1953204-2040-91906658283373="` echo /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpqkyhc0p2 TO /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373/ /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679638.1953204-2040-91906658283373/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
    "delta": "0:00:00.049671",
    "end": "2020-11-06 16:20:38.375471",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:38.325800",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403 `" && echo ansible-tmp-1604679638.4693725-2076-196478964148403="` echo /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_hotr78z TO /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403/ /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679638.4693725-2076-196478964148403/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
    "delta": "0:00:00.046446",
    "end": "2020-11-06 16:20:38.651154",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:38.604708",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731 `" && echo ansible-tmp-1604679638.7813957-2114-147860476836731="` echo /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpmfe0wmp0 TO /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731/ /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679638.7813957-2114-147860476836731/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.258711",
    "end": "2020-11-06 16:20:40.174172",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:38.915461",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421 `" && echo ansible-tmp-1604679640.2420487-2159-214341994987421="` echo /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_mwm9lsw TO /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421/ /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679640.2420487-2159-214341994987421/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523 `" && echo ansible-tmp-1604679640.4447234-2185-14691149903523="` echo /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp3froxgym TO /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523/ /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679640.4447234-2185-14691149903523/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer2.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer2.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer2.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer2.sh",
    "size": 2587,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424 `" && echo ansible-tmp-1604679640.619383-2185-158412678868424="` echo /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpuhlgwp5g TO /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424/ /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679640.619383-2185-158412678868424/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163 `" && echo ansible-tmp-1604679640.8218951-2235-157452673536163="` echo /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_dry9lgw TO /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163/ /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679640.8218951-2235-157452673536163/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.892062",
    "end": "2020-11-06 16:20:44.852921",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:40.960859",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657 `" && echo ansible-tmp-1604679644.9204624-2285-235232200949657="` echo /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp703pqhcg TO /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657/ /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679644.9204624-2285-235232200949657/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.627191",
    "end": "2020-11-06 16:20:46.681778",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:45.054587",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer2.walmart-net\n+ CSR_HOSTS=orderer2.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:45 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:45 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:45 [DEBUG] Checking for enrollment\n2020/11/06 16:20:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5a0}\n2020/11/06 16:20:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038e600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420213300 DummyKeystore:<nil>}\n2020/11/06 16:20:45 [INFO] TLS Enabled\n2020/11/06 16:20:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:45 [DEBUG] Client Cert File: \n2020/11/06 16:20:45 [DEBUG] Client Key File: \n2020/11/06 16:20:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:45 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:45 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8690}\n2020/11/06 16:20:45 [DEBUG] Entered runEnroll\n2020/11/06 16:20:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8690}\n2020/11/06 16:20:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b86f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3c30 DummyKeystore:<nil>}\n2020/11/06 16:20:45 [INFO] TLS Enabled\n2020/11/06 16:20:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:45 [DEBUG] Client Cert File: \n2020/11/06 16:20:45 [DEBUG] Client Key File: \n2020/11/06 16:20:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:45 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:45 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:45 [INFO] encoded CSR\n2020/11/06 16:20:45 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATJGEMT7QxX1mTVn//O\\nU932ZFqohJEcHUNdhNd0JUrFdEkvFQvfOq9ZGt5Sx9FwwxRV7zpl2cuy42eTonRQ\\nOgX/oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIF1YapBmhMyUQLGg439KO0v+h4sec838OEPsXLJM\\n4jFMAiAgM/tnuN+3ZK4dryGYgVK1GjjX83UHkWqas+lNngASDw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATJGEMT7QxX1mTVn//O\\nU932ZFqohJEcHUNdhNd0JUrFdEkvFQvfOq9ZGt5Sx9FwwxRV7zpl2cuy42eTonRQ\\nOgX/oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIF1YapBmhMyUQLGg439KO0v+h4sec838OEPsXLJM\\n4jFMAiAgM/tnuN+3ZK4dryGYgVK1GjjX83UHkWqas+lNngASDw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/20e3508b617a4c7127df4981870af4f015b392b1784de655abc26a3db09c4cb2_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:45 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205d8690}\n2020/11/06 16:20:45 [DEBUG] Entered runEnroll\n2020/11/06 16:20:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205d8690}\n2020/11/06 16:20:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205d86f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e3880 DummyKeystore:<nil>}\n2020/11/06 16:20:45 [INFO] TLS Enabled\n2020/11/06 16:20:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:45 [DEBUG] Client Cert File: \n2020/11/06 16:20:45 [DEBUG] Client Key File: \n2020/11/06 16:20:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:45 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:45 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:45 [INFO] encoded CSR\n2020/11/06 16:20:45 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMqOco1hBtBH02AWrjPh\\n249cYYV+tyA1/erp68/V+H52Imq/xOhh2fD+eSBo8yJ5mSpnVbqENXKR14QzRdbP\\n3CqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgANTHo5fEuy6h9UP3FUgoLZA+\\nEgJGJzeuIsfzYqF2sgQCIHYULZuFuyWFulH4ns8tXhIqr97T9I97yrWV55OuMuHP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMqOco1hBtBH02AWrjPh\\n249cYYV+tyA1/erp68/V+H52Imq/xOhh2fD+eSBo8yJ5mSpnVbqENXKR14QzRdbP\\n3CqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgANTHo5fEuy6h9UP3FUgoLZA+\\nEgJGJzeuIsfzYqF2sgQCIHYULZuFuyWFulH4ns8tXhIqr97T9I97yrWV55OuMuHP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer2s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer2 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer2 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:46 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:46 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:46 [DEBUG] Checking for enrollment\n2020/11/06 16:20:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0630}\n2020/11/06 16:20:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a0690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd730 DummyKeystore:<nil>}\n2020/11/06 16:20:46 [INFO] TLS Enabled\n2020/11/06 16:20:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:46 [DEBUG] Client Cert File: \n2020/11/06 16:20:46 [DEBUG] Client Key File: \n2020/11/06 16:20:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:46 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 16:20:46 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 16:20:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}\n2020/11/06 16:20:46 [DEBUG] Entered runEnroll\n2020/11/06 16:20:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}\n2020/11/06 16:20:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204644e0 DummyKeystore:<nil>}\n2020/11/06 16:20:46 [INFO] TLS Enabled\n2020/11/06 16:20:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:46 [DEBUG] Client Cert File: \n2020/11/06 16:20:46 [DEBUG] Client Key File: \n2020/11/06 16:20:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:46 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:46 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:46 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:46 [INFO] encoded CSR\n2020/11/06 16:20:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGkLCq6DYjx5JfFLEoScUw6N\\nlhrtGdfPOgVZc7i7irMBSsLKzcfe6uMpovY+oM4TdpqDOJMyEp7j16rY5C7XJsqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgAnax3Ze5WR9G1aqu8xIYo45labR9\\nRJ84BGQQ30c8qroCIHGtpBT35QmFQwVGQOKj5EIijXndUdgbKKI+NacgbPhH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGkLCq6DYjx5JfFLEoScUw6N\\nlhrtGdfPOgVZc7i7irMBSsLKzcfe6uMpovY+oM4TdpqDOJMyEp7j16rY5C7XJsqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgAnax3Ze5WR9G1aqu8xIYo45labR9\\nRJ84BGQQ30c8qroCIHGtpBT35QmFQwVGQOKj5EIijXndUdgbKKI+NacgbPhH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 16:20:46 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205da690}\n2020/11/06 16:20:46 [DEBUG] Entered runEnroll\n2020/11/06 16:20:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205da690}\n2020/11/06 16:20:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205da6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e19d0 DummyKeystore:<nil>}\n2020/11/06 16:20:46 [INFO] TLS Enabled\n2020/11/06 16:20:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:46 [DEBUG] Client Cert File: \n2020/11/06 16:20:46 [DEBUG] Client Key File: \n2020/11/06 16:20:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:46 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:46 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:46 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:46 [INFO] encoded CSR\n2020/11/06 16:20:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBGvGG5TdbBmBqkbBhZD0WYC380fKtdjW5azxWipfXc9P1QUcC4tBxLdWcxYxmYCY\\nmyVmT/JYHxiL84VWREu7U3qgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgOAGb\\n6FpWDWfX9/vA7JVI8q8iyNQp3b8mVgN6bNHTSq4CIEgckZyA5VW/KAntFe9hZt49\\nrpDszz3+WQG65pny2ly/\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBGvGG5TdbBmBqkbBhZD0WYC380fKtdjW5azxWipfXc9P1QUcC4tBxLdWcxYxmYCY\\nmyVmT/JYHxiL84VWREu7U3qgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgOAGb\\n6FpWDWfX9/vA7JVI8q8iyNQp3b8mVgN6bNHTSq4CIEgckZyA5VW/KAntFe9hZt49\\nrpDszz3+WQG65pny2ly/\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/28d4ed9794a809c9371da5d5722580ffe7c499b83bd98b309d1faa5dea52634b_sk /root/ca-tools/walmart/client1/tls/keystore/bfa518932845c1d2ef75b3e8ddcdb950962887a4d943f427fe1d1194b83abe63_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer2.walmart-net",
        "+ CSR_HOSTS=orderer2.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:45 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:45 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:45 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5a0}",
        "2020/11/06 16:20:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038e600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420213300 DummyKeystore:<nil>}",
        "2020/11/06 16:20:45 [INFO] TLS Enabled",
        "2020/11/06 16:20:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:45 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:45 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:45 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:45 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8690}",
        "2020/11/06 16:20:45 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8690}",
        "2020/11/06 16:20:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b86f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3c30 DummyKeystore:<nil>}",
        "2020/11/06 16:20:45 [INFO] TLS Enabled",
        "2020/11/06 16:20:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:45 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:45 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:45 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:45 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:45 [INFO] encoded CSR",
        "2020/11/06 16:20:45 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATJGEMT7QxX1mTVn//O\\nU932ZFqohJEcHUNdhNd0JUrFdEkvFQvfOq9ZGt5Sx9FwwxRV7zpl2cuy42eTonRQ\\nOgX/oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIF1YapBmhMyUQLGg439KO0v+h4sec838OEPsXLJM\\n4jFMAiAgM/tnuN+3ZK4dryGYgVK1GjjX83UHkWqas+lNngASDw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcTCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATJGEMT7QxX1mTVn//O\\nU932ZFqohJEcHUNdhNd0JUrFdEkvFQvfOq9ZGt5Sx9FwwxRV7zpl2cuy42eTonRQ\\nOgX/oFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0cAMEQCIF1YapBmhMyUQLGg439KO0v+h4sec838OEPsXLJM\\n4jFMAiAgM/tnuN+3ZK4dryGYgVK1GjjX83UHkWqas+lNngASDw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/20e3508b617a4c7127df4981870af4f015b392b1784de655abc26a3db09c4cb2_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:45 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205d8690}",
        "2020/11/06 16:20:45 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205d8690}",
        "2020/11/06 16:20:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205d86f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e3880 DummyKeystore:<nil>}",
        "2020/11/06 16:20:45 [INFO] TLS Enabled",
        "2020/11/06 16:20:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:45 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:45 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:45 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:45 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:45 [INFO] encoded CSR",
        "2020/11/06 16:20:45 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMqOco1hBtBH02AWrjPh\\n249cYYV+tyA1/erp68/V+H52Imq/xOhh2fD+eSBo8yJ5mSpnVbqENXKR14QzRdbP\\n3CqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgANTHo5fEuy6h9UP3FUgoLZA+\\nEgJGJzeuIsfzYqF2sgQCIHYULZuFuyWFulH4ns8tXhIqr97T9I97yrWV55OuMuHP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMqOco1hBtBH02AWrjPh\\n249cYYV+tyA1/erp68/V+H52Imq/xOhh2fD+eSBo8yJ5mSpnVbqENXKR14QzRdbP\\n3CqgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgANTHo5fEuy6h9UP3FUgoLZA+\\nEgJGJzeuIsfzYqF2sgQCIHYULZuFuyWFulH4ns8tXhIqr97T9I97yrWV55OuMuHP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer2s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer2 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer2 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:46 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:46 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:46 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0630}",
        "2020/11/06 16:20:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a0690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd730 DummyKeystore:<nil>}",
        "2020/11/06 16:20:46 [INFO] TLS Enabled",
        "2020/11/06 16:20:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:46 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:46 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:46 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 16:20:46 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 16:20:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}",
        "2020/11/06 16:20:46 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}",
        "2020/11/06 16:20:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204644e0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:46 [INFO] TLS Enabled",
        "2020/11/06 16:20:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:46 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:46 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:46 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:46 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:46 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:46 [INFO] encoded CSR",
        "2020/11/06 16:20:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGkLCq6DYjx5JfFLEoScUw6N\\nlhrtGdfPOgVZc7i7irMBSsLKzcfe6uMpovY+oM4TdpqDOJMyEp7j16rY5C7XJsqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgAnax3Ze5WR9G1aqu8xIYo45labR9\\nRJ84BGQQ30c8qroCIHGtpBT35QmFQwVGQOKj5EIijXndUdgbKKI+NacgbPhH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGkLCq6DYjx5JfFLEoScUw6N\\nlhrtGdfPOgVZc7i7irMBSsLKzcfe6uMpovY+oM4TdpqDOJMyEp7j16rY5C7XJsqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgAnax3Ze5WR9G1aqu8xIYo45labR9\\nRJ84BGQQ30c8qroCIHGtpBT35QmFQwVGQOKj5EIijXndUdgbKKI+NacgbPhH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 16:20:46 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205da690}",
        "2020/11/06 16:20:46 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205da690}",
        "2020/11/06 16:20:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205da6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e19d0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:46 [INFO] TLS Enabled",
        "2020/11/06 16:20:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:46 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:46 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:46 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:46 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:46 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:46 [INFO] encoded CSR",
        "2020/11/06 16:20:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBGvGG5TdbBmBqkbBhZD0WYC380fKtdjW5azxWipfXc9P1QUcC4tBxLdWcxYxmYCY\\nmyVmT/JYHxiL84VWREu7U3qgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgOAGb\\n6FpWDWfX9/vA7JVI8q8iyNQp3b8mVgN6bNHTSq4CIEgckZyA5VW/KAntFe9hZt49\\nrpDszz3+WQG65pny2ly/\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBGvGG5TdbBmBqkbBhZD0WYC380fKtdjW5azxWipfXc9P1QUcC4tBxLdWcxYxmYCY\\nmyVmT/JYHxiL84VWREu7U3qgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgOAGb\\n6FpWDWfX9/vA7JVI8q8iyNQp3b8mVgN6bNHTSq4CIEgckZyA5VW/KAntFe9hZt49\\nrpDszz3+WQG65pny2ly/\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/28d4ed9794a809c9371da5d5722580ffe7c499b83bd98b309d1faa5dea52634b_sk /root/ca-tools/walmart/client1/tls/keystore/bfa518932845c1d2ef75b3e8ddcdb950962887a4d943f427fe1d1194b83abe63_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271 `" && echo ansible-tmp-1604679646.7518284-2330-145138381336271="` echo /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpibkfj3v5 TO /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271/ /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679646.7518284-2330-145138381336271/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.661093",
    "end": "2020-11-06 16:20:47.543334",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:46.882241",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664 `" && echo ansible-tmp-1604679647.615901-2371-163068994147664="` echo /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp4i058mlr TO /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664/ /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679647.615901-2371-163068994147664/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.099348",
    "end": "2020-11-06 16:20:47.845126",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:47.745778",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213 `" && echo ansible-tmp-1604679647.911563-2423-167546592112213="` echo /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpa2p7k4fc TO /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213/ /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679647.911563-2423-167546592112213/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer2-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5VENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9UQXdXaGNOTWpNd09EQXpNRGd5Ck9UQXdXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TWk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRQCkVnSmR2S1BGc0RoNno2MitGKzB4Nk8wa3JlNXJmTE5Kb0ppSVNBamprU0dCQ2N6MWhOR1FuWHZvbU5iMnJacC8KcCtzMDBIWXI3bllHQmhDVHNsTXFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVU40a1J1cDBMNXlVNVNab1dMbVc3NkFpK0d4OHdDZ1lJS29aSXpqMEVBd0lEClNBQXdSUUloQUlQR1FpRWFEWkJJYnhxT0pBdWVNMTNqNkpENktlY1A0dXVSWEczTm1YVU9BaUI5WU5RR1pZOWQKSWp3bWZVdENrR3drNytCalNsSmVBWTlzalBWM2ZuZmJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY5SERaSWExVE5TZkY3bmVRYVdFTzkyOVNnMVBKUXl4YTUvVmJXTzV0ZGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhJQ1hieWp4YkE0ZXMrdHZoZnRNZWp0SkszdWEzeXpTYUNZaUVnSTQ1RWhnUW5NOVlUUgprSjE3NkpqVzlxMmFmNmZyTk5CMksrNTJCZ1lRazdKVEtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:00Z",
                "name": "orderer2-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408765",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer2-walmart-net-ambassador-certs",
                "uid": "3a84af21-a525-4755-8465-cda893746ea9"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246 `" && echo ansible-tmp-1604679648.5297105-2451-92911686679246="` echo /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp70oz95gx TO /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246/ /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679648.5297105-2451-92911686679246/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
    "delta": "0:00:00.083138",
    "end": "2020-11-06 16:20:48.743332",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:48.660194",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383 `" && echo ansible-tmp-1604679648.905446-2492-114889336057383="` echo /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmposidetvv TO /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383/ /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679648.905446-2492-114889336057383/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
    "delta": "0:00:00.038061",
    "end": "2020-11-06 16:20:49.075584",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:49.037523",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782 `" && echo ansible-tmp-1604679649.1403604-2530-34803809904782="` echo /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwi2_yzgv TO /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782/ /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679649.1403604-2530-34803809904782/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
    "delta": "0:00:00.061696",
    "end": "2020-11-06 16:20:49.333981",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:49.272285",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119 `" && echo ansible-tmp-1604679649.4315479-2567-253832753607119="` echo /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1iqs0b0o TO /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119/ /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679649.4315479-2567-253832753607119/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
    "delta": "0:00:00.047269",
    "end": "2020-11-06 16:20:49.609312",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:49.562043",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112 `" && echo ansible-tmp-1604679649.743339-2607-23272797239112="` echo /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp6cw32s8n TO /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112/ /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679649.743339-2607-23272797239112/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.420418",
    "end": "2020-11-06 16:20:51.294921",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:49.874503",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421 `" && echo ansible-tmp-1604679651.3609698-2653-275792753452421="` echo /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2k05fqyq TO /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421/ /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679651.3609698-2653-275792753452421/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052 `" && echo ansible-tmp-1604679651.5642028-2679-260688098772052="` echo /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp28yzrm9p TO /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052/ /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679651.5642028-2679-260688098772052/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer3.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer3.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer3.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer3.sh",
    "size": 2587,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544 `" && echo ansible-tmp-1604679651.7382667-2679-175673084577544="` echo /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwefiqiu6 TO /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544/ /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679651.7382667-2679-175673084577544/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766 `" && echo ansible-tmp-1604679651.9452674-2729-167911903669766="` echo /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpm_k8rv0g TO /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766/ /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679651.9452674-2729-167911903669766/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.695075",
    "end": "2020-11-06 16:20:55.772574",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:52.077499",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285 `" && echo ansible-tmp-1604679655.8397317-2781-259891771721285="` echo /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpxhfskn5s TO /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285/ /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679655.8397317-2781-259891771721285/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.758048",
    "end": "2020-11-06 16:20:57.729239",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:55.971191",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer3.walmart-net\n+ CSR_HOSTS=orderer3.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:56 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:56 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:56 [DEBUG] Checking for enrollment\n2020/11/06 16:20:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba5d0}\n2020/11/06 16:20:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203933f0 DummyKeystore:<nil>}\n2020/11/06 16:20:56 [INFO] TLS Enabled\n2020/11/06 16:20:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:56 [DEBUG] Client Cert File: \n2020/11/06 16:20:56 [DEBUG] Client Key File: \n2020/11/06 16:20:56 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:56 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:56 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}\n2020/11/06 16:20:56 [DEBUG] Entered runEnroll\n2020/11/06 16:20:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}\n2020/11/06 16:20:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bdbd0 DummyKeystore:<nil>}\n2020/11/06 16:20:56 [INFO] TLS Enabled\n2020/11/06 16:20:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:56 [DEBUG] Client Cert File: \n2020/11/06 16:20:56 [DEBUG] Client Key File: \n2020/11/06 16:20:56 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:56 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:56 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:56 [INFO] encoded CSR\n2020/11/06 16:20:56 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQmGQpDjyuwjzHxQxQU\\nVBv77Kl15PMxuQZkMKAdV63gu4DABj5WQrg5maxNkVxt8cxuwMOOD8D9v8gUf0e/\\n0NNxoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCKN0F9wnJPG6nC/FfognCip7ckVw5pU/fBnPLQ\\nQPsJRAIgUAKoGgjBkQeHV/KhFOPc95aShEiXg8eWVU/QgFoPAX8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQmGQpDjyuwjzHxQxQU\\nVBv77Kl15PMxuQZkMKAdV63gu4DABj5WQrg5maxNkVxt8cxuwMOOD8D9v8gUf0e/\\n0NNxoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCKN0F9wnJPG6nC/FfognCip7ckVw5pU/fBnPLQ\\nQPsJRAIgUAKoGgjBkQeHV/KhFOPc95aShEiXg8eWVU/QgFoPAX8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/0704be443550c7154fecbdac6336d10ad0518a4860e21dcae92cdefd6c435578_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 16:20:56 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a6c0}\n2020/11/06 16:20:56 [DEBUG] Entered runEnroll\n2020/11/06 16:20:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a6c0}\n2020/11/06 16:20:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200abc10 DummyKeystore:<nil>}\n2020/11/06 16:20:56 [INFO] TLS Enabled\n2020/11/06 16:20:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:56 [DEBUG] Client Cert File: \n2020/11/06 16:20:56 [DEBUG] Client Key File: \n2020/11/06 16:20:56 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:56 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:56 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:56 [INFO] encoded CSR\n2020/11/06 16:20:56 [DEBUG] Sending request\nPOST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOaKtP6Pzkmks3HryqKA\\n1D56I4MXl5NK6COKXDbWHH2hfTwfKl/Abe0QE4m1ULw1ka8w0P9+07qL7MLBZESx\\nXlGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAM3q2H5UjaTfYfpEprgpN0HU\\nlNvX6MOy8gbiOFjT4nTNAiAtGqeyqKOVmOBVGtFil2OqHEmob0wRq7v8aMBJqPbC\\noA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOaKtP6Pzkmks3HryqKA\\n1D56I4MXl5NK6COKXDbWHH2hfTwfKl/Abe0QE4m1ULw1ka8w0P9+07qL7MLBZESx\\nXlGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAM3q2H5UjaTfYfpEprgpN0HU\\nlNvX6MOy8gbiOFjT4nTNAiAtGqeyqKOVmOBVGtFil2OqHEmob0wRq7v8aMBJqPbC\\noA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer3s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer3 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer3 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:57 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 16:20:57 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 16:20:57 [DEBUG] Checking for enrollment\n2020/11/06 16:20:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}\n2020/11/06 16:20:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397780 DummyKeystore:<nil>}\n2020/11/06 16:20:57 [INFO] TLS Enabled\n2020/11/06 16:20:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:57 [DEBUG] Client Cert File: \n2020/11/06 16:20:57 [DEBUG] Client Key File: \n2020/11/06 16:20:57 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:57 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 16:20:57 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 16:20:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420390660}\n2020/11/06 16:20:57 [DEBUG] Entered runEnroll\n2020/11/06 16:20:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420390660}\n2020/11/06 16:20:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203906c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42040d820 DummyKeystore:<nil>}\n2020/11/06 16:20:57 [INFO] TLS Enabled\n2020/11/06 16:20:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:57 [DEBUG] Client Cert File: \n2020/11/06 16:20:57 [DEBUG] Client Key File: \n2020/11/06 16:20:57 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:57 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:57 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:57 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:57 [INFO] encoded CSR\n2020/11/06 16:20:57 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAP9DDlY4pnGNKC95ZQDtyAZ\\nAoxEYfj7hyTkfhGQAeDhxbR6MAWuMW6RMO5VDrxQ0q6d+rF6iFQTuU2L00yvUr+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgF2AhjMW6nRXXl2kvl7+/XJtHHOUc\\nO1AnkuAkf0QI/fICID/RpFNK7cvd6o8tgdRCgn0sXGrHdMZyCOKTW69sDwoO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAP9DDlY4pnGNKC95ZQDtyAZ\\nAoxEYfj7hyTkfhGQAeDhxbR6MAWuMW6RMO5VDrxQ0q6d+rF6iFQTuU2L00yvUr+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgF2AhjMW6nRXXl2kvl7+/XJtHHOUc\\nO1AnkuAkf0QI/fICID/RpFNK7cvd6o8tgdRCgn0sXGrHdMZyCOKTW69sDwoO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 16:20:57 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:20:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016c660}\n2020/11/06 16:20:57 [DEBUG] Entered runEnroll\n2020/11/06 16:20:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }\n2020/11/06 16:20:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016c660}\n2020/11/06 16:20:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:20:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046c020 DummyKeystore:<nil>}\n2020/11/06 16:20:57 [INFO] TLS Enabled\n2020/11/06 16:20:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 16:20:57 [DEBUG] Client Cert File: \n2020/11/06 16:20:57 [DEBUG] Client Key File: \n2020/11/06 16:20:57 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:20:57 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:20:57 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:20:57 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:20:57 [INFO] encoded CSR\n2020/11/06 16:20:57 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPPSi5Z3HYqy5QoHd0u2fIdHV3pcM4YtIYooKfkQ2IcbvMOQSRrt9aQwIbCsv4et\\nkwP3HLWI80I3cuLITAUNl1egNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAOjx\\n9vwQW/IR9ICz60mGXSSx4M3XzfwF5Y7l9IFwExbIAiA9hxNrNg5PKJLBwTZ8Nqzs\\nnMLm0zFRz1nTLarJ1Ody3g==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPPSi5Z3HYqy5QoHd0u2fIdHV3pcM4YtIYooKfkQ2IcbvMOQSRrt9aQwIbCsv4et\\nkwP3HLWI80I3cuLITAUNl1egNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAOjx\\n9vwQW/IR9ICz60mGXSSx4M3XzfwF5Y7l9IFwExbIAiA9hxNrNg5PKJLBwTZ8Nqzs\\nnMLm0zFRz1nTLarJ1Ody3g==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/28d4ed9794a809c9371da5d5722580ffe7c499b83bd98b309d1faa5dea52634b_sk /root/ca-tools/walmart/client1/tls/keystore/bfa518932845c1d2ef75b3e8ddcdb950962887a4d943f427fe1d1194b83abe63_sk /root/ca-tools/walmart/client1/tls/keystore/e407d87e83ee451d25fc84ec2217637c49aec763394a72bfef97e04cd636899d_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer3.walmart-net",
        "+ CSR_HOSTS=orderer3.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:56 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:56 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:56 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba5d0}",
        "2020/11/06 16:20:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203933f0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:56 [INFO] TLS Enabled",
        "2020/11/06 16:20:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:56 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:56 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:56 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:56 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:56 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}",
        "2020/11/06 16:20:56 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}",
        "2020/11/06 16:20:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bdbd0 DummyKeystore:<nil>}",
        "2020/11/06 16:20:56 [INFO] TLS Enabled",
        "2020/11/06 16:20:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:56 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:56 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:56 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:56 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:56 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:56 [INFO] encoded CSR",
        "2020/11/06 16:20:56 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQmGQpDjyuwjzHxQxQU\\nVBv77Kl15PMxuQZkMKAdV63gu4DABj5WQrg5maxNkVxt8cxuwMOOD8D9v8gUf0e/\\n0NNxoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCKN0F9wnJPG6nC/FfognCip7ckVw5pU/fBnPLQ\\nQPsJRAIgUAKoGgjBkQeHV/KhFOPc95aShEiXg8eWVU/QgFoPAX8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQmGQpDjyuwjzHxQxQU\\nVBv77Kl15PMxuQZkMKAdV63gu4DABj5WQrg5maxNkVxt8cxuwMOOD8D9v8gUf0e/\\n0NNxoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMud2FsbWFydC5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCKN0F9wnJPG6nC/FfognCip7ckVw5pU/fBnPLQ\\nQPsJRAIgUAKoGgjBkQeHV/KhFOPc95aShEiXg8eWVU/QgFoPAX8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/0704be443550c7154fecbdac6336d10ad0518a4860e21dcae92cdefd6c435578_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:20:56 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a6c0}",
        "2020/11/06 16:20:56 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a6c0}",
        "2020/11/06 16:20:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200abc10 DummyKeystore:<nil>}",
        "2020/11/06 16:20:56 [INFO] TLS Enabled",
        "2020/11/06 16:20:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:56 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:56 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:56 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:56 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:56 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:56 [INFO] encoded CSR",
        "2020/11/06 16:20:56 [DEBUG] Sending request",
        "POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOaKtP6Pzkmks3HryqKA\\n1D56I4MXl5NK6COKXDbWHH2hfTwfKl/Abe0QE4m1ULw1ka8w0P9+07qL7MLBZESx\\nXlGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAM3q2H5UjaTfYfpEprgpN0HU\\nlNvX6MOy8gbiOFjT4nTNAiAtGqeyqKOVmOBVGtFil2OqHEmob0wRq7v8aMBJqPbC\\noA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOaKtP6Pzkmks3HryqKA\\n1D56I4MXl5NK6COKXDbWHH2hfTwfKl/Abe0QE4m1ULw1ka8w0P9+07qL7MLBZESx\\nXlGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAM3q2H5UjaTfYfpEprgpN0HU\\nlNvX6MOy8gbiOFjT4nTNAiAtGqeyqKOVmOBVGtFil2OqHEmob0wRq7v8aMBJqPbC\\noA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart:7054/enroll: dial tcp: lookup ca.walmart on 10.0.0.10:53: no such host",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer3s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer3 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer3 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:57 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 16:20:57 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 16:20:57 [DEBUG] Checking for enrollment",
        "2020/11/06 16:20:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}",
        "2020/11/06 16:20:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397780 DummyKeystore:<nil>}",
        "2020/11/06 16:20:57 [INFO] TLS Enabled",
        "2020/11/06 16:20:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:57 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:57 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:57 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:57 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 16:20:57 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 16:20:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420390660}",
        "2020/11/06 16:20:57 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420390660}",
        "2020/11/06 16:20:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203906c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42040d820 DummyKeystore:<nil>}",
        "2020/11/06 16:20:57 [INFO] TLS Enabled",
        "2020/11/06 16:20:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:57 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:57 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:57 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:57 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:57 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:57 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:57 [INFO] encoded CSR",
        "2020/11/06 16:20:57 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAP9DDlY4pnGNKC95ZQDtyAZ\\nAoxEYfj7hyTkfhGQAeDhxbR6MAWuMW6RMO5VDrxQ0q6d+rF6iFQTuU2L00yvUr+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgF2AhjMW6nRXXl2kvl7+/XJtHHOUc\\nO1AnkuAkf0QI/fICID/RpFNK7cvd6o8tgdRCgn0sXGrHdMZyCOKTW69sDwoO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAP9DDlY4pnGNKC95ZQDtyAZ\\nAoxEYfj7hyTkfhGQAeDhxbR6MAWuMW6RMO5VDrxQ0q6d+rF6iFQTuU2L00yvUr+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtNXRydmwwCgYIKoZIzj0EAwIDRwAwRAIgF2AhjMW6nRXXl2kvl7+/XJtHHOUc\\nO1AnkuAkf0QI/fICID/RpFNK7cvd6o8tgdRCgn0sXGrHdMZyCOKTW69sDwoO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 16:20:57 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:20:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016c660}",
        "2020/11/06 16:20:57 [DEBUG] Entered runEnroll",
        "2020/11/06 16:20:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:20:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-5trvl] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016c660}",
        "2020/11/06 16:20:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:20:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046c020 DummyKeystore:<nil>}",
        "2020/11/06 16:20:57 [INFO] TLS Enabled",
        "2020/11/06 16:20:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 16:20:57 [DEBUG] Client Cert File: ",
        "2020/11/06 16:20:57 [DEBUG] Client Key File: ",
        "2020/11/06 16:20:57 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:20:57 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-5trvl] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:20:57 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:20:57 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:20:57 [INFO] encoded CSR",
        "2020/11/06 16:20:57 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPPSi5Z3HYqy5QoHd0u2fIdHV3pcM4YtIYooKfkQ2IcbvMOQSRrt9aQwIbCsv4et\\nkwP3HLWI80I3cuLITAUNl1egNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAOjx\\n9vwQW/IR9ICz60mGXSSx4M3XzfwF5Y7l9IFwExbIAiA9hxNrNg5PKJLBwTZ8Nqzs\\nnMLm0zFRz1nTLarJ1Ody3g==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-5trvl\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPPSi5Z3HYqy5QoHd0u2fIdHV3pcM4YtIYooKfkQ2IcbvMOQSRrt9aQwIbCsv4et\\nkwP3HLWI80I3cuLITAUNl1egNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtNXRydmwwCgYIKoZIzj0EAwIDSAAwRQIhAOjx\\n9vwQW/IR9ICz60mGXSSx4M3XzfwF5Y7l9IFwExbIAiA9hxNrNg5PKJLBwTZ8Nqzs\\nnMLm0zFRz1nTLarJ1Ody3g==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/28d4ed9794a809c9371da5d5722580ffe7c499b83bd98b309d1faa5dea52634b_sk /root/ca-tools/walmart/client1/tls/keystore/bfa518932845c1d2ef75b3e8ddcdb950962887a4d943f427fe1d1194b83abe63_sk /root/ca-tools/walmart/client1/tls/keystore/e407d87e83ee451d25fc84ec2217637c49aec763394a72bfef97e04cd636899d_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173 `" && echo ansible-tmp-1604679657.7992978-2827-234138516030173="` echo /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpemmza3se TO /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173/ /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679657.7992978-2827-234138516030173/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.737986",
    "end": "2020-11-06 16:20:58.668455",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:57.930469",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380 `" && echo ansible-tmp-1604679658.7411032-2867-18126392413380="` echo /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp50xivw6s TO /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380/ /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679658.7411032-2867-18126392413380/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.127024",
    "end": "2020-11-06 16:20:59.000846",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:20:58.873822",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987 `" && echo ansible-tmp-1604679659.071014-2919-5042085051987="` echo /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpf9_4qwbd TO /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987/ /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679659.071014-2919-5042085051987/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer3-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9URXhXaGNOTWpNd09EQXpNRGd5Ck9URXhXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TXk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFCCnlFK21McFhYUE9CZ2NFK3lKelRJZ3M2SGdGOHdwVWhIZDZveExYSjBIaC85NC9VWCtzTVY5TlpqclAvVktQL0MKVWdodytHMzRSL0hUbmFqalVnZ21vMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXFINFJwbFZ3aENqNHE3cXROSmVPN1Z5SWRtb3dDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQU51TVYveDBvZ3lKekd3bXFhMDZIZWswY0NZckxvaytCUkRtaDZ3OGFDZEFBaUVBcGJ3Qi90QjcKQ2pBcDZ6emZPRmU3c25CUFE5WUl1ZmZiTnhzRTJrQ3Rzenc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzSks3ZzJKRVhxaGZLR3YyL2hheWlJRi9ndDNSazVBL0IySzNNdGNHOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQWNoUHBpNlYxenpnWUhCUHNpYzB5SUxPaDRCZk1LVklSM2VxTVMxeWRCNGYvZVAxRi9yRApGZlRXWTZ6LzFTai93bElJY1BodCtFZngwNTJvNDFJSUpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:11Z",
                "name": "orderer3-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408791",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer3-walmart-net-ambassador-certs",
                "uid": "9c28f8f6-56fe-49c2-9cf9-f892bc7312b3"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861 `" && echo ansible-tmp-1604679659.6917405-2948-154631078354861="` echo /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp__307qbg TO /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861/ /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679659.6917405-2948-154631078354861/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
    "delta": "0:00:00.093463",
    "end": "2020-11-06 16:20:59.922856",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:20:59.829393",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129 `" && echo ansible-tmp-1604679660.084591-2988-137260397251129="` echo /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7pb00yt9 TO /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129/ /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679660.084591-2988-137260397251129/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
    "delta": "0:00:00.044035",
    "end": "2020-11-06 16:21:00.261902",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:00.217867",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ]
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:31
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833 `" && echo ansible-tmp-1604679660.3249984-3025-226860186531833="` echo /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpq7nofsor TO /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833/ /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679660.3249984-3025-226860186531833/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.049367",
    "end": "2020-11-06 16:21:00.504886",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:21:00.455519",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Copy organization level certificates for orgs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925 `" && echo ansible-tmp-1604679660.5734487-3060-46144536062925="` echo /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7qvkdc0b TO /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925/ /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679660.5734487-3060-46144536062925/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.082693",
    "end": "2020-11-06 16:21:00.788706",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:00.706013",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ]
}

TASK [include_role : create/crypto/peer] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:114
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for CA-tool in carrier-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679 `" && echo ansible-tmp-1604679661.2002964-3119-188539880866679="` echo /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmppxscc12p TO /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679/ /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679661.2002964-3119-188539880866679/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T16:15:16Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-c8789",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "60d5ad56-69ed-4598-8296-a0454bdb3b55"
                    }
                ],
                "resourceVersion": "2482645",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-tools-69d7885f86-c8789",
                "uid": "7bc4158a-ed13-4e50-b814-be896e4c146a"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-l52sk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-l52sk",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-l52sk"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:15:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:16:03Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:16:03Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T16:15:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c6196f767e78e0883b7060fa8b4670eca5e602961a9f1fc1150b7ab6502e7317",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T16:16:02Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.77",
                "podIPs": [
                    {
                        "ip": "10.1.0.77"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T16:15:26Z"
            }
        }
    ]
}

TASK [create/crypto/peer : Ensure ca directory exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:21
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193 `" && echo ansible-tmp-1604679661.8170564-3147-163357971541193="` echo /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp44l3zuha TO /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193/ /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679661.8170564-3147-163357971541193/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Check if ca certs already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856 `" && echo ansible-tmp-1604679662.02442-3173-59099935668856="` echo /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpvtj8i0up TO /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856/ /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679662.02442-3173-59099935668856/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.050663",
    "end": "2020-11-06 16:21:02.213913",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:02.163250",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if ca key already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827 `" && echo ansible-tmp-1604679662.2785141-3211-259022130397827="` echo /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2ifoi8k4 TO /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827/ /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679662.2785141-3211-259022130397827/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.048327",
    "end": "2020-11-06 16:21:02.458092",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:02.409765",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peercheck.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:47
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377 `" && echo ansible-tmp-1604679662.5894341-3250-139528535830377="` echo /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_sgipsd1 TO /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377/ /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679662.5894341-3250-139528535830377/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
    "delta": "0:00:00.048452",
    "end": "2020-11-06 16:21:02.767898",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:21:02.719446",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610 `" && echo ansible-tmp-1604679662.8641562-3287-156977228035610="` echo /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpavs9476b TO /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610/ /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679662.8641562-3287-156977228035610/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
    "delta": "0:00:00.047005",
    "end": "2020-11-06 16:21:03.042300",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:21:02.995295",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Call common.yaml for each peer] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:53
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml for localhost

TASK [create/crypto/peer : Create directory path on CA Tools] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704 `" && echo ansible-tmp-1604679663.1964571-3326-173039151771704="` echo /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpwvnysv8u TO /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704/ /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679663.1964571-3326-173039151771704/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
    "delta": "0:00:01.295112",
    "end": "2020-11-06 16:21:04.623188",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:03.328076",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826 `" && echo ansible-tmp-1604679664.6910064-3371-218769793735826="` echo /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkbruotnd TO /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826/ /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679664.6910064-3371-218769793735826/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Changing the permission of msp files] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861 `" && echo ansible-tmp-1604679664.8979263-3397-174678498006861="` echo /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp2_v2v60z TO /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861/ /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679664.8979263-3397-174678498006861/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-carrier.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-carrier.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-carrier.sh"
        }
    },
    "files": "generate-crypto-carrier.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-carrier.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-carrier.sh",
    "size": 5178,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691 `" && echo ansible-tmp-1604679665.07071-3397-72768556244691="` echo /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp53zixl2h TO /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691/ /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679665.07071-3397-72768556244691/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:43
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776 `" && echo ansible-tmp-1604679665.283166-3447-13904383277776="` echo /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp5cbcxu8g TO /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776/ /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679665.283166-3447-13904383277776/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:03.761550",
    "end": "2020-11-06 16:21:09.174386",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:05.412836",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Generate crypto material for organization peers] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832 `" && echo ansible-tmp-1604679669.2428865-3497-159327204687832="` echo /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmphxj0fbov TO /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832/ /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679669.2428865-3497-159327204687832/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.032400",
    "end": "2020-11-06 16:21:11.410788",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:09.378388",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=carrier\n+ AFFILIATION=carrier\n+ SUBJECT=C=GB,ST=London,L=London,O=carrier\n+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ CA_ADMIN_USER=carrier-admin\n+ CA_ADMIN_PASS=carrier-adminpw\n+ ORG_ADMIN_USER=Admin@carrier-net\n+ ORG_ADMIN_PASS=Admin@carrier-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ NO_OF_PEERS=2\n+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c750}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c750}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028c7b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420299b30 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWDCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEkVzW\\n4enEaxYziyK7D2S9UawrhbIkB+oJYkyb06oK+NwrqQIlcbs1pUlHDbZ3fel9NQH7\\nbns+vdDLxbXpEEupy6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1jODc4OTAKBggqhkjOPQQDAgNIADBFAiEAq7Zchqbk\\njmUURdcGWSC2UYvA4jGrQewjl+sK6/FSJnwCICy3mXYuufgIedzfjrPk0qWxebce\\n+xnUQ3rpd2Sd1Poy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWDCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEkVzW\\n4enEaxYziyK7D2S9UawrhbIkB+oJYkyb06oK+NwrqQIlcbs1pUlHDbZ3fel9NQH7\\nbns+vdDLxbXpEEupy6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1jODc4OTAKBggqhkjOPQQDAgNIADBFAiEAq7Zchqbk\\njmUURdcGWSC2UYvA4jGrQewjl+sK6/FSJnwCICy3mXYuufgIedzfjrPk0qWxebce\\n+xnUQ3rpd2Sd1Poy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:10 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 16:21:10 [DEBUG] Entered runGetCACert\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b60b0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/cainfo\n{}\nError: POST failure of request: POST https://ca.carrier-net:7054/cainfo\n{}: Post https://ca.carrier-net:7054/cainfo: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*': No such file or directory\n+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Checking for enrollment\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420458bf0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/carrier/admin\n2020/11/06 16:21:10 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886f0}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886f0}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201936e0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATKc3pHvV8cegRnigsCvEa/39hYbjplLaXqLpc849m1+bUTXS7OoLqvgMeMq7S+\\nmpI8jk95J580YQiw/Tfalz2xoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDp\\nAozn8hrA1oo33iPvz3MhLWUSR8QnRLNF8VbO32wLvQIgQWxpPy1l45LTVlPS2SkX\\nkGhEp6dUtd4uzzcXYrb1T6Y=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATKc3pHvV8cegRnigsCvEa/39hYbjplLaXqLpc849m1+bUTXS7OoLqvgMeMq7S+\\nmpI8jk95J580YQiw/Tfalz2xoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDp\\nAozn8hrA1oo33iPvz3MhLWUSR8QnRLNF8VbO32wLvQIgQWxpPy1l45LTVlPS2SkX\\nkGhEp6dUtd4uzzcXYrb1T6Y=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts\n+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory\n+ mkdir /root/ca-tools/carrier/admin/msp/admincerts\n+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:10 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a7b0}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a7b0}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028a810 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420293d40 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASNm5ev8IkuX1Y/QlzsyKkPPLfHueNZot8ZRBQOVZb5wtmZXqbMTnJAQ1gD43NJ\\nk6VwKSWGwsMJUqOyVV+zpyAmoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQCU\\nYIRYpONTSn/VWY5QL8BAF/BB7qdma7CWWVp35DJnnQIgWuKYukYHgePA1r27NVMq\\nctxrOc3TGnsVeR/tselouv4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASNm5ev8IkuX1Y/QlzsyKkPPLfHueNZot8ZRBQOVZb5wtmZXqbMTnJAQ1gD43NJ\\nk6VwKSWGwsMJUqOyVV+zpyAmoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQCU\\nYIRYpONTSn/VWY5QL8BAF/BB7qdma7CWWVp35DJnnQIgWuKYukYHgePA1r27NVMq\\nctxrOc3TGnsVeR/tselouv4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls\n+ cp /root/ca-tools/carrier/admin/tls/keystore/96e0a29dd65a623a4c7df43a5b85df5f542529af7c4571277d16e57ab0fc74e0_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key\n+ cp '/root/ca-tools/carrier/admin/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/carrier/admin/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/admin/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/admin/tls/tlscacerts/*': No such file or directory\n+ COUNTER=0\n+ '[' 0 -lt 2 ']'\n+ PEER=peer0.carrier-net\n+ CSR_HOSTS=peer0.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Checking for enrollment\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5a0}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203933b0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a2d0}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a2d0}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a5a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204d1290 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBwzCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATtVpqfhF14h9Wh9kcGtAyb/t0LGymu9oNtYYvqOJplwJ03vWusScawFz/vBE5Q\\nhaN9riwRZsT/VMiGs60f0Xx5oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNH\\nADBEAiAHlQIVdYhQY+dkJyAkn/qP0FdKLV/oK3MX5IxbftsPiQIgbAaJ32vwmYlS\\nJR9vgJXAO09hC5IQkvtAHjGJVimIEhs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBwzCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATtVpqfhF14h9Wh9kcGtAyb/t0LGymu9oNtYYvqOJplwJ03vWusScawFz/vBE5Q\\nhaN9riwRZsT/VMiGs60f0Xx5oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNH\\nADBEAiAHlQIVdYhQY+dkJyAkn/qP0FdKLV/oK3MX5IxbftsPiQIgbAaJ32vwmYlS\\nJR9vgJXAO09hC5IQkvtAHjGJVimIEhs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/83939bfd96ae50d9de4f5fba63486a2167a0ab41d8fc692cb47c520635760599_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key\n+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c600}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c600}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420257a20 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARTb6YTU8BPsw3A/J1JSkvAs6aBtobHQqKPKFeH+lD/pegUbMzM6sp2GcMcwPeD\\nLVplTAj9cCRVRDv+oat2oCUboDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0cAMEQCIHkl\\nfnd+ZXoqMCh/t1qWLkK+zAsNp8eobKLDIHuGwuBZAiAsfdWQsVAJvmQtRWYsOM+i\\n/OeMDQTgY/SgKJwE5+kkfw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARTb6YTU8BPsw3A/J1JSkvAs6aBtobHQqKPKFeH+lD/pegUbMzM6sp2GcMcwPeD\\nLVplTAj9cCRVRDv+oat2oCUboDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0cAMEQCIHkl\\nfnd+ZXoqMCh/t1qWLkK+zAsNp8eobKLDIHuGwuBZAiAsfdWQsVAJvmQtRWYsOM+i\\n/OeMDQTgY/SgKJwE5+kkfw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory\n+ let COUNTER=COUNTER+1\n+ '[' 1 -lt 2 ']'\n+ PEER=peer1.carrier-net\n+ CSR_HOSTS=peer1.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 16:21:10 [DEBUG] Checking for enrollment\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805a0}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420170bc0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016bfb0}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016bfb0}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037a5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42024f2c0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATgK2QIUjJhEthHMB6NSbf0JU9R3uXxx/QC9qFh/DrcDxquCsX4YgrwyV17WDzW\\ncomWbxRjPyZqUSlL3E6DU38XoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA3i6h4XkpvEx6J3O4Vh1BoGhcOhjANXsbpis96OheeGoCIE69oSYt3vGL\\nSmBB3z4VjNDExce2EW+zyztY24ZvFoSW\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATgK2QIUjJhEthHMB6NSbf0JU9R3uXxx/QC9qFh/DrcDxquCsX4YgrwyV17WDzW\\ncomWbxRjPyZqUSlL3E6DU38XoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA3i6h4XkpvEx6J3O4Vh1BoGhcOhjANXsbpis96OheeGoCIE69oSYt3vGL\\nSmBB3z4VjNDExce2EW+zyztY24ZvFoSW\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/1caecf76bd907421ebc7eb26b38bb5772cd9ffb91014865c493f5aedd868b0b0_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key\n+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}\n2020/11/06 16:21:10 [DEBUG] Entered runEnroll\n2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42045f9e0 DummyKeystore:<nil>}\n2020/11/06 16:21:10 [INFO] TLS Enabled\n2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:10 [DEBUG] Client Cert File: \n2020/11/06 16:21:10 [DEBUG] Client Key File: \n2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:10 [INFO] encoded CSR\n2020/11/06 16:21:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS0QVMp4ZwKpO3k9pMkNIM0O9JNQhgZV6CJAD6/Dz7fUIUS5Y0+0Y20oi1hZumP\\nl+OU3ZrTQkleP1Bzcs7FZBgBoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDU\\nAhWoIYJkzBNyUBA9r1vGy2KklF+7ZJxsVN9PZAk5uwIgG8j1O5DXnT2VYNw1hx86\\noHW/4OvR/2VD9aC/yvpxoRA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS0QVMp4ZwKpO3k9pMkNIM0O9JNQhgZV6CJAD6/Dz7fUIUS5Y0+0Y20oi1hZumP\\nl+OU3ZrTQkleP1Bzcs7FZBgBoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDU\\nAhWoIYJkzBNyUBA9r1vGy2KklF+7ZJxsVN9PZAk5uwIgG8j1O5DXnT2VYNw1hx86\\noHW/4OvR/2VD9aC/yvpxoRA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory\n+ let COUNTER=COUNTER+1\n+ '[' 2 -lt 2 ']'\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ NO_OF_USERS=1\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@carrier-net\n+ ORG_USERPASS=User1@carrier-net-pw\n+ '[' peer = peer ']'\n+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:11 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 16:21:11 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 16:21:11 [DEBUG] Checking for enrollment\n2020/11/06 16:21:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203984e0}\n2020/11/06 16:21:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398540 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ea20 DummyKeystore:<nil>}\n2020/11/06 16:21:11 [INFO] TLS Enabled\n2020/11/06 16:21:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:11 [DEBUG] Client Cert File: \n2020/11/06 16:21:11 [DEBUG] Client Key File: \n2020/11/06 16:21:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:11 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1\n2020/11/06 16:21:11 [DEBUG] Home directory: /root/ca-tools/carrier/client1\n2020/11/06 16:21:11 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml\n2020/11/06 16:21:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}\n2020/11/06 16:21:11 [DEBUG] Entered runEnroll\n2020/11/06 16:21:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}\n2020/11/06 16:21:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197ba0 DummyKeystore:<nil>}\n2020/11/06 16:21:11 [INFO] TLS Enabled\n2020/11/06 16:21:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:11 [DEBUG] Client Cert File: \n2020/11/06 16:21:11 [DEBUG] Client Key File: \n2020/11/06 16:21:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:11 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:11 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:11 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:11 [INFO] encoded CSR\n2020/11/06 16:21:11 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASaINLvsQwCJkx8Z8/Fi/JXmWE4QnFyqOuI4EPpBREHkP4VBMKQofceQhu2W9QB\\nFXK09CWUUBYj5YfBfe8QCYAfoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDa\\n5LxbQ26Wj2+zfE60H8VFZ+imNRCqjetyFLXhy4q1vwIgdRmVKMPkYmJLmU7mYklw\\n9q0kKlymAd5qWERz820IgrY=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASaINLvsQwCJkx8Z8/Fi/JXmWE4QnFyqOuI4EPpBREHkP4VBMKQofceQhu2W9QB\\nFXK09CWUUBYj5YfBfe8QCYAfoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDa\\n5LxbQ26Wj2+zfE60H8VFZ+imNRCqjetyFLXhy4q1vwIgdRmVKMPkYmJLmU7mYklw\\n9q0kKlymAd5qWERz820IgrY=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /root/ca-tools/carrier/client1/msp/admincerts\n+ cp '/root/ca-tools/carrier/client1/msp/signcerts/*' /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2020/11/06 16:21:11 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 16:21:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203845d0}\n2020/11/06 16:21:11 [DEBUG] Entered runEnroll\n2020/11/06 16:21:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }\n2020/11/06 16:21:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203845d0}\n2020/11/06 16:21:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420384630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 16:21:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a9910 DummyKeystore:<nil>}\n2020/11/06 16:21:11 [INFO] TLS Enabled\n2020/11/06 16:21:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 16:21:11 [DEBUG] Client Cert File: \n2020/11/06 16:21:11 [DEBUG] Client Key File: \n2020/11/06 16:21:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 16:21:11 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 16:21:11 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 16:21:11 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 16:21:11 [INFO] encoded CSR\n2020/11/06 16:21:11 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBP9pUzVPd+I1Fcty5MFPmkIWX04euORObufOOnMpHwbIY7j7VPBmH53JNXbcGSsy\\nRiLR802uXKHcFLeDgJ314h+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtYzg3ODkwCgYIKoZIzj0EAwIDRwAwRAIgZLzv\\nnG86fUfQyBlyvL7/6Ydm/nS1D92arpF0/rSnQroCIDK+7eK9buyY3GRdpCbdtfcf\\nb16doCQN6gZNt5FzdyX8\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBP9pUzVPd+I1Fcty5MFPmkIWX04euORObufOOnMpHwbIY7j7VPBmH53JNXbcGSsy\\nRiLR802uXKHcFLeDgJ314h+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtYzg3ODkwCgYIKoZIzj0EAwIDRwAwRAIgZLzv\\nnG86fUfQyBlyvL7/6Ydm/nS1D92arpF0/rSnQroCIDK+7eK9buyY3GRdpCbdtfcf\\nb16doCQN6gZNt5FzdyX8\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls\n+ cp /root/ca-tools/carrier/client1/tls/keystore/763e516877379154a32b72b66554c955926323c49a611b5c2593ad9134ce45be_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key\n+ cp '/root/ca-tools/carrier/client1/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/carrier/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/client1/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=carrier",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=C=GB,ST=London,L=London,O=carrier",
        "+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ CA_ADMIN_USER=carrier-admin",
        "+ CA_ADMIN_PASS=carrier-adminpw",
        "+ ORG_ADMIN_USER=Admin@carrier-net",
        "+ ORG_ADMIN_PASS=Admin@carrier-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ NO_OF_PEERS=2",
        "+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c750}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c750}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028c7b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420299b30 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWDCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEkVzW\\n4enEaxYziyK7D2S9UawrhbIkB+oJYkyb06oK+NwrqQIlcbs1pUlHDbZ3fel9NQH7\\nbns+vdDLxbXpEEupy6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1jODc4OTAKBggqhkjOPQQDAgNIADBFAiEAq7Zchqbk\\njmUURdcGWSC2UYvA4jGrQewjl+sK6/FSJnwCICy3mXYuufgIedzfjrPk0qWxebce\\n+xnUQ3rpd2Sd1Poy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWDCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEkVzW\\n4enEaxYziyK7D2S9UawrhbIkB+oJYkyb06oK+NwrqQIlcbs1pUlHDbZ3fel9NQH7\\nbns+vdDLxbXpEEupy6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1jODc4OTAKBggqhkjOPQQDAgNIADBFAiEAq7Zchqbk\\njmUURdcGWSC2UYvA4jGrQewjl+sK6/FSJnwCICy3mXYuufgIedzfjrPk0qWxebce\\n+xnUQ3rpd2Sd1Poy\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:10 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Entered runGetCACert",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b60b0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/cainfo",
        "{}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/cainfo",
        "{}: Post https://ca.carrier-net:7054/cainfo: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*': No such file or directory",
        "+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Checking for enrollment",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420458bf0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/carrier/admin",
        "2020/11/06 16:21:10 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886f0}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886f0}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201936e0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATKc3pHvV8cegRnigsCvEa/39hYbjplLaXqLpc849m1+bUTXS7OoLqvgMeMq7S+\\nmpI8jk95J580YQiw/Tfalz2xoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDp\\nAozn8hrA1oo33iPvz3MhLWUSR8QnRLNF8VbO32wLvQIgQWxpPy1l45LTVlPS2SkX\\nkGhEp6dUtd4uzzcXYrb1T6Y=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATKc3pHvV8cegRnigsCvEa/39hYbjplLaXqLpc849m1+bUTXS7OoLqvgMeMq7S+\\nmpI8jk95J580YQiw/Tfalz2xoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDp\\nAozn8hrA1oo33iPvz3MhLWUSR8QnRLNF8VbO32wLvQIgQWxpPy1l45LTVlPS2SkX\\nkGhEp6dUtd4uzzcXYrb1T6Y=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir /root/ca-tools/carrier/admin/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:10 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a7b0}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a7b0}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028a810 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420293d40 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASNm5ev8IkuX1Y/QlzsyKkPPLfHueNZot8ZRBQOVZb5wtmZXqbMTnJAQ1gD43NJ\\nk6VwKSWGwsMJUqOyVV+zpyAmoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQCU\\nYIRYpONTSn/VWY5QL8BAF/BB7qdma7CWWVp35DJnnQIgWuKYukYHgePA1r27NVMq\\nctxrOc3TGnsVeR/tselouv4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASNm5ev8IkuX1Y/QlzsyKkPPLfHueNZot8ZRBQOVZb5wtmZXqbMTnJAQ1gD43NJ\\nk6VwKSWGwsMJUqOyVV+zpyAmoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQCU\\nYIRYpONTSn/VWY5QL8BAF/BB7qdma7CWWVp35DJnnQIgWuKYukYHgePA1r27NVMq\\nctxrOc3TGnsVeR/tselouv4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/admin/tls/keystore/96e0a29dd65a623a4c7df43a5b85df5f542529af7c4571277d16e57ab0fc74e0_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key",
        "+ cp '/root/ca-tools/carrier/admin/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/carrier/admin/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/admin/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/admin/tls/tlscacerts/*': No such file or directory",
        "+ COUNTER=0",
        "+ '[' 0 -lt 2 ']'",
        "+ PEER=peer0.carrier-net",
        "+ CSR_HOSTS=peer0.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Checking for enrollment",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5a0}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203933b0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a2d0}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a2d0}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a5a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204d1290 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBwzCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATtVpqfhF14h9Wh9kcGtAyb/t0LGymu9oNtYYvqOJplwJ03vWusScawFz/vBE5Q\\nhaN9riwRZsT/VMiGs60f0Xx5oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNH\\nADBEAiAHlQIVdYhQY+dkJyAkn/qP0FdKLV/oK3MX5IxbftsPiQIgbAaJ32vwmYlS\\nJR9vgJXAO09hC5IQkvtAHjGJVimIEhs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBwzCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATtVpqfhF14h9Wh9kcGtAyb/t0LGymu9oNtYYvqOJplwJ03vWusScawFz/vBE5Q\\nhaN9riwRZsT/VMiGs60f0Xx5oIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNH\\nADBEAiAHlQIVdYhQY+dkJyAkn/qP0FdKLV/oK3MX5IxbftsPiQIgbAaJ32vwmYlS\\nJR9vgJXAO09hC5IQkvtAHjGJVimIEhs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/83939bfd96ae50d9de4f5fba63486a2167a0ab41d8fc692cb47c520635760599_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c600}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c600}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420257a20 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARTb6YTU8BPsw3A/J1JSkvAs6aBtobHQqKPKFeH+lD/pegUbMzM6sp2GcMcwPeD\\nLVplTAj9cCRVRDv+oat2oCUboDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0cAMEQCIHkl\\nfnd+ZXoqMCh/t1qWLkK+zAsNp8eobKLDIHuGwuBZAiAsfdWQsVAJvmQtRWYsOM+i\\n/OeMDQTgY/SgKJwE5+kkfw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARTb6YTU8BPsw3A/J1JSkvAs6aBtobHQqKPKFeH+lD/pegUbMzM6sp2GcMcwPeD\\nLVplTAj9cCRVRDv+oat2oCUboDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0cAMEQCIHkl\\nfnd+ZXoqMCh/t1qWLkK+zAsNp8eobKLDIHuGwuBZAiAsfdWQsVAJvmQtRWYsOM+i\\n/OeMDQTgY/SgKJwE5+kkfw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 1 -lt 2 ']'",
        "+ PEER=peer1.carrier-net",
        "+ CSR_HOSTS=peer1.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:10 [DEBUG] Checking for enrollment",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805a0}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420170bc0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016bfb0}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016bfb0}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037a5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42024f2c0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATgK2QIUjJhEthHMB6NSbf0JU9R3uXxx/QC9qFh/DrcDxquCsX4YgrwyV17WDzW\\ncomWbxRjPyZqUSlL3E6DU38XoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA3i6h4XkpvEx6J3O4Vh1BoGhcOhjANXsbpis96OheeGoCIE69oSYt3vGL\\nSmBB3z4VjNDExce2EW+zyztY24ZvFoSW\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATgK2QIUjJhEthHMB6NSbf0JU9R3uXxx/QC9qFh/DrcDxquCsX4YgrwyV17WDzW\\ncomWbxRjPyZqUSlL3E6DU38XoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA3i6h4XkpvEx6J3O4Vh1BoGhcOhjANXsbpis96OheeGoCIE69oSYt3vGL\\nSmBB3z4VjNDExce2EW+zyztY24ZvFoSW\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/1caecf76bd907421ebc7eb26b38bb5772cd9ffb91014865c493f5aedd868b0b0_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 16:21:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}",
        "2020/11/06 16:21:10 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a600}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42045f9e0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:10 [INFO] TLS Enabled",
        "2020/11/06 16:21:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:10 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:10 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:10 [INFO] encoded CSR",
        "2020/11/06 16:21:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS0QVMp4ZwKpO3k9pMkNIM0O9JNQhgZV6CJAD6/Dz7fUIUS5Y0+0Y20oi1hZumP\\nl+OU3ZrTQkleP1Bzcs7FZBgBoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDU\\nAhWoIYJkzBNyUBA9r1vGy2KklF+7ZJxsVN9PZAk5uwIgG8j1O5DXnT2VYNw1hx86\\noHW/4OvR/2VD9aC/yvpxoRA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS0QVMp4ZwKpO3k9pMkNIM0O9JNQhgZV6CJAD6/Dz7fUIUS5Y0+0Y20oi1hZumP\\nl+OU3ZrTQkleP1Bzcs7FZBgBoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDU\\nAhWoIYJkzBNyUBA9r1vGy2KklF+7ZJxsVN9PZAk5uwIgG8j1O5DXnT2VYNw1hx86\\noHW/4OvR/2VD9aC/yvpxoRA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 2 -lt 2 ']'",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ORG_NAME=carrier",
        "+ TYPE_FOLDER=peers",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ '[' peer '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@carrier-net",
        "+ ORG_USERPASS=User1@carrier-net-pw",
        "+ '[' peer = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:11 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 16:21:11 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:11 [DEBUG] Checking for enrollment",
        "2020/11/06 16:21:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203984e0}",
        "2020/11/06 16:21:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398540 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ea20 DummyKeystore:<nil>}",
        "2020/11/06 16:21:11 [INFO] TLS Enabled",
        "2020/11/06 16:21:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:11 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:11 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:11 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1",
        "2020/11/06 16:21:11 [DEBUG] Home directory: /root/ca-tools/carrier/client1",
        "2020/11/06 16:21:11 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml",
        "2020/11/06 16:21:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}",
        "2020/11/06 16:21:11 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062720}",
        "2020/11/06 16:21:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197ba0 DummyKeystore:<nil>}",
        "2020/11/06 16:21:11 [INFO] TLS Enabled",
        "2020/11/06 16:21:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:11 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:11 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:11 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:11 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:11 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:11 [INFO] encoded CSR",
        "2020/11/06 16:21:11 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASaINLvsQwCJkx8Z8/Fi/JXmWE4QnFyqOuI4EPpBREHkP4VBMKQofceQhu2W9QB\\nFXK09CWUUBYj5YfBfe8QCYAfoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDa\\n5LxbQ26Wj2+zfE60H8VFZ+imNRCqjetyFLXhy4q1vwIgdRmVKMPkYmJLmU7mYklw\\n9q0kKlymAd5qWERz820IgrY=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASaINLvsQwCJkx8Z8/Fi/JXmWE4QnFyqOuI4EPpBREHkP4VBMKQofceQhu2W9QB\\nFXK09CWUUBYj5YfBfe8QCYAfoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LWM4Nzg5MAoGCCqGSM49BAMCA0gAMEUCIQDa\\n5LxbQ26Wj2+zfE60H8VFZ+imNRCqjetyFLXhy4q1vwIgdRmVKMPkYmJLmU7mYklw\\n9q0kKlymAd5qWERz820IgrY=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /root/ca-tools/carrier/client1/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/client1/msp/signcerts/*' /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "2020/11/06 16:21:11 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 16:21:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203845d0}",
        "2020/11/06 16:21:11 [DEBUG] Entered runEnroll",
        "2020/11/06 16:21:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  }",
        "2020/11/06 16:21:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-c8789] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203845d0}",
        "2020/11/06 16:21:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420384630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 16:21:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a9910 DummyKeystore:<nil>}",
        "2020/11/06 16:21:11 [INFO] TLS Enabled",
        "2020/11/06 16:21:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 16:21:11 [DEBUG] Client Cert File: ",
        "2020/11/06 16:21:11 [DEBUG] Client Key File: ",
        "2020/11/06 16:21:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 16:21:11 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-c8789] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 16:21:11 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 16:21:11 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 16:21:11 [INFO] encoded CSR",
        "2020/11/06 16:21:11 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBP9pUzVPd+I1Fcty5MFPmkIWX04euORObufOOnMpHwbIY7j7VPBmH53JNXbcGSsy\\nRiLR802uXKHcFLeDgJ314h+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtYzg3ODkwCgYIKoZIzj0EAwIDRwAwRAIgZLzv\\nnG86fUfQyBlyvL7/6Ydm/nS1D92arpF0/rSnQroCIDK+7eK9buyY3GRdpCbdtfcf\\nb16doCQN6gZNt5FzdyX8\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-c8789\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBP9pUzVPd+I1Fcty5MFPmkIWX04euORObufOOnMpHwbIY7j7VPBmH53JNXbcGSsy\\nRiLR802uXKHcFLeDgJ314h+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtYzg3ODkwCgYIKoZIzj0EAwIDRwAwRAIgZLzv\\nnG86fUfQyBlyvL7/6Ydm/nS1D92arpF0/rSnQroCIDK+7eK9buyY3GRdpCbdtfcf\\nb16doCQN6gZNt5FzdyX8\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/client1/tls/keystore/763e516877379154a32b72b66554c955926323c49a611b5c2593ad9134ce45be_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key",
        "+ cp '/root/ca-tools/carrier/client1/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/carrier/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/client1/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\nRegistering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/peer : Copy the crypto config folder from the ca tools] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803 `" && echo ansible-tmp-1604679671.4860957-3542-84755402704803="` echo /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1n4weotv TO /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803/ /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679671.4860957-3542-84755402704803/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.740534",
    "end": "2020-11-06 16:21:12.357202",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:11.616668",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peer.yaml for each peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:58
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682 `" && echo ansible-tmp-1604679672.5290666-3584-83279955973682="` echo /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpf1tvjwcp TO /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682/ /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679672.5290666-3584-83279955973682/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.097355",
    "end": "2020-11-06 16:21:12.757434",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:12.660079",
    "stderr": "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412 `" && echo ansible-tmp-1604679672.8240995-3637-67059464413412="` echo /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpza6h_j5b TO /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412/ /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679672.8240995-3637-67059464413412/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282 `" && echo ansible-tmp-1604679673.4523344-3665-227896962968282="` echo /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpf9hyhhb8 TO /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282/ /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679673.4523344-3665-227896962968282/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759 `" && echo ansible-tmp-1604679674.0641618-3693-178129435281759="` echo /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkacw74qo TO /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759/ /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679674.0641618-3693-178129435281759/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.080163",
    "end": "2020-11-06 16:21:14.277892",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 16:21:14.197729",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236 `" && echo ansible-tmp-1604679674.3672504-3729-130932572508236="` echo /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpidfuyx85 TO /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236/ /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679674.3672504-3729-130932572508236/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624 `" && echo ansible-tmp-1604679674.5563068-3757-253817246925624="` echo /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpn3riadbs TO /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624/ /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679674.5563068-3757-253817246925624/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier.suneel.pvt.wmtbaf.info\nEOF\n",
    "delta": "0:00:00.002566",
    "end": "2020-11-06 16:21:14.690433",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier.suneel.pvt.wmtbaf.info\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:14.687867",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435 `" && echo ansible-tmp-1604679674.7524118-3785-102555033503435="` echo /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpgie_0o0r TO /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435/ /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679674.7524118-3785-102555033503435/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964 `" && echo ansible-tmp-1604679674.9489446-3811-256192982538964="` echo /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpj8tr6wcr TO /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964/ /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679674.9489446-3811-256192982538964/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
    "delta": "0:00:00.012347",
    "end": "2020-11-06 16:21:15.091605",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:15.079258",
    "stderr": "Ignoring -days; not generating a certificate\nSignature ok\nsubject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\nGetting CA Private Key",
    "stderr_lines": [
        "Ignoring -days; not generating a certificate",
        "Signature ok",
        "subject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "Getting CA Private Key"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908 `" && echo ansible-tmp-1604679675.1550643-3843-50803184901908="` echo /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp0znq94qq TO /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908/ /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679675.1550643-3843-50803184901908/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
    "delta": "0:00:00.113910",
    "end": "2020-11-06 16:21:15.399674",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:15.285764",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751 `" && echo ansible-tmp-1604679675.4660456-3875-246645650912751="` echo /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpd2q7rfw8 TO /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751/ /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679675.4660456-3875-246645650912751/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
    "delta": "0:00:00.139462",
    "end": "2020-11-06 16:21:15.735365",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:15.595903",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424 `" && echo ansible-tmp-1604679675.8055563-3907-170391495092424="` echo /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmph3n2mw6e TO /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424/ /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679675.8055563-3907-170391495092424/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
    "delta": "0:00:00.041622",
    "end": "2020-11-06 16:21:15.978362",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:15.936740",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador"
    ]
}

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244 `" && echo ansible-tmp-1604679676.0488753-3946-22870579892244="` echo /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpot0zqice TO /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244/ /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679676.0488753-3946-22870579892244/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.091648",
    "end": "2020-11-06 16:21:16.271654",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:16.180006",
    "stderr": "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003 `" && echo ansible-tmp-1604679676.3401961-3998-155485216560003="` echo /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp9tbrvs36 TO /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003/ /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679676.3401961-3998-155485216560003/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475 `" && echo ansible-tmp-1604679676.9721549-4026-169837021872475="` echo /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpbrx3ysg_ TO /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475/ /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679676.9721549-4026-169837021872475/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022 `" && echo ansible-tmp-1604679677.6025162-4054-277098460130022="` echo /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpi2u_o046 TO /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022/ /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679677.6025162-4054-277098460130022/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.054952",
    "end": "2020-11-06 16:21:17.788639",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:17.733687",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "data:\n  certificate: |-\n    -----BEGIN CERTIFICATE-----\n    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTYyMTE1WhcNMjMwODAzMTYy\n    MTE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG\n    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww\n    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOTMvhq72LvszOGWVfDknTzaJ9WJ2\n    cO9w+8mW2AE77d3a/IZJPp/X3cSjfmlFYlzxelzCpOWUaPRs1TG+cgWYBqNvMG0w\n    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFPDCd4wX\n    IoOG+Pm+3CYyovNpKLHhMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0\n    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD6mvjPYaMJpMyvdRDN9xN0\n    9/XKG2LQUwFH5XEDwCsTRwIhAKIaMe9QgzzmJqVAqZIuhQ0mZyatymi/MOowQvx1\n    aa1Z\n    -----END CERTIFICATE-----\n    -----BEGIN CERTIFICATE-----\n    MIIB7zCCAZagAwIBAgIUYDhT6xv9SkCuESRnoThq9KYTtJEwCgYIKoZIzj0EAwIw\n    VjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\n    MRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYDVQQDDApjYS5jYXJyaWVyMB4XDTIwMTEw\n    NjE2MTE1MVoXDTIzMDgyNzE2MTE1MVowVjELMAkGA1UEBhMCR0IxDzANBgNVBAgM\n    BkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9uMRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYD\n    VQQDDApjYS5jYXJyaWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5mDpqs/V\n    mZFhqyLzGZoyo+7waa7bxmaUaALOGbqHM7qg0kwyLpfyNeBAHvxW1j5h+s41aAA0\n    FmHMy1nEPOO7M6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYw\n    HQYDVR0OBBYEFPcALuNQdYcHPl3FeVaUqAh+LUuEMAoGCCqGSM49BAMCA0cAMEQC\n    IAoWq2UTikkMIKP3sI/LnRz4RsGBnl0KeS6GDgr+bIM0AiAEOBgrzNv6hv8dBoxY\n    mj/NugZy+7y1KdCsOVc+rWDazw==\n    -----END CERTIFICATE-----\n  clientcert: |-\n    -----BEGIN CERTIFICATE-----\n    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTYyMTE1WhcNMjMwODAzMTYy\n    MTE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG\n    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww\n    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOTMvhq72LvszOGWVfDknTzaJ9WJ2\n    cO9w+8mW2AE77d3a/IZJPp/X3cSjfmlFYlzxelzCpOWUaPRs1TG+cgWYBqNvMG0w\n    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFPDCd4wX\n    IoOG+Pm+3CYyovNpKLHhMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0\n    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD6mvjPYaMJpMyvdRDN9xN0\n    9/XKG2LQUwFH5XEDwCsTRwIhAKIaMe9QgzzmJqVAqZIuhQ0mZyatymi/MOowQvx1\n    aa1Z\n    -----END CERTIFICATE-----\n  key: |-\n    -----BEGIN EC PRIVATE KEY-----\n    MHcCAQEEIP0aag9UCrTWSb2DEM8sc/nCsZ/uzsXh0IAMCKXZkjgQoAoGCCqGSM49\n    AwEHoUQDQgAEOTMvhq72LvszOGWVfDknTzaJ9WJ2cO9w+8mW2AE77d3a/IZJPp/X\n    3cSjfmlFYlzxelzCpOWUaPRs1TG+cgWYBg==\n    -----END EC PRIVATE KEY-----\nlease_duration: 2764800\nlease_id: \"\"\nrenewable: false\nrequest_id: 473530e5-1aca-ae9e-ffe2-e3ba91ff79db\nwarnings: null",
    "stdout_lines": [
        "data:",
        "  certificate: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTYyMTE1WhcNMjMwODAzMTYy",
        "    MTE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG",
        "    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww",
        "    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOTMvhq72LvszOGWVfDknTzaJ9WJ2",
        "    cO9w+8mW2AE77d3a/IZJPp/X3cSjfmlFYlzxelzCpOWUaPRs1TG+cgWYBqNvMG0w",
        "    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFPDCd4wX",
        "    IoOG+Pm+3CYyovNpKLHhMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0",
        "    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD6mvjPYaMJpMyvdRDN9xN0",
        "    9/XKG2LQUwFH5XEDwCsTRwIhAKIaMe9QgzzmJqVAqZIuhQ0mZyatymi/MOowQvx1",
        "    aa1Z",
        "    -----END CERTIFICATE-----",
        "    -----BEGIN CERTIFICATE-----",
        "    MIIB7zCCAZagAwIBAgIUYDhT6xv9SkCuESRnoThq9KYTtJEwCgYIKoZIzj0EAwIw",
        "    VjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u",
        "    MRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYDVQQDDApjYS5jYXJyaWVyMB4XDTIwMTEw",
        "    NjE2MTE1MVoXDTIzMDgyNzE2MTE1MVowVjELMAkGA1UEBhMCR0IxDzANBgNVBAgM",
        "    BkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9uMRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYD",
        "    VQQDDApjYS5jYXJyaWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5mDpqs/V",
        "    mZFhqyLzGZoyo+7waa7bxmaUaALOGbqHM7qg0kwyLpfyNeBAHvxW1j5h+s41aAA0",
        "    FmHMy1nEPOO7M6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYw",
        "    HQYDVR0OBBYEFPcALuNQdYcHPl3FeVaUqAh+LUuEMAoGCCqGSM49BAMCA0cAMEQC",
        "    IAoWq2UTikkMIKP3sI/LnRz4RsGBnl0KeS6GDgr+bIM0AiAEOBgrzNv6hv8dBoxY",
        "    mj/NugZy+7y1KdCsOVc+rWDazw==",
        "    -----END CERTIFICATE-----",
        "  clientcert: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICPzCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTYyMTE1WhcNMjMwODAzMTYy",
        "    MTE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG",
        "    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww",
        "    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOTMvhq72LvszOGWVfDknTzaJ9WJ2",
        "    cO9w+8mW2AE77d3a/IZJPp/X3cSjfmlFYlzxelzCpOWUaPRs1TG+cgWYBqNvMG0w",
        "    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFPDCd4wX",
        "    IoOG+Pm+3CYyovNpKLHhMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0",
        "    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0kAMEYCIQD6mvjPYaMJpMyvdRDN9xN0",
        "    9/XKG2LQUwFH5XEDwCsTRwIhAKIaMe9QgzzmJqVAqZIuhQ0mZyatymi/MOowQvx1",
        "    aa1Z",
        "    -----END CERTIFICATE-----",
        "  key: |-",
        "    -----BEGIN EC PRIVATE KEY-----",
        "    MHcCAQEEIP0aag9UCrTWSb2DEM8sc/nCsZ/uzsXh0IAMCKXZkjgQoAoGCCqGSM49",
        "    AwEHoUQDQgAEOTMvhq72LvszOGWVfDknTzaJ9WJ2cO9w+8mW2AE77d3a/IZJPp/X",
        "    3cSjfmlFYlzxelzCpOWUaPRs1TG+cgWYBg==",
        "    -----END EC PRIVATE KEY-----",
        "lease_duration: 2764800",
        "lease_id: \"\"",
        "renewable: false",
        "request_id: 473530e5-1aca-ae9e-ffe2-e3ba91ff79db",
        "warnings: null"
    ]
}

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:19
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199 `" && echo ansible-tmp-1604679678.0218558-4097-163812199859199="` echo /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8v887mvv TO /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199/ /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679678.0218558-4097-163812199859199/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745 `" && echo ansible-tmp-1604679678.2389967-4123-263813053366745="` echo /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp8poc3sap TO /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/ /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpf_6q_ywz TO /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/ /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpivqe3ci_ TO /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/ /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "538fb5d06801421623456419c33a5d9fbec9b101",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpf_6q_ywz",
            "attributes": null,
            "backup": false,
            "checksum": "538fb5d06801421623456419c33a5d9fbec9b101",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "400f28c6cee096960b74295370c36fa0",
    "mode": "0644",
    "owner": "root",
    "size": 226,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679678.2389967-4123-263813053366745/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603 `" && echo ansible-tmp-1604679678.6533606-4163-200871147789603="` echo /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp81o5r7tu TO /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/ /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp1zjk31ul TO /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/ /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpnuei27d8 TO /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/ /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "1d4ae46d57a686c73501a609c4079a2ec0b1219d",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp1zjk31ul",
            "attributes": null,
            "backup": false,
            "checksum": "1d4ae46d57a686c73501a609c4079a2ec0b1219d",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "bf7d13be97bb04da5ee56b44a9fe37ce",
    "mode": "0644",
    "owner": "root",
    "size": 1571,
    "src": "/root/.ansible/tmp/ansible-tmp-1604679678.6533606-4163-200871147789603/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476 `" && echo ansible-tmp-1604679678.9851012-4203-218919977033476="` echo /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpkn4r8pvw TO /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476/ /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679678.9851012-4203-218919977033476/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "atime": 1604679675.0854118,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "848b3d233e45dabc2118fe3297a4eaf10965f180",
        "ctime": 1604679674.6854053,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3281,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604679674.6854053,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 265,
        "uid": 0,
        "version": "3464499930",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859 `" && echo ansible-tmp-1604679679.2193823-4233-68108072470859="` echo /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp27ahafkc TO /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859/ /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679679.2193823-4233-68108072470859/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key"
        }
    },
    "stat": {
        "atime": 1604679678.5174665,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "538fb5d06801421623456419c33a5d9fbec9b101",
        "ctime": 1604679678.5174665,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3286,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604679678.3774643,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 226,
        "uid": 0,
        "version": "3531495159",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the MSP config.yaml exist or not] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340 `" && echo ansible-tmp-1604679679.549511-4269-180148136430340="` echo /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpob5yfzm7 TO /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340/ /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679679.549511-4269-180148136430340/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp/config.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Create the msp directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661 `" && echo ansible-tmp-1604679679.733855-4295-58377105976661="` echo /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp_tozry0q TO /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661/ /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679679.733855-4295-58377105976661/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Create the MSP config.yaml file for orgs] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:79
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368 `" && echo ansible-tmp-1604679679.933965-4321-171258646537368="` echo /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpolt4kwfo TO /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368/ /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679679.933965-4321-171258646537368/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
    "delta": "0:00:00.002384",
    "end": "2020-11-06 16:21:20.066882",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 16:21:20.064498",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check that orderer-certificate file exists] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:96
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840 `" && echo ansible-tmp-1604679680.128695-4349-141251083472840="` echo /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpze4v9s3a TO /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840/ /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679680.128695-4349-141251083472840/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694 `" && echo ansible-tmp-1604679680.2952394-4349-8695405111694="` echo /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp7upxbdsb TO /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694/ /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679680.2952394-4349-8695405111694/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101 `" && echo ansible-tmp-1604679680.4603786-4349-59510730482101="` echo /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp381u6m87 TO /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101/ /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679680.4603786-4349-59510730482101/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Ensure orderer tls cert directory exists] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:108
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276 `" && echo ansible-tmp-1604679680.6585271-4423-32793198549276="` echo /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmp56y5lkzt TO /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276/ /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679680.6585271-4423-32793198549276/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378 `" && echo ansible-tmp-1604679680.8325822-4423-232387134217378="` echo /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpq0wtx3r5 TO /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378/ /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679680.8325822-4423-232387134217378/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742 `" && echo ansible-tmp-1604679681.0039606-4423-171625482651742="` echo /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-269362263fp6g/tmpx37kh6u8 TO /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742/ /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679681.0039606-4423-171625482651742/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Copy tls ca.crt from auto-generated path to given path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:120
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679681.2088668-4497-64967203633847 `" && echo ansible-tmp-1604679681.2088668-4497-64967203633847="` echo /root/.ansible/tmp/ansible-tmp-1604679681.2088668-4497-64967203633847 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679681.2088668-4497-64967203633847/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart.suneel.pvt.wmtbaf.info:8443"
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679681.2452016-4497-72712968352869 `" && echo ansible-tmp-1604679681.2452016-4497-72712968352869="` echo /root/.ansible/tmp/ansible-tmp-1604679681.2452016-4497-72712968352869 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679681.2452016-4497-72712968352869/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart.suneel.pvt.wmtbaf.info:8443"
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604679681.2810256-4497-71234763628979 `" && echo ansible-tmp-1604679681.2810256-4497-71234763628979="` echo /root/.ansible/tmp/ansible-tmp-1604679681.2810256-4497-71234763628979 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604679681.2810256-4497-71234763628979/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart.suneel.pvt.wmtbaf.info:8443"
    }
}

PLAY RECAP *********************************************************************
localhost                  : ok=300  changed=115  unreachable=0    failed=1    skipped=291  rescued=0    ignored=20  

