apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: supplychain-orderer3
  namespace: supplychain-net
  annotations:
    flux.weave.works/automated: "false"
spec:
  releaseName: supplychain-orderer3
  chart:
    git: ssh://git@github.com/bafsunsu/blockchain-automation-framework.git
    ref: local
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.0.0
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0

    orderer:
      name: orderer3
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://vault.suneelbaf.svc.cluster.local:8200
      role: vault-role
      authpath: supplychain-net-auth
      secretprefix: secret/crypto/ordererOrganizations/supplychain-net/orderers/orderer3.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: haproxy
      external_url_suffix: supplychain-net.svc.cluster.local

    genesis: |-
      CiIaIBsqUdRXYZF+KCULs07CdBL/HlTTtdyMalgyImIDp2B2Ep9TCpxTCplTCngKWggBEAEaBgii
      9f78BSIKc3lzY2hhbm5lbCpANTc0OGQ3ZjY3MzgxZmQzOGQxNzEzMTcxNDA1ZWEzYmVjNDk2NTU3
      MTEyOTNmY2E5ZTkzZmE5NTdkYTg0MTljMxIaEhj5IL/8Am45feK8U2LL+fKN6mUykZcMauoSnFIK
      mVISllISwSsKB09yZGVyZXIStSsSzhYKDnN1cHBseWNoYWluTVNQErsWGscUCgNNU1ASvxQStBQS
      sRQKDnN1cHBseWNoYWluTVNQEvEFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBREND
      QWFhZ0F3SUJBZ0lVQlljR0RDbG94T1BGQnZYK1hTTUpGS0RDaTk0d0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05NakF4TVRBeU1EYzBNakU1V2hjTk1qTXdPREl6TURjME1qRTVX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJLa1pO
      aGw4UHpYeWNMdzNMT05FUW0wWWJtQS9jZnBQUTg5R1I4M01yOHdpbkh4aHgzeTUKOXA4UHc0ZmN6
      djhvRnRwYzEzMHF5a21TZFZyenNOOEVTOFdqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUkQwZDdpem5JWUlhQUJpRmUxd0x3WkNT
      MzlWakFLCkJnZ3Foa2pPUFFRREFnTklBREJGQWlCWmM4dUU0MTdMQ29MYkhTdHpEcmVIdG9jcW9k
      bTJMcExmNXAzeE1nc1UKdEFJaEFKOWE2cnlsVlBuOUFxUFU3amZnM3EwZkJzVzg2RGdVYjYyT3Vq
      bmNSS2ZkCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIqYILS0tLS1CRUdJTiBDRVJUSUZJQ0FU
      RS0tLS0tCk1JSUM0ekNDQW9xZ0F3SUJBZ0lVSVhMczVMUnpKbWZPaEtUUUR3aUZQak9JenZFd0Nn
      WUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJq
      RVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZR
      UUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3CkhoY05NakF4TVRBeU1EYzBOakF3V2hjTk1q
      RXhNVEF5TURjMU1UQXdXakJ0TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5U
      QXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVE4dwpEUVlEVlFRTEV3
      WmpiR2xsYm5ReEhqQWNCZ05WQkFNTUZVRmtiV2x1UUhOMWNIQnNlV05vWVdsdUxXNWxkREJaCk1C
      TUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkdhNDdxWVoxZEZabEtwZ2wyeGowVTdwdGVL
      YWVmN1EKcjdGL2pKT3gzajB1bG9weWpMUG1MZmZ3aVhZZnlXYzU4YUN5NGNMWERlbkd1VEwwQXVE
      dlRFcWpnZ0VWTUlJQgpFVEFPQmdOVkhROEJBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURB
      ZEJnTlZIUTRFRmdRVW1ndEpFNXJQCnlKbytsRkY2NEVycGhXSzJ4Nmt3SHdZRFZSMGpCQmd3Rm9B
      VVE5SGU0czV5R0NHZ0FZaFh0Y0M4R1FrdC9WWXcKSkFZRFZSMFJCQjB3RzRJWlkyRXRkRzl2YkhN
      dE5qbGtOemc0TldZNE5pMDBOelpyZWpDQmlnWUlLZ01FQlFZSApDQUVFZm5zaVlYUjBjbk1pT25z
      aVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzCkltaG1Ma0ZtWm1s
      c2FXRjBhVzl1SWpvaUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2lRV1J0YVc1QWMzVncKY0d4
      NVkyaGhhVzR0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLQmdncWhrak9QUVFE
      QWdOSApBREJFQWlCcGJDOUNSV2tRdlRIR0Nsa3FsTVYwM1BlbXQrZkVQWExOUFNvYUhzN08vZ0ln
      RHVNYXVMVCttUVJGCndnTzBqL1ZIQTc5SDRNQUlydlphYUdWY1J5UHUvWVE9Ci0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrxBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt
      LS0tLQpNSUlDQURDQ0FhYWdBd0lCQWdJVUJZY0dEQ2xveE9QRkJ2WCtYU01KRktEQ2k5NHdDZ1lJ
      S29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ
      TUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFE
      REJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpBeE1UQXlNRGMwTWpFNVdoY05Nak13
      T0RJek1EYzBNakU1V2pCZU1Rc3dDUVlEVlFRR0V3SkhRakVQCk1BMEdBMVVFQ0F3R1RHOXVaRzl1
      TVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9NQjA5eVpHVnkKWlhJeEd6QVpCZ05W
      QkFNTUVtTmhMbk4xY0hCc2VXTm9ZV2x1TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5
      QXdFSEEwSUFCS2taTmhsOFB6WHljTHczTE9ORVFtMFlibUEvY2ZwUFE4OUdSODNNcjh3aW5IeGh4
      M3k1CjlwOFB3NGZjenY4b0Z0cGMxMzBxeWttU2RWcnpzTjhFUzhXalFqQkFNQThHQTFVZEV3RUIv
      d1FGTUFNQkFmOHcKRGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlJEMGQ3aXpuSVlJ
      YUFCaUZlMXdMd1pDUzM5VmpBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpQlpjOHVFNDE3TENvTGJI
      U3R6RHJlSHRvY3FvZG0yTHBMZjVwM3hNZ3NVCnRBSWhBSjlhNnJ5bFZQbjlBcVBVN2pmZzNxMGZC
      c1c4NkRnVWI2Mk91am5jUktmZAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjcK
      B1dyaXRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zIjgK
      BkFkbWlucxIuEiQIARIgEggSBggBEgIIABoUEhIKDnN1cHBseWNoYWluTVNQEAEaBkFkbWlucyI7
      CgtFbmRvcnNlbWVudBIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1p
      bnMiNwoHUmVhZGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1p
      bnMqBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucxomCgxDYXBhYmlsaXRp
      ZXMSFhIMCgoKBlYxXzRfMhIAGgZBZG1pbnMatBIKDUNvbnNlbnN1c1R5cGUSohISlxIKCGV0Y2Ry
      YWZ0EooSCvMRCipvcmRlcmVyMy5zdXBwbHljaGFpbi1uZXQuc3ZjLmNsdXN0ZXIubG9jYWwQ+0Ea
      3wgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBck9nQXdJQkFnSVVGRzg3NEdJ
      RzhhMzhJTy81QTJYQ3p2QWpCSE13Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJ
      eER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR
      S0RBZFBjbVJsY21WeU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhj
      Tk1qQXhNVEF5TURjME5qQXdXaGNOTWpFeE1UQXlNRGMxTVRBd1dqQnVNUXN3Q1FZRFZRUUdFd0pI
      UWpFYgpNQmtHQTFVRUJ4TVNOVEV1TlRBdkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZRFZRUUtFd2RQ
      Y21SbGNtVnlNUTB3CkN3WURWUVFMRXdSd1pXVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNeTV6
      ZFhCd2JIbGphR0ZwYmkxdVpYUXcKV1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJk
      azlTLzRqUlZWVngvMGcwWkJJYkxvRlNPTWJ4OAphanh0Qk1aZzNVTkMyeUpEVUhkRFRFZlRodllT
      VzI1T2VRN2Q0UlE1WTZCcGlPQzVINGI2b3NlUW80SUJQVENDCkFUa3dEZ1lEVlIwUEFRSC9CQVFE
      QWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1C
      QWY4RUFqQUFNQjBHQTFVZERnUVdCQlJFaCtXZHR1Qi9Bbm16S2tyNUFmR2JOSCtNUlRBZgpCZ05W
      SFNNRUdEQVdnQlJEMGQ3aXpuSVlJYUFCaUZlMXdMd1pDUzM5VmpCUEJnTlZIUkVFU0RCR2doaHZj
      bVJsCmNtVnlNeTV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NLbTl5WkdWeVpYSXpMbk4xY0hCc2VXTm9Z
      V2x1TFc1bGRDNXoKZG1NdVkyeDFjM1JsY2k1c2IyTmhiREJwQmdncUF3UUZCZ2NJQVFSZGV5Smhk
      SFJ5Y3lJNmV5Sm9aaTVCWm1acApiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpS
      Q0k2SW05eVpHVnlaWEl6TG5OMWNIQnNlV05vCllXbHVMVzVsZENJc0ltaG1MbFI1Y0dVaU9pSnda
      V1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lBV1kKVkFTeUFzRVoxK2JkOEdJaERQeG5j
      bXhTT1dvQUEwd1diZ0lVOWlyTUFpQXN0ZmR5enM5c0FPc0wwVU9zNFNyeQovK3hpcUx2RjNScnF0
      eS9XQlB4b3FBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi3wgtLS0tLUJFR0lOIENFUlRJ
      RklDQVRFLS0tLS0KTUlJREREQ0NBck9nQXdJQkFnSVVGRzg3NEdJRzhhMzhJTy81QTJYQ3p2QWpC
      SE13Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZi
      bVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dH
      UVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qQXhNVEF5TURjME5qQXdX
      aGNOTWpFeE1UQXlNRGMxTVRBd1dqQnVNUXN3Q1FZRFZRUUdFd0pIUWpFYgpNQmtHQTFVRUJ4TVNO
      VEV1TlRBdkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZRFZRUUtFd2RQY21SbGNtVnlNUTB3CkN3WURW
      UVFMRXdSd1pXVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNeTV6ZFhCd2JIbGphR0ZwYmkxdVpY
      UXcKV1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJkazlTLzRqUlZWVngvMGcwWkJJ
      YkxvRlNPTWJ4OAphanh0Qk1aZzNVTkMyeUpEVUhkRFRFZlRodllTVzI1T2VRN2Q0UlE1WTZCcGlP
      QzVINGI2b3NlUW80SUJQVENDCkFUa3dEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01C
      UUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERn
      UVdCQlJFaCtXZHR1Qi9Bbm16S2tyNUFmR2JOSCtNUlRBZgpCZ05WSFNNRUdEQVdnQlJEMGQ3aXpu
      SVlJYUFCaUZlMXdMd1pDUzM5VmpCUEJnTlZIUkVFU0RCR2doaHZjbVJsCmNtVnlNeTV6ZFhCd2JI
      bGphR0ZwYmkxdVpYU0NLbTl5WkdWeVpYSXpMbk4xY0hCc2VXTm9ZV2x1TFc1bGRDNXoKZG1NdVky
      eDFjM1JsY2k1c2IyTmhiREJwQmdncUF3UUZCZ2NJQVFSZGV5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1a
      cApiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW05eVpHVnlaWEl6TG5O
      MWNIQnNlV05vCllXbHVMVzVsZENJc0ltaG1MbFI1Y0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000
      OUJBTUNBMGNBTUVRQ0lBV1kKVkFTeUFzRVoxK2JkOEdJaERQeG5jbXhTT1dvQUEwd1diZ0lVOWly
      TUFpQXN0ZmR5enM5c0FPc0wwVU9zNFNyeQovK3hpcUx2RjNScnF0eS9XQlB4b3FBPT0KLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgBIAUogICACBoGQWRtaW5zGiIKCUJhdGNo
      U2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1p
      bnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJ
      CgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMiKgoP
      QmxvY2tWYWxpZGF0aW9uEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyoGQWRtaW5zEvojCgtDb25z
      b3J0aXVtcxLqIxKfIwoVU3VwcGx5Q2hhaW5Db25zb3J0aXVtEoUjEqciCgpjYXJyaWVyTVNQEpgi
      GrQgCgNNU1ASrCASoSASniAKCmNhcnJpZXJNU1AS6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0t
      LS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVFOGFYMGRjMEFIMUZhcjJCTlVQZE1DeVRLaE13Q2dZSUtv
      Wkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1B
      MEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERB
      NWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1ESXdOelF5TXpOYUZ3MHlNekE0TWpNd056
      UXlNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJn
      TlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1ky
      RXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFTQmR6
      M3hHdzJScWdaRWhscDNjMUk1Q3RzQlE2OER0YW5MQS8wNkQ4UzVBVWFDRXBSYzNVS1NlOEFPMVlC
      NApnZThBTW56VEd1M3AxTXlyZnlwRTFCUXZvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0
      R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVUtmRm1kcWtuY0IxUktwbStuNnJDMTdP
      ZVM2a3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnZlFvV3Q5dVVzVjFIeThyUUs1N1dLQnUwb1ZH
      WXdSaDducjdwQjhLS3hyc0NJUUNicjFMbwpJdnhVWVlvQUM1RGJaQXFZdWZhVVpyQU9XNWRqdXVn
      bklwdGxIQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIrYILS0tLS1CRUdJTiBDRVJUSUZJ
      Q0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVVERsbWlwRlBETHNRT1BLWVpudU9QVTdWM3ZF
      d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S
      dmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZ
      RFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNREl3TnpRM01EQmFGdzB5TVRF
      eE1ESXdOelV5TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4
      dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1O
      c2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpw
      ClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFaFBQVkdXdlhFWFM5
      R21MbjlhbEQKQjhEa1lreDVQT2ZUUlJ6SjlmZSsxa2hkMElmUjF6ZVdGb0VlNVpqNjhkTlo1cmIv
      K2pYamdrMTFVR0hMVHR5dgpBS09DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05W
      SFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUXlFWGRGTjVjT20xRXhOTkhidUlXNmJHMlZSREFm
      QmdOVkhTTUVHREFXZ0JRcDhXWjJxU2R3SFZFcW1iNmYKcXNMWHM1NUxxVEFrQmdOVkhSRUVIVEFi
      Z2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYTnRaR05tTUlHTwpCZ2dxQXdRRkJnY0lBUVNC
      Z1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEox
      WlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwK
      Ym5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVk
      Q0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUF4Unplbk1NNGxncDJ2VjNyZXp3N0E4QVhD
      a2x5VFhxWkVMYW5xWjR6Cjlnd0NJR3FXOHNGMFptSmlmVjNwaExWSldHSGJkS2EyWUVoUSszQzJN
      T3RpZlhLVAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK6QUtLS0t
      LUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVFOGFYMGRjMEFIMUZh
      cjJCTlVQZE1DeVRLaE13Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5C
      Z05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZ
      WEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1ESXdO
      elF5TXpOYUZ3MHlNekE0TWpNd056UXlNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApW
      UVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNt
      bGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJn
      Z3Foa2pPUFFNQkJ3TkMKQUFTQmR6M3hHdzJScWdaRWhscDNjMUk1Q3RzQlE2OER0YW5MQS8wNkQ4
      UzVBVWFDRXBSYzNVS1NlOEFPMVlCNApnZThBTW56VEd1M3AxTXlyZnlwRTFCUXZvMEl3UURBUEJn
      TlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVUtm
      Rm1kcWtuY0IxUktwbStuNnJDMTdPZVM2a3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnZlFvV3Q5
      dVVzVjFIeThyUUs1N1dLQnUwb1ZHWXdSaDducjdwQjhLS3hyc0NJUUNicjFMbwpJdnhVWVlvQUM1
      RGJaQXFZdWZhVVpyQU9XNWRqdXVnbklwdGxIQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      Wu4LCAES9AUK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFn
      SVVFOGFYMGRjMEFIMUZhcjJCTlVQZE1DeVRLaE13Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0Ex
      VUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1S
      QXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERB
      ZUZ3MHkKTURFeE1ESXdOelF5TXpOYUZ3MHlNekE0TWpNd056UXlNek5hTUZveEN6QUpCZ05WQkFZ
      VEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0
      R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RB
      VEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFTQmR6M3hHdzJScWdaRWhscDNjMUk1Q3Rz
      QlE2OER0YW5MQS8wNkQ4UzVBVWFDRXBSYzNVS1NlOEFPMVlCNApnZThBTW56VEd1M3AxTXlyZnlw
      RTFCUXZvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpB
      ZEJnTlZIUTRFRmdRVUtmRm1kcWtuY0IxUktwbStuNnJDMTdPZVM2a3dDZ1lJS29aSXpqMEUKQXdJ
      RFNBQXdSUUlnZlFvV3Q5dVVzVjFIeThyUUs1N1dLQnUwb1ZHWXdSaDducjdwQjhLS3hyc0NJUUNi
      cjFMbwpJdnhVWVlvQUM1RGJaQXFZdWZhVVpyQU9XNWRqdXVnbklwdGxIQT09Ci0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KEgZjbGllbnQa8gUK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQitEQ0NBWjZnQXdJQkFnSVVFOGFYMGRjMEFIMUZhcjJCTlVQZE1DeVRLaE13Q2dZSUtvWkl6
      ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB
      MVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZ
      UzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1ESXdOelF5TXpOYUZ3MHlNekE0TWpNd056UXlN
      ek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZC
      QWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZ
      MkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFTQmR6M3hH
      dzJScWdaRWhscDNjMUk1Q3RzQlE2OER0YW5MQS8wNkQ4UzVBVWFDRXBSYzNVS1NlOEFPMVlCNApn
      ZThBTW56VEd1M3AxTXlyZnlwRTFCUXZvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0Ex
      VWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVUtmRm1kcWtuY0IxUktwbStuNnJDMTdPZVM2
      a3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnZlFvV3Q5dVVzVjFIeThyUUs1N1dLQnUwb1ZHWXdS
      aDducjdwQjhLS3hyc0NJUUNicjFMbwpJdnhVWVlvQUM1RGJaQXFZdWZhVVpyQU9XNWRqdXVnbklw
      dGxIQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgRwZWVyGgZBZG1pbnMiMwoHV3JpdGVy
      cxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyI0CgZBZG1pbnMSKhIg
      CAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlucyI3CgtFbmRvcnNlbWVudBIo
      Eh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyIzCgdSZWFkZXJzEigSHggB
      EhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5lbENy
      ZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9D
      aGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwvT3Jk
      ZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGi0KGUJsb2NrRGF0YUhhc2hpbmdT
      dHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaYAoQT3JkZXJlckFkZHJlc3NlcxJMEjEKL29yZGVy
      ZXIzLnN1cHBseWNoYWluLW5ldC5zdmMuY2x1c3Rlci5sb2NhbDo4NDQzGhcvQ2hhbm5lbC9PcmRl
      cmVyL0FkbWlucxomCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMxIAGgZBZG1pbnMaJgoQSGFz
      aGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1p
      bnMQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRl
      cnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaDgoECgIKAAoACgAKAAoA
